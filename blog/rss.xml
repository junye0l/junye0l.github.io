<?xml version="1.0" encoding="utf-8"?><?xml-stylesheet type="text/xsl" href="rss.xsl"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>Junyeol Blog Blog</title>
        <link>https://junyeol.github.io/blog</link>
        <description>Junyeol Blog Blog</description>
        <lastBuildDate>Wed, 29 Oct 2025 00:00:00 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>ko</language>
        <item>
            <title><![CDATA[중급 프로젝트 회고]]></title>
            <link>https://junyeol.github.io/blog/middle-project-remind</link>
            <guid>https://junyeol.github.io/blog/middle-project-remind</guid>
            <pubDate>Wed, 29 Oct 2025 00:00:00 GMT</pubDate>
            <description><![CDATA[프로젝트 기간 : 2025-09-25 ~ 2025-10-22]]></description>
            <content:encoded><![CDATA[<p>프로젝트 기간 : 2025-09-25 ~ 2025-10-22</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-프로젝트를-시작하며">🤔 프로젝트를 시작하며<a href="https://junyeol.github.io/blog/middle-project-remind#-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8%EB%A5%BC-%EC%8B%9C%EC%9E%91%ED%95%98%EB%A9%B0" class="hash-link" aria-label="🤔 프로젝트를 시작하며에 대한 직접 링크" title="🤔 프로젝트를 시작하며에 대한 직접 링크">​</a></h2>
<p>3주가 넘는 기간동안 중급 프로젝트를 진행하였습니다. 이번 파트때도 팀장을 맡게되어 조금 힘들었지만 좋은 팀원들이 있었기에 성공적으로 프로젝트를 마칠 수 있었습니다.<br>
개인적으로 많은 성장을 한 프로젝트이기에 시간이 조금 지났지만 회고글을 작성해보려고 합니다.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-프로젝트-선정-및-소개">✨ 프로젝트 선정 및 소개<a href="https://junyeol.github.io/blog/middle-project-remind#-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%EC%84%A0%EC%A0%95-%EB%B0%8F-%EC%86%8C%EA%B0%9C" class="hash-link" aria-label="✨ 프로젝트 선정 및 소개에 대한 직접 링크" title="✨ 프로젝트 선정 및 소개에 대한 직접 링크">​</a></h2>
<p>부트캠프 기간동안 총 3번의 프로젝트를 진행하게 됩니다. 그 중 2번째 프로젝트에 대한 얘기를 시작해보겠습니다. <br>
저희 팀은 <code>WHYNE</code> 이라는 브랜드 네임을 가진 사용자의 리뷰와 평가를 바탕으로 나만의 와인창고를 만드는 웹사이트 프로젝트를 진행하게 되었습니다.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-프로젝트-선정-이유">✨ 프로젝트 선정 이유<a href="https://junyeol.github.io/blog/middle-project-remind#-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%EC%84%A0%EC%A0%95-%EC%9D%B4%EC%9C%A0" class="hash-link" aria-label="✨ 프로젝트 선정 이유에 대한 직접 링크" title="✨ 프로젝트 선정 이유에 대한 직접 링크">​</a></h2>
<p>프로젝트 주제를 선정하기 위해서 가장 중요한게 생각했던 부분은 팀원들의 의견이 가장 컸습니다. <br>
단순히 <code>CRUD</code>를 구현하는 것이 아닌, 우리만의 특별한 기능을 넣을 수 있을만한 주제를 선정하기 위해 팀원들과 상의하였고, 그 중에서도 깔끔한 디자인을 갖고있던 <code>WHYNE</code>으로 선정하게 되었습니다.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-프로젝트-과정">📚 프로젝트 과정<a href="https://junyeol.github.io/blog/middle-project-remind#-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%EA%B3%BC%EC%A0%95" class="hash-link" aria-label="📚 프로젝트 과정에 대한 직접 링크" title="📚 프로젝트 과정에 대한 직접 링크">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="1-rr-분배">1. R&amp;R 분배<a href="https://junyeol.github.io/blog/middle-project-remind#1-rr-%EB%B6%84%EB%B0%B0" class="hash-link" aria-label="1. R&amp;R 분배에 대한 직접 링크" title="1. R&amp;R 분배에 대한 직접 링크">​</a></h3>
<p>초급 프로젝트에서의 아쉬움을 뒤로하고 중급 프로젝트에서는 많은 기능과 컴포넌트를 만들고 싶어 아래와 같은 R&amp;R 분배를 했습니다.</p>
<ul>
<li>프로젝트 기초 세팅</li>
<li>랜딩페이지</li>
<li>와인 상세페이지</li>
<li>리뷰 등록/수정 페이지</li>
<li>Taste 컴포넌트</li>
<li>리뷰 등록/수정 모달</li>
<li>무한스크롤</li>
<li>Toast</li>
</ul>
<p>총 8가지의 R&amp;R을 분배받아 프로젝트를 진행하였습니다.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="2-프로젝트-계획">2. 프로젝트 계획<a href="https://junyeol.github.io/blog/middle-project-remind#2-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%EA%B3%84%ED%9A%8D" class="hash-link" aria-label="2. 프로젝트 계획에 대한 직접 링크" title="2. 프로젝트 계획에 대한 직접 링크">​</a></h3>
<p>프로젝트를 진행하기 전에 아래와 같은 목표를 세웠습니다. <br>
생각보다 3주라는 시간은 매우 짧았기에, 다른팀들보다 먼저 시작하여 추가기능을 도입하고자 하는 목표를 세웠습니다.
그렇기에 1주차는 컴포넌트 개발, 2주차는 페이지 개발, 3주차는 추가기능 및 QA를 목표로 프로젝트를 시작하였습니다.</p>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="2-1-협업-툴-선정">2-1. 협업 툴 선정<a href="https://junyeol.github.io/blog/middle-project-remind#2-1-%ED%98%91%EC%97%85-%ED%88%B4-%EC%84%A0%EC%A0%95" class="hash-link" aria-label="2-1. 협업 툴 선정에 대한 직접 링크" title="2-1. 협업 툴 선정에 대한 직접 링크">​</a></h4>
<p>일단 기본적으로 <code>Figma</code>를 사용하여 요구사항에 대한 디자인을 확인하였고, <code>Notion</code>를 사용하여 전체적인 프로젝트 관리를 진행하였습니다. 그리고 <code>github</code>를 사용하여 코드를 관리하였습니다.</p>
<p>또한 실시간 소통 및 코드리뷰를 위해 <code>Discord</code> 사용하고 이슈 및 애로사항 공유를 위해 <code>Zep</code>이라는 플랫폼을 활용하여 코어타임과 팀회의를 매일 성실하게 참여하였습니다.</p>
<p>팀장의 역할을 성실하게 수행하기위해 <code>Discord WebHook</code> 및 <code>Zep WorkSpace</code>를 직접 설정하고 제작하여 팀원들의 편의성을 높혔습니다.</p>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="2-2-협업-전략">2-2. 협업 전략<a href="https://junyeol.github.io/blog/middle-project-remind#2-2-%ED%98%91%EC%97%85-%EC%A0%84%EB%9E%B5" class="hash-link" aria-label="2-2. 협업 전략에 대한 직접 링크" title="2-2. 협업 전략에 대한 직접 링크">​</a></h4>
<p><code>GitHub Organization</code>을 사용하여 팀 레포지토리를 생성한 후, <code>fork</code> 방식이 아닌 팀 레포지토리에 직접 <code>Push</code>하는 방식을 사용하였습니다.</p>
<p>총 3개의 브랜치를 활용하여 깃 전략을 세웠고, <code>main</code> <code>develop</code> <code>개별 브랜치</code>로 통일하여 기능별 혹은 디자인별로 브랜치를 생성하여 <code>develop</code> 브랜치로 <code>Push</code> 및 <code>PR</code>을 진행한 후 <code>main</code> 브랜치로 <code>Merge</code>를 진행하였습니다.</p>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="2-3-팀장의-역할">2-3. 팀장의 역할<a href="https://junyeol.github.io/blog/middle-project-remind#2-3-%ED%8C%80%EC%9E%A5%EC%9D%98-%EC%97%AD%ED%95%A0" class="hash-link" aria-label="2-3. 팀장의 역할에 대한 직접 링크" title="2-3. 팀장의 역할에 대한 직접 링크">​</a></h4>
<p>팀장의 역할 중 개인적으로 가장 중요하게 생각했던 부분은 팀의 화합이였습니다.</p>
<p>누구하나 뒤쳐지지않고 프로젝트에 잘 참여할수 있도록 팀미팅 분위기 및 수시로 소통을 하며 팀원들과 친해졌고, 어느 팀보다 좋은 분위기속에서 프로젝트를 마무리 할 수 있었습니다.</p>
<div class="language-mermaid codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-mermaid codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">- 일단 팀장 역할 수행하시느라 고생많으셨습니다.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">프로젝트 세팅부터 책임지고 꼼꼼하게 진행해주시는 모습을 보고 믿음이 간 것 같습니다.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">또한 같이 프로젝트 진행하면서 여러가지 새로운 시도들을 많이 해본 것 같습니다.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">팀 회의 때 마다 분위기도 밝게 이어나가주셔서 감사합니다.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">- 항상 밝은 분위기와 긍정적인 에너지로 팀을 이끌어 주셔서 팀 전체가 좋은 분위기에서 프로젝트를 진행할 수 있었습니다.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">팀장 역할로 바쁜 와중에도 팀원 개개인과 프로젝트 일정을 꼼꼼히 챙겨주시고, 전체적인 진행 상황을 균형감 있게 관리해 주신 점이 감사하고,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">개인 역할도 성실히 수행하시면서 코드 리뷰도 꾸준히 세심하게 남겨주셔서 많이 배울 수 있었고 성장하는 데 큰 도움이 되었습니다!</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">- 팀장 역할을 잘 해주셔서, 소통 과정에서 많은 도움을 받을 수 있었습니다. 감사합니다.</span><br></span></code></pre></div></div>
<p>파트를 마무리하고 위와 같은 피어리뷰를 받으면서 나의 행동들이 결코 틀리지 않았다는걸 깨닫게 되면서 앞으로도 소프트스킬을 더욱 키워나가야겠다고 생각하게 되었습니다.</p>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="2-4-그라운드-룰">2-4. 그라운드 룰<a href="https://junyeol.github.io/blog/middle-project-remind#2-4-%EA%B7%B8%EB%9D%BC%EC%9A%B4%EB%93%9C-%EB%A3%B0" class="hash-link" aria-label="2-4. 그라운드 룰에 대한 직접 링크" title="2-4. 그라운드 룰에 대한 직접 링크">​</a></h4>
<p>프로젝트를 본격적으로 진행하기에 앞서 팀 그라운드룰을 정해 항상 리마인드하여 팀원분들이 까먹지 않도록 진행하였습니다.<br></p>
<p>첫 번째로, 데일리 팀 스크럼은 <code>PM 13:30</code>에 진행되며, <code>Zep</code>을 활용하여 작업 및 애로사항들을 공유하였습니다.<br></p>
<p>두 번째로, 코어타임을 짧은 시간이 아닌 매일 <code>AM 09:00 ~ PM 18:00</code>으로 정하여 언제든 팀원들끼리 소통할 수 있도록 했습니다.<br></p>
<p>마지막으로, <code>Notion</code>을 이용하여 팀원들의 진행사항 및 <code>QA</code>를 작성하여 문서화하는 습관을 들였습니다.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="️-기술스택-선정">🛠️ 기술스택 선정<a href="https://junyeol.github.io/blog/middle-project-remind#%EF%B8%8F-%EA%B8%B0%EC%88%A0%EC%8A%A4%ED%83%9D-%EC%84%A0%EC%A0%95" class="hash-link" aria-label="🛠️ 기술스택 선정에 대한 직접 링크" title="🛠️ 기술스택 선정에 대한 직접 링크">​</a></h3>
<p>저희 팀은 Next.js 15버전을 사용하여 <code>App router</code>을 기본 라우팅 방식으로 선정하였고, 팀원 모두 <code>Tailwind</code> 경험이 있어 스타일링 방식은 손쉽게 결정하였습니다.<br></p>
<p>또한 다른팀보다 시간적 여유가 있었기에 컨벤션을 지키기 위한 <code>husky+lint-staged</code>를 사용하여 컨벤션을 지키고 깨끗한 코드를 유지하였습니다. <br></p>
<p>그리고 공통컴포넌트 문서화를 위해 <code>Storybook</code>을 사용하여 공통 컴포넌트를 문서화하였습니다.<br></p>
<p><code>Axios + Tanstack Query</code>를 사용하여 API를 호출하고, <code>Vercel</code>을 사용하여 배포하였습니다.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="-프로젝트-진행-과정">🐝 프로젝트 진행 과정<a href="https://junyeol.github.io/blog/middle-project-remind#-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%EC%A7%84%ED%96%89-%EA%B3%BC%EC%A0%95" class="hash-link" aria-label="🐝 프로젝트 진행 과정에 대한 직접 링크" title="🐝 프로젝트 진행 과정에 대한 직접 링크">​</a></h3>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="4-첫-위기">4. 첫 위기<a href="https://junyeol.github.io/blog/middle-project-remind#4-%EC%B2%AB-%EC%9C%84%EA%B8%B0" class="hash-link" aria-label="4. 첫 위기에 대한 직접 링크" title="4. 첫 위기에 대한 직접 링크">​</a></h4>
<p>프로젝트를 진행하면서, 팀원 한 분이 취업으로 인해 중도하차를 하게되어 미리 짜여져있던 개발 계획이 어그러져 시간적 낭비를 하게되었습니다. <br></p>
<p>하지만 팀원 모두 개인시간까지 투자하여 중도하차 팀원의 작업까지 서로 알맞게 분배하여 큰 트러블 없이 진행할 수 있었습니다. <br></p>
<p>이 과정에서 느꼈던 점은 계획은 계획일뿐 항상 원하는대로 이루어지지 않는다는 것을 알았고 다음에는 더 체계적으로 계획을 세워 팀원들의 혼란을 줄여야겠다고 생각하게 되었습니다.</p>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="5-빌드-간소화">5. 빌드 간소화<a href="https://junyeol.github.io/blog/middle-project-remind#5-%EB%B9%8C%EB%93%9C-%EA%B0%84%EC%86%8C%ED%99%94" class="hash-link" aria-label="5. 빌드 간소화에 대한 직접 링크" title="5. 빌드 간소화에 대한 직접 링크">​</a></h4>
<p>실시간 코드리뷰를 진행하면서 <code>PR</code>과 <code>Merge</code>를 할 때마다 <code>Storybook</code> 배포로 인한 파이프라인 낭비가 발생하여 개발 속도가 늦어지는 경우가 빈번했습니다.<br></p>
<p>그렇기에 이 문제점을 해결하기 위해 팀원들과 회의를 하였고 팀장인 제가 <code>Storybook</code>을 조건부적으로 배포할 수 있는 방법을 찾게 되었습니다.<br></p>
<p>방법을 찾아 내용을 팀원들과 공유하였고 시간이 오래 걸리지않겠냐는 팀원들의 우려속에서도 포기하지않고 책임감있게 진행하여 빠른시간내에 해결하였습니다.<br></p>
<p>이렇게 팀원들과 함께 노력하여 빌드 간소화를 성공적으로 수행하여 프로젝트가 끝날때까지 개발 속도를 높일 수 있었습니다.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="️-프로젝트-결과">⭐️ 프로젝트 결과<a href="https://junyeol.github.io/blog/middle-project-remind#%EF%B8%8F-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%EA%B2%B0%EA%B3%BC" class="hash-link" aria-label="⭐️ 프로젝트 결과에 대한 직접 링크" title="⭐️ 프로젝트 결과에 대한 직접 링크">​</a></h2>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-kpt-회고">🌱 KPT 회고<a href="https://junyeol.github.io/blog/middle-project-remind#-kpt-%ED%9A%8C%EA%B3%A0" class="hash-link" aria-label="🌱 KPT 회고에 대한 직접 링크" title="🌱 KPT 회고에 대한 직접 링크">​</a></h2>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-다음-프로젝트에서-개선해야할-나의-모습">🤔 다음 프로젝트에서 개선해야할 나의 모습<a href="https://junyeol.github.io/blog/middle-project-remind#-%EB%8B%A4%EC%9D%8C-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8%EC%97%90%EC%84%9C-%EA%B0%9C%EC%84%A0%ED%95%B4%EC%95%BC%ED%95%A0-%EB%82%98%EC%9D%98-%EB%AA%A8%EC%8A%B5" class="hash-link" aria-label="🤔 다음 프로젝트에서 개선해야할 나의 모습에 대한 직접 링크" title="🤔 다음 프로젝트에서 개선해야할 나의 모습에 대한 직접 링크">​</a></h2>]]></content:encoded>
            <category>Next.js</category>
            <category>tailwind</category>
            <category>typescript</category>
            <category>storybook</category>
            <category>husky</category>
            <category>lint-staged</category>
            <category>vercel</category>
            <category>axios</category>
            <category>tanstack-query</category>
        </item>
        <item>
            <title><![CDATA[클래스]]></title>
            <link>https://junyeol.github.io/blog/core-javascript-week10</link>
            <guid>https://junyeol.github.io/blog/core-javascript-week10</guid>
            <pubDate>Wed, 15 Oct 2025 00:00:00 GMT</pubDate>
            <description><![CDATA[1. 클래스와 인스턴스의 개념 이해]]></description>
            <content:encoded><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="1-클래스와-인스턴스의-개념-이해">1. 클래스와 인스턴스의 개념 이해<a href="https://junyeol.github.io/blog/core-javascript-week10#1-%ED%81%B4%EB%9E%98%EC%8A%A4%EC%99%80-%EC%9D%B8%EC%8A%A4%ED%84%B4%EC%8A%A4%EC%9D%98-%EA%B0%9C%EB%85%90-%EC%9D%B4%ED%95%B4" class="hash-link" aria-label="1. 클래스와 인스턴스의 개념 이해에 대한 직접 링크" title="1. 클래스와 인스턴스의 개념 이해에 대한 직접 링크">​</a></h2>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="클래스-는-붕어빵-틀-인스턴스-는-붕어빵이라고-생각하면-편하다"><code>클래스</code> 는 붕어빵 틀, <code>인스턴스</code> 는 붕어빵이라고 생각하면 편하다.<a href="https://junyeol.github.io/blog/core-javascript-week10#%ED%81%B4%EB%9E%98%EC%8A%A4-%EB%8A%94-%EB%B6%95%EC%96%B4%EB%B9%B5-%ED%8B%80-%EC%9D%B8%EC%8A%A4%ED%84%B4%EC%8A%A4-%EB%8A%94-%EB%B6%95%EC%96%B4%EB%B9%B5%EC%9D%B4%EB%9D%BC%EA%B3%A0-%EC%83%9D%EA%B0%81%ED%95%98%EB%A9%B4-%ED%8E%B8%ED%95%98%EB%8B%A4" class="hash-link" aria-label="클래스-는-붕어빵-틀-인스턴스-는-붕어빵이라고-생각하면-편하다에 대한 직접 링크" title="클래스-는-붕어빵-틀-인스턴스-는-붕어빵이라고-생각하면-편하다에 대한 직접 링크">​</a></h4>
<ul>
<li><strong>상위클래스</strong> - superclass</li>
<li><strong>하위클래스</strong> - subclass -&gt; 부모의 특징을 물려받음</li>
</ul>
<br>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="2-자바스크립트의-클래스">2. 자바스크립트의 클래스<a href="https://junyeol.github.io/blog/core-javascript-week10#2-%EC%9E%90%EB%B0%94%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8%EC%9D%98-%ED%81%B4%EB%9E%98%EC%8A%A4" class="hash-link" aria-label="2. 자바스크립트의 클래스에 대한 직접 링크" title="2. 자바스크립트의 클래스에 대한 직접 링크">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="프로토타입-기반-상속">프로토타입 기반 상속<a href="https://junyeol.github.io/blog/core-javascript-week10#%ED%94%84%EB%A1%9C%ED%86%A0%ED%83%80%EC%9E%85-%EA%B8%B0%EB%B0%98-%EC%83%81%EC%86%8D" class="hash-link" aria-label="프로토타입 기반 상속에 대한 직접 링크" title="프로토타입 기반 상속에 대한 직접 링크">​</a></h3>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="자바스크립트에서는-생성자-함수와-프로토타입을-이용해-클래스를-구현한다">자바스크립트에서는 생성자 함수와 프로토타입을 이용해 클래스를 구현한다.<a href="https://junyeol.github.io/blog/core-javascript-week10#%EC%9E%90%EB%B0%94%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8%EC%97%90%EC%84%9C%EB%8A%94-%EC%83%9D%EC%84%B1%EC%9E%90-%ED%95%A8%EC%88%98%EC%99%80-%ED%94%84%EB%A1%9C%ED%86%A0%ED%83%80%EC%9E%85%EC%9D%84-%EC%9D%B4%EC%9A%A9%ED%95%B4-%ED%81%B4%EB%9E%98%EC%8A%A4%EB%A5%BC-%EA%B5%AC%ED%98%84%ED%95%9C%EB%8B%A4" class="hash-link" aria-label="자바스크립트에서는 생성자 함수와 프로토타입을 이용해 클래스를 구현한다.에 대한 직접 링크" title="자바스크립트에서는 생성자 함수와 프로토타입을 이용해 클래스를 구현한다.에 대한 직접 링크">​</a></h4>
<ul>
<li>생성자 함수 Array를 new 연산자와 호출하면 인스턴스가 생성된다.</li>
<li>이때 Array를 일종의 클래스라고 하면, Array의 prototype 객체 내부 요소들이 인스턴스에 상속된다고 볼 수 있다.</li>
<li>인스턴스에 상속되는지(인스턴스가 참조하는지) 여부에 따라 스태틱 멤버와 인스턴스 멤버로 나뉜다.</li>
</ul>
<div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">// 생성자 함수</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">var</span><span class="token plain"> </span><span class="token function-variable function" style="color:#d73a49">Rectangle</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">width</span><span class="token parameter punctuation" style="color:#393A34">,</span><span class="token parameter"> height</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">width </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> width</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">height </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> height</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// 프로토타입 메서드 정의 (모든 인스턴스가 공유)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token class-name">Rectangle</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">prototype</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function-variable function" style="color:#d73a49">getArea</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">width </span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">height</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// 스태틱 메서드 정의 (클래스 자체에 속함)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Rectangle</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function-variable function" style="color:#d73a49">isRectangle</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">instance</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    instance </span><span class="token keyword" style="color:#00009f">instanceof</span><span class="token plain"> </span><span class="token class-name">Rectangle</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&amp;&amp;</span><span class="token plain"> instance</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">width </span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&amp;&amp;</span><span class="token plain"> instance</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">height </span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">var</span><span class="token plain"> rect1 </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> </span><span class="token class-name">Rectangle</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">3</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">4</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">console</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">log</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">rect1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">getArea</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// 정상 작동, 출력: 12</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// 잘못된 호출: rect1은 스태틱 메서드를 호출할 수 없다.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">console</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">log</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">rect1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">isRectangle</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">rect1</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// TypeError: rect1.isRectangle is not a function</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// 올바른 호출: 스태틱 메서드는 클래스 이름을 통해 호출해야 한다.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">console</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">log</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">Rectangle</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">isRectangle</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">rect1</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// true</span><br></span></code></pre></div></div>
<br>
<br>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="3-클래스-상속">3. 클래스 상속<a href="https://junyeol.github.io/blog/core-javascript-week10#3-%ED%81%B4%EB%9E%98%EC%8A%A4-%EC%83%81%EC%86%8D" class="hash-link" aria-label="3. 클래스 상속에 대한 직접 링크" title="3. 클래스 상속에 대한 직접 링크">​</a></h2>
<ul>
<li>ES5까지의 자바스크립트에는 클래스가 없다. ES6에서 클래스가 도입됐지만 역시나 prototype을 기반으로 한 것이다.</li>
<li>자바스크립트에서 클래스 상속을 구현했다는 것은 결국 프로토타입 체이닝을 잘 연결한 것이다.</li>
</ul>
<br>
<div class="theme-admonition theme-admonition-info admonition_xJq3 alert alert--info"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"></path></svg></span>정보</div><div class="admonitionContent_BuS1"><p>단순히 <code>SubClass.prototype = new SuperClass()</code> 를 하면, 부모의 인스턴스 프로퍼티까지 상속되는 문제가 발생한다.</p></div></div>
<br>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="하위클래스의-프로토타입이-상위클래스의-인스턴스-프로퍼티를-가지지-않게-하는-방법">하위클래스의 프로토타입이 상위클래스의 인스턴스 프로퍼티를 가지지 않게 하는 방법<a href="https://junyeol.github.io/blog/core-javascript-week10#%ED%95%98%EC%9C%84%ED%81%B4%EB%9E%98%EC%8A%A4%EC%9D%98-%ED%94%84%EB%A1%9C%ED%86%A0%ED%83%80%EC%9E%85%EC%9D%B4-%EC%83%81%EC%9C%84%ED%81%B4%EB%9E%98%EC%8A%A4%EC%9D%98-%EC%9D%B8%EC%8A%A4%ED%84%B4%EC%8A%A4-%ED%94%84%EB%A1%9C%ED%8D%BC%ED%8B%B0%EB%A5%BC-%EA%B0%80%EC%A7%80%EC%A7%80-%EC%95%8A%EA%B2%8C-%ED%95%98%EB%8A%94-%EB%B0%A9%EB%B2%95" class="hash-link" aria-label="하위클래스의 프로토타입이 상위클래스의 인스턴스 프로퍼티를 가지지 않게 하는 방법에 대한 직접 링크" title="하위클래스의 프로토타입이 상위클래스의 인스턴스 프로퍼티를 가지지 않게 하는 방법에 대한 직접 링크">​</a></h3>
<br>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="방법-1-인스턴스-생성-후-프로퍼티-제거">방법 1: 인스턴스 생성 후 프로퍼티 제거<a href="https://junyeol.github.io/blog/core-javascript-week10#%EB%B0%A9%EB%B2%95-1-%EC%9D%B8%EC%8A%A4%ED%84%B4%EC%8A%A4-%EC%83%9D%EC%84%B1-%ED%9B%84-%ED%94%84%EB%A1%9C%ED%8D%BC%ED%8B%B0-%EC%A0%9C%EA%B1%B0" class="hash-link" aria-label="방법 1: 인스턴스 생성 후 프로퍼티 제거에 대한 직접 링크" title="방법 1: 인스턴스 생성 후 프로퍼티 제거에 대한 직접 링크">​</a></h4>
<p>상속을 통해 자식 클래스가 부모 클래스의 메서드를 활용하면서도 자식 클래스의 고유한 메서드를 가질 수 있도록 설정할 수 있음</p>
<div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">var</span><span class="token plain"> </span><span class="token function-variable function" style="color:#d73a49">extendClass1</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">SuperClass</span><span class="token parameter punctuation" style="color:#393A34">,</span><span class="token parameter"> SubClass</span><span class="token parameter punctuation" style="color:#393A34">,</span><span class="token parameter"> subMethods</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">// SubClass의 프로토타입을 SuperClass의 인스턴스로 설정하여 상속 구조를 만든다.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token class-name">SubClass</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">prototype </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> </span><span class="token class-name">SuperClass</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">// 상속된 프로토타입에서 자신의 프로퍼티(인스턴스 프로퍼티)를 제거</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">for</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">var</span><span class="token plain"> prop </span><span class="token keyword" style="color:#00009f">in</span><span class="token plain"> </span><span class="token class-name">SubClass</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">prototype</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token class-name">SubClass</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">prototype</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">hasOwnProperty</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">prop</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword" style="color:#00009f">delete</span><span class="token plain"> </span><span class="token class-name">SubClass</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">prototype</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">prop</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">// subMethods가 제공된 경우, 이를 SubClass의 프로토타입에 추가한다.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">subMethods</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">for</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">var</span><span class="token plain"> method </span><span class="token keyword" style="color:#00009f">in</span><span class="token plain"> subMethods</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token class-name">SubClass</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">prototype</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">method</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> subMethods</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">method</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">// SubClass의 프로토타입을 동결하여 변경 불가능하게 만든다.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  Object</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">freeze</span><span class="token punctuation" style="color:#393A34">(</span><span class="token class-name">SubClass</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">prototype</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> SubClass</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// Rectangle 클래스 정의</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">var</span><span class="token plain"> </span><span class="token function-variable function" style="color:#d73a49">Rectangle</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">width</span><span class="token parameter punctuation" style="color:#393A34">,</span><span class="token parameter"> height</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">width </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> width</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">height </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> height</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// Rectangle 클래스의 프로토타입 메서드 정의</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token class-name">Rectangle</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">prototype</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function-variable function" style="color:#d73a49">getArea</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">width </span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">height</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// Square 클래스 정의 및 Rectangle 클래스 상속</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">var</span><span class="token plain"> Square </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">extendClass1</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">Rectangle</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">width</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">// Rectangle 생성자를 호출하여 너비와 높이를 동일하게 설정</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token function" style="color:#d73a49">Rectangle</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">call</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> width</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> width</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// Square 인스턴스 생성</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">var</span><span class="token plain"> sq </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> </span><span class="token class-name">Square</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">5</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// Square 인스턴스에서 Rectangle 클래스의 메서드 사용</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">console</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">log</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">sq</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">getArea</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// 25</span><br></span></code></pre></div></div>
<br>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="방법-2-빈-함수를-활용">방법 2: 빈 함수를 활용<a href="https://junyeol.github.io/blog/core-javascript-week10#%EB%B0%A9%EB%B2%95-2-%EB%B9%88-%ED%95%A8%EC%88%98%EB%A5%BC-%ED%99%9C%EC%9A%A9" class="hash-link" aria-label="방법 2: 빈 함수를 활용에 대한 직접 링크" title="방법 2: 빈 함수를 활용에 대한 직접 링크">​</a></h4>
<p>빈 함수를 브리지(Bridge)로 사용해 프로토타입 체인을 설정한다. 이를 통해 자식 클래스가 부모 클래스의 프로토타입을 상속받으면서도 새로운 메서드를 추가할 수 있게 된다.</p>
<div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">var</span><span class="token plain"> extendClass2 </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">// 빈 함수를 브리지로 사용</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">var</span><span class="token plain"> </span><span class="token function-variable function" style="color:#d73a49">Bridge</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">// 클로저를 사용하여 상속 함수 반환</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">SuperClass</span><span class="token parameter punctuation" style="color:#393A34">,</span><span class="token parameter"> SubClass</span><span class="token parameter punctuation" style="color:#393A34">,</span><span class="token parameter"> subMethods</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// Bridge의 프로토타입을 SuperClass의 프로토타입으로 설정</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token class-name">Bridge</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">prototype </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token class-name">SuperClass</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">prototype</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// SubClass의 프로토타입을 Bridge의 인스턴스로 설정</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token class-name">SubClass</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">prototype </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> </span><span class="token class-name">Bridge</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// subMethods가 제공된 경우, 이를 SubClass의 프로토타입에 추가</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">subMethods</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword" style="color:#00009f">for</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">var</span><span class="token plain"> method </span><span class="token keyword" style="color:#00009f">in</span><span class="token plain"> subMethods</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token class-name">SubClass</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">prototype</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">method</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> subMethods</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">method</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// SubClass의 프로토타입을 동결하여 변경 불가능하게 설정</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    Object</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">freeze</span><span class="token punctuation" style="color:#393A34">(</span><span class="token class-name">SubClass</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">prototype</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> SubClass</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// Rectangle 클래스 정의</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">var</span><span class="token plain"> </span><span class="token function-variable function" style="color:#d73a49">Rectangle</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">width</span><span class="token parameter punctuation" style="color:#393A34">,</span><span class="token parameter"> height</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">width </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> width</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">height </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> height</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// Rectangle 클래스의 프로토타입 메서드 정의</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token class-name">Rectangle</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">prototype</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function-variable function" style="color:#d73a49">getArea</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">width </span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">height</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// Square 클래스 정의 및 Rectangle 클래스 상속</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">var</span><span class="token plain"> Square </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">extendClass2</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">Rectangle</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">width</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token function" style="color:#d73a49">Rectangle</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">call</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> width</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> width</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// Rectangle 생성자를 호출하여 너비와 높이를 동일하게 설정</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// Square 인스턴스 생성</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">var</span><span class="token plain"> sq </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> </span><span class="token class-name">Square</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">5</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// Square 인스턴스에서 Rectangle 클래스의 메서드 사용</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">console</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">log</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">sq</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">getArea</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// 출력: 25</span><br></span></code></pre></div></div>
<br>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="방법-3-objectcreate-활용">방법 3: Object.create 활용<a href="https://junyeol.github.io/blog/core-javascript-week10#%EB%B0%A9%EB%B2%95-3-objectcreate-%ED%99%9C%EC%9A%A9" class="hash-link" aria-label="방법 3: Object.create 활용에 대한 직접 링크" title="방법 3: Object.create 활용에 대한 직접 링크">​</a></h4>
<p>부모 클래스의 프로토타입을 자식 클래스의 프로토타입으로 설정해 상속구조를 만든다.</p>
<div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">var</span><span class="token plain"> </span><span class="token function-variable function" style="color:#d73a49">Rectangle</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">width</span><span class="token parameter punctuation" style="color:#393A34">,</span><span class="token parameter"> height</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">width </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> width</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">height </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> height</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// Rectangle 클래스의 프로토타입 메서드 정의</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token class-name">Rectangle</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">prototype</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function-variable function" style="color:#d73a49">getArea</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">width </span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">height</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// Square 클래스 정의</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">var</span><span class="token plain"> </span><span class="token function-variable function" style="color:#d73a49">Square</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">width</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token function" style="color:#d73a49">Rectangle</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">call</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> width</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> width</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// Rectangle 생성자를 호출하여 너비와 높이를 동일하게 설정</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// Square 클래스의 프로토타입을 Rectangle 클래스의 프로토타입을 상속받도록 설정</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token class-name">Square</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">prototype </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> Object</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">create</span><span class="token punctuation" style="color:#393A34">(</span><span class="token class-name">Rectangle</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">prototype</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// Square 클래스의 프로토타입을 동결하여 변경되지 않도록 설정</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Object</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">freeze</span><span class="token punctuation" style="color:#393A34">(</span><span class="token class-name">Square</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">prototype</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// Square 인스턴스 생성</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">var</span><span class="token plain"> sq </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> </span><span class="token class-name">Square</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">5</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// Square 인스턴스에서 Rectangle 클래스의 메서드 사용</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">console</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">log</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">sq</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">getArea</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// 출력: 25</span><br></span></code></pre></div></div>
<br>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="constructor-복구하기">constructor 복구하기<a href="https://junyeol.github.io/blog/core-javascript-week10#constructor-%EB%B3%B5%EA%B5%AC%ED%95%98%EA%B8%B0" class="hash-link" aria-label="constructor 복구하기에 대한 직접 링크" title="constructor 복구하기에 대한 직접 링크">​</a></h3>
<p>위의 방법들은 기본적인 상속에는 성공했지만,<br>
<code>constructor</code> 참조가 여전히 상위클래스를 가리키고 있다. 그렇기에 명시적으로 아래처럼 복구해야 한다.</p>
<div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token class-name">SubClass</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">prototype</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">constructor </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> SubClass</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre></div></div>
<br>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="상위-클래스에서-접근-수단-제공">상위 클래스에서 접근 수단 제공<a href="https://junyeol.github.io/blog/core-javascript-week10#%EC%83%81%EC%9C%84-%ED%81%B4%EB%9E%98%EC%8A%A4%EC%97%90%EC%84%9C-%EC%A0%91%EA%B7%BC-%EC%88%98%EB%8B%A8-%EC%A0%9C%EA%B3%B5" class="hash-link" aria-label="상위 클래스에서 접근 수단 제공에 대한 직접 링크" title="상위 클래스에서 접근 수단 제공에 대한 직접 링크">​</a></h3>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="super-흉내내보기">super 흉내내보기<a href="https://junyeol.github.io/blog/core-javascript-week10#super-%ED%9D%89%EB%82%B4%EB%82%B4%EB%B3%B4%EA%B8%B0" class="hash-link" aria-label="super 흉내내보기에 대한 직접 링크" title="super 흉내내보기에 대한 직접 링크">​</a></h4>
<ul>
<li>superclass의 생성자 함수에 직접 접근하고자 할 때는 <code>this.super()</code>,</li>
<li>superclass의 프로토타입 메서드에 접근하고자 할 때는 <code>this.super(propName)</code>와 같이 사용하면 된다.</li>
</ul>
<div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">var</span><span class="token plain"> </span><span class="token function-variable function" style="color:#d73a49">extendClass</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">SuperClass</span><span class="token parameter punctuation" style="color:#393A34">,</span><span class="token parameter"> SubClass</span><span class="token parameter punctuation" style="color:#393A34">,</span><span class="token parameter"> subMethods</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token class-name">SubClass</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">prototype </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> Object</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">create</span><span class="token punctuation" style="color:#393A34">(</span><span class="token class-name">SuperClass</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">prototype</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token class-name">SubClass</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">prototype</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">constructor </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> SubClass</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token class-name">SubClass</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">prototype</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function-variable function" style="color:#d73a49">super</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">propName</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// 추가된 부분 시작</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">var</span><span class="token plain"> self </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">!</span><span class="token plain">propName</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token function" style="color:#d73a49">SuperClass</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">apply</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">self</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> arguments</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">var</span><span class="token plain"> prop </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token class-name">SuperClass</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">prototype</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">propName</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">typeof</span><span class="token plain"> prop </span><span class="token operator" style="color:#393A34">!==</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"function"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> prop</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">prop</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">apply</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">self</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> arguments</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// 추가된 부분 끝</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">subMethods</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">for</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">var</span><span class="token plain"> method </span><span class="token keyword" style="color:#00009f">in</span><span class="token plain"> subMethods</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token class-name">SubClass</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">prototype</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">method</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> subMethods</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">method</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  Object</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">freeze</span><span class="token punctuation" style="color:#393A34">(</span><span class="token class-name">SubClass</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">prototype</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> SubClass</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">var</span><span class="token plain"> </span><span class="token function-variable function" style="color:#d73a49">Rectangle</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">width</span><span class="token parameter punctuation" style="color:#393A34">,</span><span class="token parameter"> height</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">width </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> width</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">height </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> height</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token class-name">Rectangle</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">prototype</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function-variable function" style="color:#d73a49">getArea</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">width </span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">height</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">var</span><span class="token plain"> Square </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">extendClass</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  Rectangle</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">width</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">super</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">width</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> width</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// super 사용 (1)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function-variable function" style="color:#d73a49">getArea</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      console</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">log</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"size is :"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">super</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"getArea"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// super 사용 (2)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">var</span><span class="token plain"> sq </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> </span><span class="token class-name">Square</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">10</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sq</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">getArea</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// size is : 100</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">console</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">log</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">sq</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">super</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"getArea"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// 100</span><br></span></code></pre></div></div>
<br>
<br>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="4-es6의-클래스-및-클래스-상속">4. ES6의 클래스 및 클래스 상속<a href="https://junyeol.github.io/blog/core-javascript-week10#4-es6%EC%9D%98-%ED%81%B4%EB%9E%98%EC%8A%A4-%EB%B0%8F-%ED%81%B4%EB%9E%98%EC%8A%A4-%EC%83%81%EC%86%8D" class="hash-link" aria-label="4. ES6의 클래스 및 클래스 상속에 대한 직접 링크" title="4. ES6의 클래스 및 클래스 상속에 대한 직접 링크">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="es5와-es6의-클래스-문법-비교">ES5와 ES6의 클래스 문법 비교<a href="https://junyeol.github.io/blog/core-javascript-week10#es5%EC%99%80-es6%EC%9D%98-%ED%81%B4%EB%9E%98%EC%8A%A4-%EB%AC%B8%EB%B2%95-%EB%B9%84%EA%B5%90" class="hash-link" aria-label="ES5와 ES6의 클래스 문법 비교에 대한 직접 링크" title="ES5와 ES6의 클래스 문법 비교에 대한 직접 링크">​</a></h3>
<div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">// ES5 클래스 정의</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">var</span><span class="token plain"> </span><span class="token function-variable function" style="color:#d73a49">ES5</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">name</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">name </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> name</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// 정적 메서드 추가</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token constant" style="color:#36acaa">ES5</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function-variable function" style="color:#d73a49">staticMethod</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">name </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">" staticMethod"</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// 프로토타입 메서드 추가</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token class-name">ES5</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">prototype</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function-variable function" style="color:#d73a49">method</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">name </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">" method"</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// ES5 인스턴스 생성과 메서드 호출</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">var</span><span class="token plain"> es5Instance </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> </span><span class="token class-name">ES5</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"es5"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">console</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">log</span><span class="token punctuation" style="color:#393A34">(</span><span class="token constant" style="color:#36acaa">ES5</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">staticMethod</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// 출력: es5 staticMethod</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">console</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">log</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">es5Instance</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">method</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// 출력: es5 method</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// ES6 클래스 정의</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">var</span><span class="token plain"> </span><span class="token constant" style="color:#36acaa">ES6</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">class</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token function" style="color:#d73a49">constructor</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">name</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">name </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> name</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">// 정적 메서드 정의</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">static</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">staticMethod</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">name </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">" staticMethod"</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">// 프로토타입 메서드 정의</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token function" style="color:#d73a49">method</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">name </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">" method"</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// ES6 인스턴스 생성과 메서드 호출</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">var</span><span class="token plain"> es6Instance </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> </span><span class="token class-name">ES6</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"es6"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">console</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">log</span><span class="token punctuation" style="color:#393A34">(</span><span class="token constant" style="color:#36acaa">ES6</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">staticMethod</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// 출력: es6 staticMethod</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">console</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">log</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">es6Instance</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">method</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// 출력: es6 method</span><br></span></code></pre></div></div>
<br>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="주요-차이점">주요 차이점<a href="https://junyeol.github.io/blog/core-javascript-week10#%EC%A3%BC%EC%9A%94-%EC%B0%A8%EC%9D%B4%EC%A0%90" class="hash-link" aria-label="주요 차이점에 대한 직접 링크" title="주요 차이점에 대한 직접 링크">​</a></h3>
<ul>
<li><strong>ES5</strong>에서는 생성자 함수와 프로토타입을 사용하여 클래스를 정의하고 메서드를 추가한다. 정적 메서드는 직접 클래스 함수에 추가된다.</li>
<li><strong>ES6</strong>에서는 <code>class</code> 문법을 사용하여 클래스를 정의하고 <code>constructor</code>, 정적 메서드, 인스턴스 메서드를 명시적으로 정의한다. 코드가 더 간결하고 이해하기 쉽다.</li>
<li><strong>ES6</strong>은 클래스 상속을 보다 직관적으로 지원하며, <code>super</code> 키워드를 사용하여 부모 클래스의 생성자와 메서드를 호출할 수 있다.</li>
</ul>]]></content:encoded>
            <category>JavaScript</category>
            <category>클래스</category>
            <category>스터디</category>
        </item>
        <item>
            <title><![CDATA[프로토타입]]></title>
            <link>https://junyeol.github.io/blog/core-javascript-week9</link>
            <guid>https://junyeol.github.io/blog/core-javascript-week9</guid>
            <pubDate>Wed, 01 Oct 2025 00:00:00 GMT</pubDate>
            <description><![CDATA[자바스크립트는 프로토타입 기반 언어입니다. 클래스 기반 언어에서 '상속'을 사용한다면, 프로토타입 기반 언어는 어떤 객체를 원형으로 삼아 이를 복제(참조)하는 방식으로 상속과 비슷한 효과를 만들어냅니다.]]></description>
            <content:encoded><![CDATA[<div class="theme-admonition theme-admonition-info admonition_xJq3 alert alert--info"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"></path></svg></span>정의</div><div class="admonitionContent_BuS1"><p>자바스크립트는 프로토타입 기반 언어입니다. 클래스 기반 언어에서 '상속'을 사용한다면, 프로토타입 기반 언어는 어떤 객체를 원형으로 삼아 이를 복제(참조)하는 방식으로 상속과 비슷한 효과를 만들어냅니다.</p></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="프로토타입의-개념-이해">프로토타입의 개념 이해<a href="https://junyeol.github.io/blog/core-javascript-week9#%ED%94%84%EB%A1%9C%ED%86%A0%ED%83%80%EC%9E%85%EC%9D%98-%EA%B0%9C%EB%85%90-%EC%9D%B4%ED%95%B4" class="hash-link" aria-label="프로토타입의 개념 이해에 대한 직접 링크" title="프로토타입의 개념 이해에 대한 직접 링크">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="constructor-prototype-instance">constructor, prototype, instance<a href="https://junyeol.github.io/blog/core-javascript-week9#constructor-prototype-instance" class="hash-link" aria-label="constructor, prototype, instance에 대한 직접 링크" title="constructor, prototype, instance에 대한 직접 링크">​</a></h3>
<p>새로운 인스턴스를 생성할 때, <code>__proto__</code>라는 프로퍼티가 자동으로 부여됩니다.</p>
<div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">let</span><span class="token plain"> instance </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> </span><span class="token class-name">Constructor</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre></div></div>
<p><code>prototype</code>과 <code>__proto__</code>는 모두 객체입니다. prototype 객체 내부에는 인스턴스가 사용할 메서드를 저장합니다.</p>
<div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">let</span><span class="token plain"> </span><span class="token function-variable function" style="color:#d73a49">Person</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">name</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">name </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> name</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// Person.prototype에 getName 메서드 추가</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token class-name">Person</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">prototype</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function-variable function" style="color:#d73a49">getName</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">name</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">let</span><span class="token plain"> suzi </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> </span><span class="token class-name">Person</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"Suzi"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">suzi</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">__proto__</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">getName</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// undefined</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token class-name">Person</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">prototype </span><span class="token operator" style="color:#393A34">===</span><span class="token plain"> suzi</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">__proto__</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// true</span><br></span></code></pre></div></div>
<p>위 코드에서 <code>undefined</code>가 출력되는 이유는 메서드 호출 시 바로 앞 객체가 <code>this</code>가 되기 때문입니다. <code>__proto__</code> 객체에는 <code>name</code> 프로퍼티가 없으므로 <code>undefined</code>가 반환됩니다.</p>
<p><code>__proto__</code>는 생략 가능합니다. 이 덕분에 인스턴스에서 prototype의 메서드를 자신의 것처럼 사용할 수 있습니다.</p>
<div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">// 아래 세 표현은 동일합니다</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">suzi</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">__proto__</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">getName</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token function" style="color:#d73a49">suzi</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">__proto__</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">getName</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">suzi</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">getName  </span><span class="token comment" style="color:#999988;font-style:italic">// __proto__ 생략!</span><br></span></code></pre></div></div>
<p>prototype 내부에 없는 메서드는 인스턴스가 직접 호출할 수 없습니다. 생성자 함수에서 직접 접근해야 합니다.</p>
<div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">let</span><span class="token plain"> arr </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">2</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">arr</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">forEach</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// (O) Array.prototype에 있음</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Array</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">isArray</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">arr</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// (O) true - Array 생성자 함수의 스태틱 메서드</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">arr</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">isArray</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// (X) TypeError - prototype에 없음</span><br></span></code></pre></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="constructor-프로퍼티">constructor 프로퍼티<a href="https://junyeol.github.io/blog/core-javascript-week9#constructor-%ED%94%84%EB%A1%9C%ED%8D%BC%ED%8B%B0" class="hash-link" aria-label="constructor 프로퍼티에 대한 직접 링크" title="constructor 프로퍼티에 대한 직접 링크">​</a></h3>
<p>prototype 내부에는 <code>constructor</code> 프로퍼티가 있습니다. 이는 생성자 함수 자신을 참조하며, 인스턴스가 자신의 원형을 알 수 있는 수단이 됩니다.</p>
<div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">let</span><span class="token plain"> arr </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">2</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token class-name">Array</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">prototype</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">constructor </span><span class="token operator" style="color:#393A34">===</span><span class="token plain"> Array</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// true</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">arr</span><span class="token punctuation" style="color:#393A34">.</span><span class="token class-name">__proto__</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">constructor </span><span class="token operator" style="color:#393A34">===</span><span class="token plain"> Array</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// true</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">arr</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">constructor </span><span class="token operator" style="color:#393A34">===</span><span class="token plain"> Array</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// true</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// constructor로 새 인스턴스 생성 가능</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">let</span><span class="token plain"> arr2 </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> </span><span class="token class-name">arr</span><span class="token class-name punctuation" style="color:#393A34">.</span><span class="token class-name">constructor</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">3</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">4</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">console</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">log</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">arr2</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// [3, 4]</span><br></span></code></pre></div></div>
<div class="theme-admonition theme-admonition-warning admonition_xJq3 alert alert--warning"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 16 16"><path fill-rule="evenodd" d="M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"></path></svg></span>constructor 변경 시 주의사항</div><div class="admonitionContent_BuS1"><p>constructor는 변경 가능하지만, 변경해도 인스턴스의 실제 타입이 바뀌지는 않습니다.</p></div></div>
<div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">let</span><span class="token plain"> </span><span class="token function-variable function" style="color:#d73a49">NewConstructor</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  console</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">log</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"this is new constructor!"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">let</span><span class="token plain"> obj </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">obj</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">constructor </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> NewConstructor</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">console</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">log</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">obj</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">constructor</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">name</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// 'NewConstructor'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">console</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">log</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">obj </span><span class="token keyword" style="color:#00009f">instanceof</span><span class="token plain"> </span><span class="token class-name">NewConstructor</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// false!</span><br></span></code></pre></div></div>
<p>위 예시에서 constructor를 변경해도 <code>instanceof</code>는 여전히 false를 반환합니다. 참조 대상만 변경되었을 뿐 실제 원형이나 데이터 타입은 변하지 않습니다.</p>
<p><strong>동일한 대상을 가리키는 표현:</strong></p>
<div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">Constructor</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">instance</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">.</span><span class="token class-name">__proto__</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">constructor</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">instance</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">constructor</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Object</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">getPrototypeOf</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">instance</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">constructor</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">Constructor</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">prototype</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">constructor</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre></div></div>
<p><strong>동일한 객체에 접근하는 방법:</strong></p>
<div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">Constructor</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">prototype</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">instance</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">__proto__</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">instance</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Object</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">getPrototypeOf</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">instance</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="프로토타입-체인">프로토타입 체인<a href="https://junyeol.github.io/blog/core-javascript-week9#%ED%94%84%EB%A1%9C%ED%86%A0%ED%83%80%EC%9E%85-%EC%B2%B4%EC%9D%B8" class="hash-link" aria-label="프로토타입 체인에 대한 직접 링크" title="프로토타입 체인에 대한 직접 링크">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="메서드-오버라이드">메서드 오버라이드<a href="https://junyeol.github.io/blog/core-javascript-week9#%EB%A9%94%EC%84%9C%EB%93%9C-%EC%98%A4%EB%B2%84%EB%9D%BC%EC%9D%B4%EB%93%9C" class="hash-link" aria-label="메서드 오버라이드에 대한 직접 링크" title="메서드 오버라이드에 대한 직접 링크">​</a></h3>
<p>인스턴스가 prototype과 동일한 이름의 메서드를 가지면 메서드 오버라이드가 발생합니다.</p>
<div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">let</span><span class="token plain"> </span><span class="token function-variable function" style="color:#d73a49">Person</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">name</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">name </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> name</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token class-name">Person</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">prototype</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function-variable function" style="color:#d73a49">getName</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">name</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">let</span><span class="token plain"> iu </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> </span><span class="token class-name">Person</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"지금"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// 인스턴스에 같은 이름의 메서드 추가</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">iu</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function-variable function" style="color:#d73a49">getName</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"바로 "</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">name</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">console</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">log</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">iu</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">getName</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// '바로 지금'</span><br></span></code></pre></div></div>
<p>원본 메서드가 제거되는 것이 아니라 그 위에 덮어씌워지는 구조입니다. 자바스크립트 엔진은 다음 순서로 메서드를 찾습니다:</p>
<ol>
<li>인스턴스 자신의 프로퍼티 검색</li>
<li>없으면 <code>__proto__</code> 검색</li>
</ol>
<p>원본 prototype 메서드에 접근하려면 명시적으로 호출해야 합니다:</p>
<div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">// call로 this를 iu로 바인딩</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">console</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">log</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">iu</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">__proto__</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">getName</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">call</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">iu</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// '지금'</span><br></span></code></pre></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="프로토타입-체인-1">프로토타입 체인<a href="https://junyeol.github.io/blog/core-javascript-week9#%ED%94%84%EB%A1%9C%ED%86%A0%ED%83%80%EC%9E%85-%EC%B2%B4%EC%9D%B8-1" class="hash-link" aria-label="프로토타입 체인에 대한 직접 링크" title="프로토타입 체인에 대한 직접 링크">​</a></h3>
<p>배열의 내부 구조를 보면 <code>__proto__</code> 내부에 다시 <code>__proto__</code>가 있습니다. prototype 객체도 객체이기 때문입니다.</p>
<div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">let</span><span class="token plain"> arr </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">2</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// __proto__ 생략 가능</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">arr</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">push</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">3</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// arr.__proto__.push(3)와 동일</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// 체인을 따라 올라감</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">arr</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">__proto__</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">__proto__</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">hasOwnProperty</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">2</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// true</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// arr → Array.prototype → Object.prototype</span><br></span></code></pre></div></div>
<div class="theme-admonition theme-admonition-info admonition_xJq3 alert alert--info"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"></path></svg></span>용어 정리</div><div class="admonitionContent_BuS1"><ul>
<li><strong>프로토타입 체인</strong>: <code>__proto__</code>가 연쇄적으로 이어진 구조</li>
<li><strong>프로토타입 체이닝</strong>: 체인을 따라가며 검색하는 과정</li>
</ul></div></div>
<p>메서드 오버라이드와 프로토타입 체이닝 예시:</p>
<div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">let</span><span class="token plain"> arr </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">2</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// Array.prototype의 toString</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token class-name">Array</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">prototype</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">toString</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">call</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">arr</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// '1,2'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// Object.prototype의 toString</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token class-name">Object</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">prototype</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">toString</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">call</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">arr</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// '[object Array]'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// 기본적으로는 Array.prototype의 toString 사용</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">arr</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">toString</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// '1,2'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// 메서드 오버라이드</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">arr</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function-variable function" style="color:#d73a49">toString</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">join</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"_"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">arr</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">toString</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// '1_2'</span><br></span></code></pre></div></div>
<p>어떤 생성자 함수든 prototype은 객체이므로, <code>Object.prototype</code>이 언제나 프로토타입 체인의 최상단에 존재합니다.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="객체-전용-메서드의-예외사항">객체 전용 메서드의 예외사항<a href="https://junyeol.github.io/blog/core-javascript-week9#%EA%B0%9D%EC%B2%B4-%EC%A0%84%EC%9A%A9-%EB%A9%94%EC%84%9C%EB%93%9C%EC%9D%98-%EC%98%88%EC%99%B8%EC%82%AC%ED%95%AD" class="hash-link" aria-label="객체 전용 메서드의 예외사항에 대한 직접 링크" title="객체 전용 메서드의 예외사항에 대한 직접 링크">​</a></h3>
<p>객체에서만 사용할 메서드를 <code>Object.prototype</code>에 정의하면 모든 데이터 타입에서 접근할 수 있게 되는 문제가 발생합니다.</p>
<div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">// 잘못된 예시: Object.prototype에 메서드 추가</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token class-name">Object</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">prototype</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function-variable function" style="color:#d73a49">getEntries</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">let</span><span class="token plain"> res </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">for</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">let</span><span class="token plain"> prop </span><span class="token keyword" style="color:#00009f">in</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">hasOwnProperty</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">prop</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      res</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">push</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">prop</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">prop</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> res</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">let</span><span class="token plain"> data </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">"object"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> </span><span class="token literal-property property" style="color:#36acaa">a</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token literal-property property" style="color:#36acaa">b</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">2</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token literal-property property" style="color:#36acaa">c</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">3</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// [["a",1], ["b",2], ["c",3]]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">"number"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">345</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// []</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">"string"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"abc"</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// [["0","a"], ["1","b"], ["2","c"]]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">"boolean"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">false</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// []</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">"array"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">2</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">3</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// [["0",1], ["1",2], ["2",3]]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">data</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">forEach</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">datum</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  console</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">log</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">datum</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">getEntries</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre></div></div>
<p>의도는 객체에만 사용하는 것이었지만, 모든 데이터 타입이 프로토타입 체이닝을 통해 <code>getEntries</code>에 접근할 수 있습니다.</p>
<p>이러한 이유로 객체 전용 메서드는 <code>Object</code>에 <strong>스태틱 메서드</strong>로 부여됩니다.</p>
<div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">// 올바른 방식: 스태틱 메서드</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Object</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">freeze</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">instance</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// O</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">instance</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">freeze</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// X</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// 인스턴스를 인자로 직접 전달</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Object</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">keys</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">obj</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Object</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">values</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">obj</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Object</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">entries</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">obj</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre></div></div>
<p>생성자 함수 <code>Object</code>와 인스턴스 사이에는 <code>this</code> 연결이 불가능하므로, 대상 인스턴스를 인자로 받는 방식으로 구현됩니다.</p>
<p><code>Object.prototype</code>에는 모든 데이터 타입에서 사용 가능한 범용 메서드만 존재합니다:</p>
<ul>
<li><code>toString</code></li>
<li><code>hasOwnProperty</code></li>
<li><code>valueOf</code></li>
<li><code>isPrototypeOf</code></li>
</ul>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="objectcreatenull">Object.create(null)<a href="https://junyeol.github.io/blog/core-javascript-week9#objectcreatenull" class="hash-link" aria-label="Object.create(null)에 대한 직접 링크" title="Object.create(null)에 대한 직접 링크">​</a></h4>
<p>예외적으로 <code>Object.create(null)</code>을 사용하면 <code>Object.prototype</code>에 접근할 수 없는 객체를 만들 수 있습니다.</p>
<div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">// __proto__가 없는 객체 생성</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">let</span><span class="token plain"> _proto </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> Object</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">create</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">null</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">_proto</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function-variable function" style="color:#d73a49">getValue</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">key</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">key</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// _proto를 __proto__로 하는 객체 생성</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">let</span><span class="token plain"> obj </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> Object</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">create</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">_proto</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">obj</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">a </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">console</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">log</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">obj</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">getValue</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"a"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// 1</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">console</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">dir</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">obj</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre></div></div>
<p><code>obj</code>를 출력하면 <code>__proto__</code>에 오직 <code>getValue</code> 메서드만 존재하며, 일반적인 내장 메서드나 프로퍼티는 보이지 않습니다.</p>
<p><strong>장단점:</strong></p>
<ul>
<li>장점: 내장 메서드가 제거되어 객체가 가벼워지고 성능 향상</li>
<li>단점: 기본 기능 제약 (toString, hasOwnProperty 등 사용 불가)</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="다중-프로토타입-체인">다중 프로토타입 체인<a href="https://junyeol.github.io/blog/core-javascript-week9#%EB%8B%A4%EC%A4%91-%ED%94%84%EB%A1%9C%ED%86%A0%ED%83%80%EC%9E%85-%EC%B2%B4%EC%9D%B8" class="hash-link" aria-label="다중 프로토타입 체인에 대한 직접 링크" title="다중 프로토타입 체인에 대한 직접 링크">​</a></h3>
<p>자바스크립트 기본 데이터 타입의 프로토타입 체인은 1-2단계로 끝나지만, 사용자가 더 긴 체인을 만들 수 있습니다.</p>
<p>방법: 생성자 함수의 prototype이 다른 생성자 함수의 인스턴스를 바라보게 합니다.</p>
<div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">// 유사배열객체를 반환하는 생성자 함수</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">let</span><span class="token plain"> </span><span class="token function-variable function" style="color:#d73a49">Grade</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">let</span><span class="token plain"> args </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token class-name">Array</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">prototype</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">slice</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">call</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">arguments</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">for</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">let</span><span class="token plain"> i </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> i </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain"> args</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">length</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> i</span><span class="token operator" style="color:#393A34">++</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">i</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> args</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">i</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">length </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> args</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">length</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">let</span><span class="token plain"> g </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> </span><span class="token class-name">Grade</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">100</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">80</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre></div></div>
<p><code>g</code>는 배열 형태(인덱스와 length 프로퍼티)를 가졌지만, 배열 메서드는 사용할 수 없는 유사배열객체입니다.</p>
<p>배열 메서드를 사용 가능하게 만들기:</p>
<div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">// Grade.prototype을 배열 인스턴스로 교체</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token class-name">Grade</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">prototype </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">console</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">log</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">g</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// Grade(2) [100, 80]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// 이제 배열 메서드 사용 가능</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">g</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">pop</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">console</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">log</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">g</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// Grade(1) [100]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">g</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">push</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">90</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">console</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">log</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">g</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// Grade(2) [100, 90]</span><br></span></code></pre></div></div>
<p>이제 <code>g</code>의 프로토타입 체인은 다음과 같습니다:</p>
<div class="language-text codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">g 객체</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> → Grade.prototype (배열 인스턴스)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  → Array.prototype</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   → Object.prototype</span><br></span></code></pre></div></div>
<p><code>g</code>는 자신의 멤버, Grade.prototype, Array.prototype, Object.prototype의 모든 멤버에 접근할 수 있습니다.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="정리">정리<a href="https://junyeol.github.io/blog/core-javascript-week9#%EC%A0%95%EB%A6%AC" class="hash-link" aria-label="정리에 대한 직접 링크" title="정리에 대한 직접 링크">​</a></h2>
<ul>
<li>
<p>생성자 함수를 <code>new</code> 연산자와 함께 호출하면 인스턴스에 <code>__proto__</code> 프로퍼티가 자동 부여되며, 이는 생성자 함수의 <code>prototype</code>을 참조합니다.</p>
</li>
<li>
<p><code>__proto__</code>는 생략 가능하여, 인스턴스는 prototype의 메서드를 자신의 것처럼 호출할 수 있습니다.</p>
</li>
<li>
<p>prototype의 <code>constructor</code> 프로퍼티는 생성자 함수 자신을 가리키며, 인스턴스가 자신의 생성자 함수를 알 수 있게 합니다.</p>
</li>
<li>
<p><strong>프로토타입 체인</strong>: <code>__proto__</code>가 연쇄적으로 이어진 것<br>
<strong>프로토타입 체이닝</strong>: 체인을 따라 검색하는 것</p>
</li>
<li>
<p>객체 전용 메서드는 <code>Object.prototype</code>이 아닌 <code>Object</code>에 스태틱 메서드로 부여됩니다. 모든 데이터 타입이 <code>Object.prototype</code>을 상속받기 때문입니다.</p>
</li>
</ul>]]></content:encoded>
            <category>JavaScript</category>
            <category>프로토타입</category>
            <category>스터디</category>
        </item>
        <item>
            <title><![CDATA[클로저]]></title>
            <link>https://junyeol.github.io/blog/core-javascript-week8</link>
            <guid>https://junyeol.github.io/blog/core-javascript-week8</guid>
            <pubDate>Wed, 24 Sep 2025 00:00:00 GMT</pubDate>
            <description><![CDATA[개념]]></description>
            <content:encoded><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="개념">개념<a href="https://junyeol.github.io/blog/core-javascript-week8#%EA%B0%9C%EB%85%90" class="hash-link" aria-label="개념에 대한 직접 링크" title="개념에 대한 직접 링크">​</a></h2>
<div class="theme-admonition theme-admonition-info admonition_xJq3 alert alert--info"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"></path></svg></span>정의</div><div class="admonitionContent_BuS1"><p>클로저란 어떤 함수 A에서 선언한 변수 a를 참조하는 내부함수 B를 외부로 전달할 경우, A의 실행 컨텍스트가 종료된 이후에도 변수 a가 사라지지 않는 현상입니다.</p></div></div>
<div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">outer</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">var</span><span class="token plain"> a </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">var</span><span class="token plain"> </span><span class="token function-variable function" style="color:#d73a49">inner</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">++</span><span class="token plain">a</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> inner</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">var</span><span class="token plain"> outer2 </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">outer</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">console</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">log</span><span class="token punctuation" style="color:#393A34">(</span><span class="token function" style="color:#d73a49">outer2</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// 2</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">console</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">log</span><span class="token punctuation" style="color:#393A34">(</span><span class="token function" style="color:#d73a49">outer2</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// 3</span><br></span></code></pre></div></div>
<ol>
<li><code>outer</code> 함수 내부에 변수 <code>a</code>와 함수 <code>inner</code>를 선언합니다</li>
<li><code>inner</code> 함수는 외부 함수의 변수 <code>a</code>를 참조합니다</li>
<li><code>outer</code> 함수는 <code>inner</code> 함수 자체를 반환합니다</li>
<li><code>outer()</code> 호출로 반환된 <code>inner</code> 함수를 <code>outer2</code>에 저장합니다</li>
<li><code>outer</code> 함수 실행이 종료되었지만, <code>outer2()</code> 호출 시 여전히 변수 <code>a</code>에 접근 가능합니다</li>
</ol>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="동작-원리">동작 원리<a href="https://junyeol.github.io/blog/core-javascript-week8#%EB%8F%99%EC%9E%91-%EC%9B%90%EB%A6%AC" class="hash-link" aria-label="동작 원리에 대한 직접 링크" title="동작 원리에 대한 직접 링크">​</a></h2>
<ol>
<li>내부 함수가 외부 함수의 변수를 참조</li>
<li>내부 함수가 외부로 전달됨</li>
<li>가비지 컬렉터가 참조된 변수를 메모리에서 유지</li>
</ol>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="메모리-관리">메모리 관리<a href="https://junyeol.github.io/blog/core-javascript-week8#%EB%A9%94%EB%AA%A8%EB%A6%AC-%EA%B4%80%EB%A6%AC" class="hash-link" aria-label="메모리 관리에 대한 직접 링크" title="메모리 관리에 대한 직접 링크">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="메모리-해제">메모리 해제<a href="https://junyeol.github.io/blog/core-javascript-week8#%EB%A9%94%EB%AA%A8%EB%A6%AC-%ED%95%B4%EC%A0%9C" class="hash-link" aria-label="메모리 해제에 대한 직접 링크" title="메모리 해제에 대한 직접 링크">​</a></h3>
<p>클로저 사용이 완료되면 참조를 해제한다.</p>
<div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">var</span><span class="token plain"> closure </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">outer</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// 사용 완료 후</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">closure </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">null</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre></div></div>
<ol>
<li><code>outer()</code> 함수를 호출하여 클로저를 생성합니다</li>
<li>클로저 사용이 완료되면 <code>closure</code> 변수에 <code>null</code>을 할당합니다</li>
<li>참조 카운트가 0이 되어 가비지 컬렉터가 메모리를 회수합니다</li>
</ol>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="메모리-해제를-왜-해야할까">메모리 해제를 왜 해야할까?<a href="https://junyeol.github.io/blog/core-javascript-week8#%EB%A9%94%EB%AA%A8%EB%A6%AC-%ED%95%B4%EC%A0%9C%EB%A5%BC-%EC%99%9C-%ED%95%B4%EC%95%BC%ED%95%A0%EA%B9%8C" class="hash-link" aria-label="메모리 해제를 왜 해야할까?에 대한 직접 링크" title="메모리 해제를 왜 해야할까?에 대한 직접 링크">​</a></h3>
<p>클로저는 외부 함수의 변수를 참조하고 있어서 가비지 컬렉터가 해당 변수들을 메모리에서 제거하지 않는다.</p>
<p>클로저를 계속 사용하지 않는데도 참조가 남아있다면.</p>
<ul>
<li>메모리 누수 발생: 불필요한 변수들이 메모리에 계속 남아있음</li>
<li>성능 저하: 메모리 사용량이 계속 증가</li>
<li>브라우저 크래시 위험: 메모리 부족으로 인한 문제</li>
</ul>
<p>특히 이벤트 리스너나 타이머 함수에서 클로저를 사용할 때 제대로 정리하지 않으면 메모리가 계속 쌓인다.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="활용-사례">활용 사례<a href="https://junyeol.github.io/blog/core-javascript-week8#%ED%99%9C%EC%9A%A9-%EC%82%AC%EB%A1%80" class="hash-link" aria-label="활용 사례에 대한 직접 링크" title="활용 사례에 대한 직접 링크">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="콜백-함수에서-외부-데이터-사용">콜백 함수에서 외부 데이터 사용<a href="https://junyeol.github.io/blog/core-javascript-week8#%EC%BD%9C%EB%B0%B1-%ED%95%A8%EC%88%98%EC%97%90%EC%84%9C-%EC%99%B8%EB%B6%80-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%82%AC%EC%9A%A9" class="hash-link" aria-label="콜백 함수에서 외부 데이터 사용에 대한 직접 링크" title="콜백 함수에서 외부 데이터 사용에 대한 직접 링크">​</a></h3>
<div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">attachListener</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">name</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    console</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">log</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">name </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">" 클릭됨"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">button</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">addEventListener</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"click"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">attachListener</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"버튼1"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre></div></div>
<ol>
<li><code>attachListener</code> 함수는 <code>name</code> 매개변수를 받습니다</li>
<li>내부에서 익명 함수를 반환하는데, 이 함수는 <code>name</code> 변수를 참조합니다</li>
<li><code>attachListener("버튼1")</code> 호출 시 반환된 함수가 이벤트 리스너로 등록됩니다</li>
<li>클릭 이벤트 발생 시 클로저로 인해 <code>name</code> 값이 유지되어 "버튼1 클릭됨"이 출력됩니다</li>
</ol>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="정보-은닉">정보 은닉<a href="https://junyeol.github.io/blog/core-javascript-week8#%EC%A0%95%EB%B3%B4-%EC%9D%80%EB%8B%89" class="hash-link" aria-label="정보 은닉에 대한 직접 링크" title="정보 은닉에 대한 직접 링크">​</a></h3>
<p>외부에서 접근할 수 없는 private 변수를 구현합니다.</p>
<div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">createCounter</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">var</span><span class="token plain"> count </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function-variable function" style="color:#d73a49">increment</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">++</span><span class="token plain">count</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function-variable function" style="color:#d73a49">decrement</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">--</span><span class="token plain">count</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function-variable function" style="color:#d73a49">getCount</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> count</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">var</span><span class="token plain"> counter </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">createCounter</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">console</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">log</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">counter</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">increment</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// 1</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">console</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">log</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">counter</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">getCount</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// 1</span><br></span></code></pre></div></div>
<ol>
<li><code>createCounter</code> 함수 내부에 <code>count</code> 변수를 선언합니다</li>
<li>객체를 반환하는데, 이 객체의 메소드들이 <code>count</code>를 참조합니다</li>
<li><code>count</code> 변수는 외부에서 직접 접근할 수 없고, 오직 반환된 메소드를 통해서만 조작 가능합니다</li>
<li><code>counter.increment()</code> 호출 시 클로저로 인해 <code>count</code> 값이 증가하고 결과를 반환합니다</li>
</ol>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="부분-적용-함수">부분 적용 함수<a href="https://junyeol.github.io/blog/core-javascript-week8#%EB%B6%80%EB%B6%84-%EC%A0%81%EC%9A%A9-%ED%95%A8%EC%88%98" class="hash-link" aria-label="부분 적용 함수에 대한 직접 링크" title="부분 적용 함수에 대한 직접 링크">​</a></h3>
<p>일부 인자를 미리 고정하고 나머지 인자를 나중에 전달합니다.</p>
<div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">partial</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">fn</span><span class="token parameter punctuation" style="color:#393A34">,</span><span class="token parameter"> </span><span class="token parameter operator" style="color:#393A34">...</span><span class="token parameter">presetArgs</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter operator" style="color:#393A34">...</span><span class="token parameter">laterArgs</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">fn</span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">...</span><span class="token plain">presetArgs</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">...</span><span class="token plain">laterArgs</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">add</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">a</span><span class="token parameter punctuation" style="color:#393A34">,</span><span class="token parameter"> b</span><span class="token parameter punctuation" style="color:#393A34">,</span><span class="token parameter"> c</span><span class="token parameter punctuation" style="color:#393A34">,</span><span class="token parameter"> d</span><span class="token parameter punctuation" style="color:#393A34">,</span><span class="token parameter"> e</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> a </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> b </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> c </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> d </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> e</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">var</span><span class="token plain"> add3 </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">partial</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">add</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">2</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">3</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">console</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">log</span><span class="token punctuation" style="color:#393A34">(</span><span class="token function" style="color:#d73a49">add3</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">4</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">5</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// 15</span><br></span></code></pre></div></div>
<ol>
<li><code>partial</code> 함수는 원본 함수 <code>fn</code>과 미리 적용할 인자들 <code>presetArgs</code>를 받습니다</li>
<li>새로운 함수를 반환하는데, 이 함수는 나머지 인자들 <code>laterArgs</code>를 받습니다</li>
<li><code>add3</code>는 <code>add</code> 함수에 1, 2, 3을 미리 적용한 부분 적용 함수입니다</li>
<li><code>add3(4, 5)</code> 호출 시 모든 인자(1, 2, 3, 4, 5)가 합쳐져 원본 <code>add</code> 함수가 실행됩니다</li>
</ol>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="디바운스-함수">디바운스 함수<a href="https://junyeol.github.io/blog/core-javascript-week8#%EB%94%94%EB%B0%94%EC%9A%B4%EC%8A%A4-%ED%95%A8%EC%88%98" class="hash-link" aria-label="디바운스 함수에 대한 직접 링크" title="디바운스 함수에 대한 직접 링크">​</a></h3>
<p>연속된 함수 호출을 제어하여 마지막 호출만 실행되도록 합니다.</p>
<div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">debounce</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">eventName</span><span class="token parameter punctuation" style="color:#393A34">,</span><span class="token parameter"> func</span><span class="token parameter punctuation" style="color:#393A34">,</span><span class="token parameter"> wait</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">var</span><span class="token plain"> timeoutId </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">null</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">event</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">var</span><span class="token plain"> self </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">clearTimeout</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">timeoutId</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    timeoutId </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">setTimeout</span><span class="token punctuation" style="color:#393A34">(</span><span class="token function" style="color:#d73a49">func</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">bind</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">self</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> event</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> wait</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">document</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">body</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">addEventListener</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"mousemove"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">debounce</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"move"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> handleMove</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">500</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre></div></div>
<ol>
<li><code>debounce</code> 함수는 이벤트명, 실행할 함수, 대기 시간을 받습니다</li>
<li><code>timeoutId</code> 변수는 클로저로 유지되어 타이머 상태를 추적합니다</li>
<li>반환된 함수가 호출될 때마다 기존 타이머를 취소(<code>clearTimeout</code>)합니다</li>
<li>새로운 타이머를 설정하여 <code>wait</code> 시간 후 <code>func</code>를 실행합니다</li>
<li>연속 호출 시 타이머가 계속 재설정되어 마지막 호출만 실행됩니다</li>
</ol>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="커링-함수">커링 함수<a href="https://junyeol.github.io/blog/core-javascript-week8#%EC%BB%A4%EB%A7%81-%ED%95%A8%EC%88%98" class="hash-link" aria-label="커링 함수에 대한 직접 링크" title="커링 함수에 대한 직접 링크">​</a></h3>
<p>여러 인자를 받는 함수를 하나의 인자씩 받는 함수로 변환합니다.</p>
<div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">curry5</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">func</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">a</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">b</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">c</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">d</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">e</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">func</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">a</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> b</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> c</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> d</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> e</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre></div></div>
<ol>
<li><code>curry5</code> 함수는 5개 인자를 받는 함수를 커링으로 변환합니다</li>
<li>각 단계에서 하나의 인자를 받아 다음 함수를 반환합니다</li>
<li>마지막 인자를 받으면 모든 인자를 원본 함수에 전달하여 실행합니다</li>
</ol>
<p><strong>ES6 화살표 함수로 간소화:</strong></p>
<div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> </span><span class="token function-variable function" style="color:#d73a49">curriedAdd</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">a</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">b</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">c</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=&gt;</span><span class="token plain"> a </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> b </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> c</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">console</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">log</span><span class="token punctuation" style="color:#393A34">(</span><span class="token function" style="color:#d73a49">curriedAdd</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">2</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">3</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// 6</span><br></span></code></pre></div></div>
<ol>
<li>화살표 함수로 더 간결하게 표현 가능합니다</li>
<li><code>curriedAdd(1)</code>은 <code>b =&gt; c =&gt; 1 + b + c</code> 함수를 반환합니다</li>
<li><code>curriedAdd(1)(2)</code>는 <code>c =&gt; 1 + 2 + c</code> 함수를 반환합니다</li>
<li><code>curriedAdd(1)(2)(3)</code>은 최종 결과 <code>6</code>을 반환합니다</li>
</ol>
<div class="theme-admonition theme-admonition-tip admonition_xJq3 alert alert--success"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 12 16"><path fill-rule="evenodd" d="M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"></path></svg></span>부분 적용 함수 vs 커링 함수</div><div class="admonitionContent_BuS1"><ul>
<li><strong>부분 적용 함수</strong>: 여러 인자를 한 번에 전달 가능</li>
<li><strong>커링 함수</strong>: 한 번에 하나의 인자만 전달, 마지막 인자 전달 시 실행</li>
</ul></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="요약">요약<a href="https://junyeol.github.io/blog/core-javascript-week8#%EC%9A%94%EC%95%BD" class="hash-link" aria-label="요약에 대한 직접 링크" title="요약에 대한 직접 링크">​</a></h2>
<ul>
<li>클로저는 내부 함수가 외부 함수의 변수에 접근하는 현상</li>
<li>가비지 컬렉션으로 인해 외부 함수 종료 후에도 변수가 유지됨</li>
<li>정보 은닉, 콜백 처리, 함수형 프로그래밍에 활용</li>
<li>사용 완료 후 <code>null</code> 할당으로 메모리 해제 필요</li>
</ul>]]></content:encoded>
            <category>JavaScript</category>
            <category>클로저</category>
            <category>스터디</category>
        </item>
        <item>
            <title><![CDATA[Lv.1 - 약수의 개수와 덧셈]]></title>
            <link>https://junyeol.github.io/blog/programmers-divisort</link>
            <guid>https://junyeol.github.io/blog/programmers-divisort</guid>
            <pubDate>Sun, 21 Sep 2025 00:00:00 GMT</pubDate>
            <description><![CDATA[프로그래머스 Level 1 문제 "약수의 개수와 덧셈"]]></description>
            <content:encoded><![CDATA[<p>프로그래머스 Level 1 문제 "약수의 개수와 덧셈"</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-문제-설명">📋 문제 설명<a href="https://junyeol.github.io/blog/programmers-divisort#-%EB%AC%B8%EC%A0%9C-%EC%84%A4%EB%AA%85" class="hash-link" aria-label="📋 문제 설명에 대한 직접 링크" title="📋 문제 설명에 대한 직접 링크">​</a></h2>
<p>두 정수 left와 right가 매개변수로 주어집니다.</p>
<p>left부터 right까지의 모든 수들 중에서, 약수의 개수가 짝수인 수는 더하고, 약수의 개수가 홀수인 수는 뺀 수를</p>
<p>return 하도록 solution 함수를 완성해주세요.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-제한사항">🔒 제한사항<a href="https://junyeol.github.io/blog/programmers-divisort#-%EC%A0%9C%ED%95%9C%EC%82%AC%ED%95%AD" class="hash-link" aria-label="🔒 제한사항에 대한 직접 링크" title="🔒 제한사항에 대한 직접 링크">​</a></h2>
<ul>
<li>1 ≤ left ≤ right ≤ 1,000</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-입출력-예">📝 입출력 예<a href="https://junyeol.github.io/blog/programmers-divisort#-%EC%9E%85%EC%B6%9C%EB%A0%A5-%EC%98%88" class="hash-link" aria-label="📝 입출력 예에 대한 직접 링크" title="📝 입출력 예에 대한 직접 링크">​</a></h2>
<table><thead><tr><th>left</th><th>right</th><th>return</th></tr></thead><tbody><tr><td>13</td><td>17</td><td>43</td></tr><tr><td>24</td><td>27</td><td>52</td></tr></tbody></table>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-입출력-예-설명">📝 입출력 예 설명<a href="https://junyeol.github.io/blog/programmers-divisort#-%EC%9E%85%EC%B6%9C%EB%A0%A5-%EC%98%88-%EC%84%A4%EB%AA%85" class="hash-link" aria-label="📝 입출력 예 설명에 대한 직접 링크" title="📝 입출력 예 설명에 대한 직접 링크">​</a></h2>
<p><strong>입출력 예 #1</strong></p>
<p>다음 표는 13부터 17까지의 수들의 약수를 모두 나타낸 것입니다.</p>
<table><thead><tr><th>수</th><th>약수</th><th>약수의 개수</th></tr></thead><tbody><tr><td>13</td><td>1, 13</td><td>2</td></tr><tr><td>14</td><td>1, 2, 7, 14</td><td>4</td></tr><tr><td>15</td><td>1, 3, 5, 15</td><td>4</td></tr><tr><td>16</td><td>1, 2, 4, 8, 16</td><td>5</td></tr><tr><td>17</td><td>1, 17</td><td>2</td></tr></tbody></table>
<p>따라서, 13 + 14 + 15 - 16 + 17 = 43을 return 해야 합니다.</p>
<p><strong>입출력 예 #2</strong></p>
<p>다음 표는 24부터 27까지의 수들의 약수를 모두 나타낸 것입니다.</p>
<table><thead><tr><th>수</th><th>약수</th><th>약수의 개수</th></tr></thead><tbody><tr><td>24</td><td>1, 2, 3, 4, 6, 8, 12, 24</td><td>8</td></tr><tr><td>25</td><td>1, 5, 25</td><td>3</td></tr><tr><td>26</td><td>1, 2, 13, 26</td><td>4</td></tr><tr><td>27</td><td>1, 3, 9, 27</td><td>4</td></tr></tbody></table>
<p>따라서, 24 - 25 + 26 + 27 = 52를 return 해야 합니다.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-해결-과정">💡 해결 과정<a href="https://junyeol.github.io/blog/programmers-divisort#-%ED%95%B4%EA%B2%B0-%EA%B3%BC%EC%A0%95" class="hash-link" aria-label="💡 해결 과정에 대한 직접 링크" title="💡 해결 과정에 대한 직접 링크">​</a></h2>
<p>이 문제는 다음과 같은 방법으로 접근할 수 있습니다:</p>
<ol>
<li><strong>약수의 개수를 구하는 함수를 구현</strong></li>
<li><strong>약수의 개수가 짝수인 수는 더하고, 약수의 개수가 홀수인 수는 뺀 수를 return</strong></li>
</ol>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-정답-코드">✅ 정답 코드<a href="https://junyeol.github.io/blog/programmers-divisort#-%EC%A0%95%EB%8B%B5-%EC%BD%94%EB%93%9C" class="hash-link" aria-label="✅ 정답 코드에 대한 직접 링크" title="✅ 정답 코드에 대한 직접 링크">​</a></h2>
<div class="language-js codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-js codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">div</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">num</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">let</span><span class="token plain"> ct </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">for</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">let</span><span class="token plain"> i </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> i </span><span class="token operator" style="color:#393A34">&lt;=</span><span class="token plain"> num</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> i</span><span class="token operator" style="color:#393A34">++</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">num </span><span class="token operator" style="color:#393A34">%</span><span class="token plain"> i </span><span class="token operator" style="color:#393A34">===</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      ct</span><span class="token operator" style="color:#393A34">++</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> ct</span><span class="token operator" style="color:#393A34">++</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">solution</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">left</span><span class="token parameter punctuation" style="color:#393A34">,</span><span class="token parameter"> right</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">let</span><span class="token plain"> result </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">for</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">let</span><span class="token plain"> i </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> left</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> i </span><span class="token operator" style="color:#393A34">&lt;=</span><span class="token plain"> right</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> i</span><span class="token operator" style="color:#393A34">++</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">let</span><span class="token plain"> temp </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">div</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">i</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    temp </span><span class="token operator" style="color:#393A34">%</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">2</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">===</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">?</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">result </span><span class="token operator" style="color:#393A34">+=</span><span class="token plain"> i</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">result </span><span class="token operator" style="color:#393A34">-=</span><span class="token plain"> i</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> result</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-코드-설명">🔍 코드 설명<a href="https://junyeol.github.io/blog/programmers-divisort#-%EC%BD%94%EB%93%9C-%EC%84%A4%EB%AA%85" class="hash-link" aria-label="🔍 코드 설명에 대한 직접 링크" title="🔍 코드 설명에 대한 직접 링크">​</a></h2>
<ol>
<li><strong>약수의 개수를 구하는 함수를 구현</strong>: 주어진 n이 반환해야하는 문자열의 길이 값이므로 for문의 조건으로 사용</li>
<li><strong>약수의 개수가 짝수인 수는 더하고, 약수의 개수가 홀수인 수는 뺀 수를 return</strong>: 홀수냐 짝수냐에 따라 추가되는 문자가 다르므로 구분한다.</li>
</ol>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-배운-점">📚 배운 점<a href="https://junyeol.github.io/blog/programmers-divisort#-%EB%B0%B0%EC%9A%B4-%EC%A0%90" class="hash-link" aria-label="📚 배운 점에 대한 직접 링크" title="📚 배운 점에 대한 직접 링크">​</a></h2>
<ul>
<li><strong>꼭 하나의 함수로만 구현하지 않아도 된다!</strong></li>
</ul>
<hr>
<p><strong>문제 출처</strong>: <a href="https://school.programmers.co.kr/learn/courses/30/lessons/77884" target="_blank" rel="noopener noreferrer">프로그래머스</a></p>]]></content:encoded>
            <category>프로그래머스</category>
            <category>알고리즘</category>
            <category>코딩테스트</category>
            <category>JavaScript</category>
            <category>배열</category>
        </item>
        <item>
            <title><![CDATA[Lv.1 - 수박수박수박수박수박수?]]></title>
            <link>https://junyeol.github.io/blog/programmers-watermelon</link>
            <guid>https://junyeol.github.io/blog/programmers-watermelon</guid>
            <pubDate>Sun, 21 Sep 2025 00:00:00 GMT</pubDate>
            <description><![CDATA[프로그래머스 Level 1 문제 "수박수박수박수박수박수?"]]></description>
            <content:encoded><![CDATA[<p>프로그래머스 Level 1 문제 "수박수박수박수박수박수?"</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-문제-설명">📋 문제 설명<a href="https://junyeol.github.io/blog/programmers-watermelon#-%EB%AC%B8%EC%A0%9C-%EC%84%A4%EB%AA%85" class="hash-link" aria-label="📋 문제 설명에 대한 직접 링크" title="📋 문제 설명에 대한 직접 링크">​</a></h2>
<p>길이가 n이고, "수박수박수박수...."와 같은 패턴을 유지하는 문자열을 리턴하는 함수, solution을 완성하세요.</p>
<p>예를들어 n이 4이면 "수박수박"을 리턴하고 3이라면 "수박수"를 리턴하면 됩니다.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-제한사항">🔒 제한사항<a href="https://junyeol.github.io/blog/programmers-watermelon#-%EC%A0%9C%ED%95%9C%EC%82%AC%ED%95%AD" class="hash-link" aria-label="🔒 제한사항에 대한 직접 링크" title="🔒 제한사항에 대한 직접 링크">​</a></h2>
<ul>
<li>n은 길이 10,000이하인 자연수입니다.</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-입출력-예">📝 입출력 예<a href="https://junyeol.github.io/blog/programmers-watermelon#-%EC%9E%85%EC%B6%9C%EB%A0%A5-%EC%98%88" class="hash-link" aria-label="📝 입출력 예에 대한 직접 링크" title="📝 입출력 예에 대한 직접 링크">​</a></h2>
<table><thead><tr><th>n</th><th>return</th></tr></thead><tbody><tr><td>3</td><td>수박수</td></tr><tr><td>4</td><td>수박수박</td></tr></tbody></table>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-해결-과정">💡 해결 과정<a href="https://junyeol.github.io/blog/programmers-watermelon#-%ED%95%B4%EA%B2%B0-%EA%B3%BC%EC%A0%95" class="hash-link" aria-label="💡 해결 과정에 대한 직접 링크" title="💡 해결 과정에 대한 직접 링크">​</a></h2>
<p>이 문제는 다음과 같은 방법으로 접근할 수 있습니다:</p>
<ol>
<li><strong>for문을 이용하여 n만큼 반복</strong></li>
<li><strong>for문 내에서 if문을 이용하여 홀수와 짝수를 구분</strong></li>
<li><strong>홀수일 경우 "수"를, 짝수일 경우 "박"을 result에 추가</strong></li>
<li><strong>result를 반환</strong></li>
</ol>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-정답-코드">✅ 정답 코드<a href="https://junyeol.github.io/blog/programmers-watermelon#-%EC%A0%95%EB%8B%B5-%EC%BD%94%EB%93%9C" class="hash-link" aria-label="✅ 정답 코드에 대한 직접 링크" title="✅ 정답 코드에 대한 직접 링크">​</a></h2>
<div class="language-js codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-js codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">solution</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">n</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">let</span><span class="token plain"> result </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">""</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">for</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">let</span><span class="token plain"> i </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> i </span><span class="token operator" style="color:#393A34">&lt;=</span><span class="token plain"> n</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> i</span><span class="token operator" style="color:#393A34">++</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">i </span><span class="token operator" style="color:#393A34">%</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">2</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">===</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      result </span><span class="token operator" style="color:#393A34">+=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"박"</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">else</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      result </span><span class="token operator" style="color:#393A34">+=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"수"</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> result</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-코드-설명">🔍 코드 설명<a href="https://junyeol.github.io/blog/programmers-watermelon#-%EC%BD%94%EB%93%9C-%EC%84%A4%EB%AA%85" class="hash-link" aria-label="🔍 코드 설명에 대한 직접 링크" title="🔍 코드 설명에 대한 직접 링크">​</a></h2>
<ol>
<li><strong>for문을 이용하여 n만큼 반복</strong>: 주어진 n이 반환해야하는 문자열의 길이 값이므로 for문의 조건으로 사용</li>
<li><strong>for문 내에서 if문을 이용하여 홀수와 짝수를 구분</strong>: 홀수냐 짝수냐에 따라 추가되는 문자가 다르므로 구분한다.</li>
<li><strong>홀수일 경우 "수"를, 짝수일 경우 "박"을 result에 추가</strong>: 최종적으로 만들어진 문자열을 반환해야하므로 조건에 따라 문자를 추가한다.</li>
<li><strong>result를 반환</strong>: 최종적으로 만들어진 문자열을 반환한다.</li>
</ol>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-배운-점">📚 배운 점<a href="https://junyeol.github.io/blog/programmers-watermelon#-%EB%B0%B0%EC%9A%B4-%EC%A0%90" class="hash-link" aria-label="📚 배운 점에 대한 직접 링크" title="📚 배운 점에 대한 직접 링크">​</a></h2>
<ul>
<li><strong>for문</strong>: 조건에 따라 범위 안의 코드를 반복하는 구문</li>
<li><strong>if문</strong>: 조건에 따라 코드를 실행하는 구문</li>
</ul>
<hr>
<p><strong>문제 출처</strong>: <a href="https://school.programmers.co.kr/learn/courses/30/lessons/12922" target="_blank" rel="noopener noreferrer">프로그래머스</a></p>]]></content:encoded>
            <category>프로그래머스</category>
            <category>알고리즘</category>
            <category>코딩테스트</category>
            <category>JavaScript</category>
            <category>배열</category>
        </item>
        <item>
            <title><![CDATA[Lv.1 - 내적]]></title>
            <link>https://junyeol.github.io/blog/programmers-inner-products</link>
            <guid>https://junyeol.github.io/blog/programmers-inner-products</guid>
            <pubDate>Sat, 20 Sep 2025 00:00:00 GMT</pubDate>
            <description><![CDATA[프로그래머스 Level 1 문제 "내적"]]></description>
            <content:encoded><![CDATA[<p>프로그래머스 Level 1 문제 "내적"</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-문제-설명">📋 문제 설명<a href="https://junyeol.github.io/blog/programmers-inner-products#-%EB%AC%B8%EC%A0%9C-%EC%84%A4%EB%AA%85" class="hash-link" aria-label="📋 문제 설명에 대한 직접 링크" title="📋 문제 설명에 대한 직접 링크">​</a></h2>
<p>길이가 같은 두 1차원 정수 배열 a, b가 매개변수로 주어집니다. a와 b의 내적을 return 하도록 solution 함수를 완성해주세요.</p>
<p>이때, a와 b의 내적은 a[0]*b[0] + a[1]*b[1] + ... + a[n-1]*b[n-1] 입니다. (n은 a, b의 길이)</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-제한사항">🔒 제한사항<a href="https://junyeol.github.io/blog/programmers-inner-products#-%EC%A0%9C%ED%95%9C%EC%82%AC%ED%95%AD" class="hash-link" aria-label="🔒 제한사항에 대한 직접 링크" title="🔒 제한사항에 대한 직접 링크">​</a></h2>
<ul>
<li>a, b의 길이는 1 이상 1,000 이하입니다.</li>
<li>a, b의 모든 수는 -1,000 이상 1,000 이하입니다.</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-입출력-예">📝 입출력 예<a href="https://junyeol.github.io/blog/programmers-inner-products#-%EC%9E%85%EC%B6%9C%EB%A0%A5-%EC%98%88" class="hash-link" aria-label="📝 입출력 예에 대한 직접 링크" title="📝 입출력 예에 대한 직접 링크">​</a></h2>
<table><thead><tr><th>a</th><th>b</th><th>return</th></tr></thead><tbody><tr><td>[1,2,3,4]</td><td>[-3,-1,0,2]</td><td>3</td></tr><tr><td>[-1,0,-1]</td><td>[1,0,-1]</td><td>-2</td></tr></tbody></table>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-해결-과정">💡 해결 과정<a href="https://junyeol.github.io/blog/programmers-inner-products#-%ED%95%B4%EA%B2%B0-%EA%B3%BC%EC%A0%95" class="hash-link" aria-label="💡 해결 과정에 대한 직접 링크" title="💡 해결 과정에 대한 직접 링크">​</a></h2>
<p>이 문제는 다음과 같은 방법으로 접근할 수 있습니다:</p>
<ol start="0">
<li><strong>내적 이란</strong>: 수학적인 접근에서 두 배열의 길이가 같지 않다면 내적이 성립이 안되기 때문에 길이가 같다고 생각한다.</li>
<li><strong>내적 계산</strong>: a와 b의 내적을 계산하기 위해 for문을 사용하여 a[i]와 b[i]를 곱한 후 변수에 저장한다.</li>
<li><strong>결과 반환</strong>: for문이 끝난 후 저장된 변수를 반환한다.</li>
</ol>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-정답-코드">✅ 정답 코드<a href="https://junyeol.github.io/blog/programmers-inner-products#-%EC%A0%95%EB%8B%B5-%EC%BD%94%EB%93%9C" class="hash-link" aria-label="✅ 정답 코드에 대한 직접 링크" title="✅ 정답 코드에 대한 직접 링크">​</a></h2>
<div class="language-js codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-js codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">solution</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">a</span><span class="token parameter punctuation" style="color:#393A34">,</span><span class="token parameter"> b</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">let</span><span class="token plain"> result </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">// 수학적인 접근에서 내적이라면 길이가 같다.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">for</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">let</span><span class="token plain"> i </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> i </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain"> a</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">length</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> i</span><span class="token operator" style="color:#393A34">++</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    result </span><span class="token operator" style="color:#393A34">+=</span><span class="token plain"> a</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">i</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> b</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">i</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> result</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-코드-설명">🔍 코드 설명<a href="https://junyeol.github.io/blog/programmers-inner-products#-%EC%BD%94%EB%93%9C-%EC%84%A4%EB%AA%85" class="hash-link" aria-label="🔍 코드 설명에 대한 직접 링크" title="🔍 코드 설명에 대한 직접 링크">​</a></h2>
<ol>
<li><strong>내적 계산</strong>: a와 b의 내적을 계산하기 위해 for문을 사용하여 a[i]와 b[i]를 곱한 후 변수에 저장한다.</li>
<li><strong>결과 반환</strong>: for문이 끝난 후 저장된 변수를 반환한다.</li>
</ol>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-배운-점">📚 배운 점<a href="https://junyeol.github.io/blog/programmers-inner-products#-%EB%B0%B0%EC%9A%B4-%EC%A0%90" class="hash-link" aria-label="📚 배운 점에 대한 직접 링크" title="📚 배운 점에 대한 직접 링크">​</a></h2>
<ul>
<li><strong>for문</strong>: 배열의 길이만큼 반복하여 내적을 계산한다.</li>
</ul>
<hr>
<p><strong>문제 출처</strong>: <a href="https://school.programmers.co.kr/learn/courses/30/lessons/70128" target="_blank" rel="noopener noreferrer">프로그래머스</a></p>]]></content:encoded>
            <category>프로그래머스</category>
            <category>알고리즘</category>
            <category>코딩테스트</category>
            <category>JavaScript</category>
            <category>배열</category>
        </item>
        <item>
            <title><![CDATA[Lv.1 - 제일 작은 수 제거하기]]></title>
            <link>https://junyeol.github.io/blog/programmers-min-number</link>
            <guid>https://junyeol.github.io/blog/programmers-min-number</guid>
            <pubDate>Sat, 20 Sep 2025 00:00:00 GMT</pubDate>
            <description><![CDATA[프로그래머스 Level 1 문제 "제일 작은 수 제거하기"]]></description>
            <content:encoded><![CDATA[<p>프로그래머스 Level 1 문제 "제일 작은 수 제거하기"</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-문제-설명">📋 문제 설명<a href="https://junyeol.github.io/blog/programmers-min-number#-%EB%AC%B8%EC%A0%9C-%EC%84%A4%EB%AA%85" class="hash-link" aria-label="📋 문제 설명에 대한 직접 링크" title="📋 문제 설명에 대한 직접 링크">​</a></h2>
<p>정수를 저장한 배열, arr 에서 가장 작은 수를 제거한 배열을 리턴하는 함수, solution을 완성해주세요.</p>
<p>단, 리턴하려는 배열이 빈 배열인 경우엔 배열에 -1을 채워 리턴하세요.</p>
<p>예를들어 arr이 [4,3,2,1]인 경우는 [4,3,2]를 리턴 하고, [10]면 [-1]을 리턴 합니다.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-제한사항">🔒 제한사항<a href="https://junyeol.github.io/blog/programmers-min-number#-%EC%A0%9C%ED%95%9C%EC%82%AC%ED%95%AD" class="hash-link" aria-label="🔒 제한사항에 대한 직접 링크" title="🔒 제한사항에 대한 직접 링크">​</a></h2>
<ul>
<li>arr은 길이 1 이상인 배열입니다.</li>
<li>인덱스 i, j에 대해 i ≠ j이면 arr[i] ≠ arr[j] 입니다.</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-입출력-예">📝 입출력 예<a href="https://junyeol.github.io/blog/programmers-min-number#-%EC%9E%85%EC%B6%9C%EB%A0%A5-%EC%98%88" class="hash-link" aria-label="📝 입출력 예에 대한 직접 링크" title="📝 입출력 예에 대한 직접 링크">​</a></h2>
<table><thead><tr><th>arr</th><th>return</th></tr></thead><tbody><tr><td>[4,3,2,1]</td><td>[4,3,2]</td></tr><tr><td>[10]</td><td>[-1]</td></tr></tbody></table>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-해결-과정">💡 해결 과정<a href="https://junyeol.github.io/blog/programmers-min-number#-%ED%95%B4%EA%B2%B0-%EA%B3%BC%EC%A0%95" class="hash-link" aria-label="💡 해결 과정에 대한 직접 링크" title="💡 해결 과정에 대한 직접 링크">​</a></h2>
<p>이 문제는 다음과 같은 방법으로 접근할 수 있습니다:</p>
<ol>
<li><strong>배열의 길이가 1인 조건에 따른 처리</strong>: 문제 조건에 따라서 길이가 1이라면 -1을 가진 배열을 반환한다.</li>
<li><strong>배열에서 가장 작은 수 찾기</strong>: spread 구문을 이용하여 arr 배열의 최솟값을 찾는다.</li>
<li><strong>배열에서 가장 작은 수 제거</strong>: filter 메서드를 이용하여 최솟값과 다른 값을 배열로 반환한다.</li>
<li><strong>결과 반환</strong>: filter 메서드를 이용한 결과를 반환한다.</li>
</ol>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-정답-코드">✅ 정답 코드<a href="https://junyeol.github.io/blog/programmers-min-number#-%EC%A0%95%EB%8B%B5-%EC%BD%94%EB%93%9C" class="hash-link" aria-label="✅ 정답 코드에 대한 직접 링크" title="✅ 정답 코드에 대한 직접 링크">​</a></h2>
<div class="language-js codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-js codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">solution</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">arr</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">arr</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">length </span><span class="token operator" style="color:#393A34">&lt;=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token operator" style="color:#393A34">-</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// arr의 길이가 1 이하일 경우 -1만 넣은 배열을 반환</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> </span><span class="token constant" style="color:#36acaa">MIN</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> Math</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">min</span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">...</span><span class="token plain">arr</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// 전개 구문을 이용해 arr 배열의 최소 값 찾기</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  arr </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> arr</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">filter</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">element</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=&gt;</span><span class="token plain"> element </span><span class="token operator" style="color:#393A34">!==</span><span class="token plain"> </span><span class="token constant" style="color:#36acaa">MIN</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// filter를 이용하여 최솟값에 맞지않는 값들만 반환</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> arr</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// 결과를 반환</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-코드-설명">🔍 코드 설명<a href="https://junyeol.github.io/blog/programmers-min-number#-%EC%BD%94%EB%93%9C-%EC%84%A4%EB%AA%85" class="hash-link" aria-label="🔍 코드 설명에 대한 직접 링크" title="🔍 코드 설명에 대한 직접 링크">​</a></h2>
<ol>
<li><strong>배열의 길이가 1인 조건에 따른 처리</strong>: 문제 조건에 따라서 길이가 1이라면 -1을 가진 배열을 반환한다.</li>
<li><strong>배열에서 가장 작은 수 찾기</strong>: spread 구문을 이용하여 arr 배열의 최솟값을 찾는다.</li>
<li><strong>배열에서 가장 작은 수 제거</strong>: filter 메서드를 이용하여 최솟값과 다른 값을 배열로 반환한다.</li>
<li><strong>결과 반환</strong>: filter 메서드를 이용한 결과를 반환한다.</li>
</ol>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-배운-점">📚 배운 점<a href="https://junyeol.github.io/blog/programmers-min-number#-%EB%B0%B0%EC%9A%B4-%EC%A0%90" class="hash-link" aria-label="📚 배운 점에 대한 직접 링크" title="📚 배운 점에 대한 직접 링크">​</a></h2>
<ul>
<li><strong>filter 메서드</strong>: 배열에서 특정 조건을 만족하는 요소들을 필터링하여 새로운 배열을 반환하는 유용한 메서드</li>
<li><strong>spread 구문</strong>: 배열을 전개하여 최솟값을 찾는 유용한 구문</li>
</ul>
<hr>
<p><strong>문제 출처</strong>: <a href="https://school.programmers.co.kr/learn/courses/30/lessons/12935" target="_blank" rel="noopener noreferrer">프로그래머스</a></p>]]></content:encoded>
            <category>프로그래머스</category>
            <category>알고리즘</category>
            <category>코딩테스트</category>
            <category>JavaScript</category>
            <category>배열</category>
        </item>
        <item>
            <title><![CDATA[9월 19일 팀 데일리 미션 정리]]></title>
            <link>https://junyeol.github.io/blog/daily-team-mission-09-19</link>
            <guid>https://junyeol.github.io/blog/daily-team-mission-09-19</guid>
            <pubDate>Fri, 19 Sep 2025 00:00:00 GMT</pubDate>
            <description><![CDATA[매일 진행하는 팀미팅 간의 데일리 팀미션 퀴즈 정리]]></description>
            <content:encoded><![CDATA[<p>매일 진행하는 팀미팅 간의 데일리 팀미션 퀴즈 정리</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-정리">📝 정리<a href="https://junyeol.github.io/blog/daily-team-mission-09-19#-%EC%A0%95%EB%A6%AC" class="hash-link" aria-label="📝 정리에 대한 직접 링크" title="📝 정리에 대한 직접 링크">​</a></h2>
<p><strong>INCREMENTAL STATIC REGENERERATION 란 뭘까요?</strong></p>
<p>일반적인 정적 생성 방식(Static Site Generation)은 빌드 시점에 모든 페이지를 미리 만들어 놓습니다. 이렇게 미리 만들어진 페이지는 빠르지만, 데이터가 업데이트되면 전체 사이트를 <strong>다시 빌드</strong>해야 하는 번거로움이 있습니다.</p>
<p>ISR은 이 단점을 보완합니다. 페이지를 처음 빌드할 때 정적 페이지를 생성하지만,
개발자가 설정한 <strong>특정 시간</strong>(revalidate)이 지나면 다음 요청이 들어왔을 때 백그라운드에서 해당 페이지를 <strong>새로운 데이터로 갱신</strong>합니다.
이 과정에서 사용자는 갱신 중인 페이지를 기다릴 필요 없이 기존의 페이지를 즉시 보게 됩니다.</p>
<p><strong>ISR과 동적 생성의 차이는 뭐가 있을까요?</strong></p>
<p><img decoding="async" loading="lazy" alt="image" src="https://junyeol.github.io/assets/images/2025-09-19-daily-team-8ad376ec89ae4574f42daebd5f811632.png" width="1404" height="486" class="img_ev3q"></p>
<hr>]]></content:encoded>
            <category>Next.js</category>
            <category>ISR</category>
            <category>동적 생성</category>
            <category>정적 생성</category>
        </item>
        <item>
            <title><![CDATA[Lv.1 - 가운데 글자 가져오기]]></title>
            <link>https://junyeol.github.io/blog/programmers-center-char</link>
            <guid>https://junyeol.github.io/blog/programmers-center-char</guid>
            <pubDate>Fri, 19 Sep 2025 00:00:00 GMT</pubDate>
            <description><![CDATA[프로그래머스 Level 1 문제 "가운데 글자 가져오기"]]></description>
            <content:encoded><![CDATA[<p>프로그래머스 Level 1 문제 "가운데 글자 가져오기"</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-문제-설명">📋 문제 설명<a href="https://junyeol.github.io/blog/programmers-center-char#-%EB%AC%B8%EC%A0%9C-%EC%84%A4%EB%AA%85" class="hash-link" aria-label="📋 문제 설명에 대한 직접 링크" title="📋 문제 설명에 대한 직접 링크">​</a></h2>
<p>단어 s의 가운데 글자를 반환하는 함수, solution을 만들어 보세요. 단어의 길이가 짝수라면 가운데 두글자를 반환하면 됩니다.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-제한사항">🔒 제한사항<a href="https://junyeol.github.io/blog/programmers-center-char#-%EC%A0%9C%ED%95%9C%EC%82%AC%ED%95%AD" class="hash-link" aria-label="🔒 제한사항에 대한 직접 링크" title="🔒 제한사항에 대한 직접 링크">​</a></h2>
<ul>
<li>s는 길이가 1 이상, 100이하인 스트링입니다.</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-입출력-예">📝 입출력 예<a href="https://junyeol.github.io/blog/programmers-center-char#-%EC%9E%85%EC%B6%9C%EB%A0%A5-%EC%98%88" class="hash-link" aria-label="📝 입출력 예에 대한 직접 링크" title="📝 입출력 예에 대한 직접 링크">​</a></h2>
<table><thead><tr><th>s</th><th>return</th></tr></thead><tbody><tr><td>"abcde"</td><td>"c"</td></tr><tr><td>"qwer"</td><td>"we"</td></tr></tbody></table>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-해결-과정">💡 해결 과정<a href="https://junyeol.github.io/blog/programmers-center-char#-%ED%95%B4%EA%B2%B0-%EA%B3%BC%EC%A0%95" class="hash-link" aria-label="💡 해결 과정에 대한 직접 링크" title="💡 해결 과정에 대한 직접 링크">​</a></h2>
<p>이 문제는 다음과 같은 방법으로 접근할 수 있습니다:</p>
<ol>
<li><strong>가운데 글자 찾기</strong>: s.length / 2를 사용하여 가운데 인덱스를 찾습니다.</li>
<li><strong>결과 반환</strong>: 짝수라는 조건을 사용하여 그에 맞는 substring() 메서드를 이용하여 값을 반환합니다.</li>
</ol>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-정답-코드">✅ 정답 코드<a href="https://junyeol.github.io/blog/programmers-center-char#-%EC%A0%95%EB%8B%B5-%EC%BD%94%EB%93%9C" class="hash-link" aria-label="✅ 정답 코드에 대한 직접 링크" title="✅ 정답 코드에 대한 직접 링크">​</a></h2>
<div class="language-js codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-js codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">solution</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">s</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> </span><span class="token constant" style="color:#36acaa">CENTER</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> s</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">length </span><span class="token operator" style="color:#393A34">/</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">2</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> s</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">length </span><span class="token operator" style="color:#393A34">%</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">2</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">===</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token operator" style="color:#393A34">?</span><span class="token plain"> s</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">substring</span><span class="token punctuation" style="color:#393A34">(</span><span class="token constant" style="color:#36acaa">CENTER</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token constant" style="color:#36acaa">CENTER</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> s</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">substring</span><span class="token punctuation" style="color:#393A34">(</span><span class="token constant" style="color:#36acaa">CENTER</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token constant" style="color:#36acaa">CENTER</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-코드-설명">🔍 코드 설명<a href="https://junyeol.github.io/blog/programmers-center-char#-%EC%BD%94%EB%93%9C-%EC%84%A4%EB%AA%85" class="hash-link" aria-label="🔍 코드 설명에 대한 직접 링크" title="🔍 코드 설명에 대한 직접 링크">​</a></h2>
<p><strong>substring() 메서드, 삼항 연산자, 산술 연산자를 사용한 문자열 연결 방법</strong></p>
<ol>
<li>s.length / 2를 사용하여 가운데 인덱스를 찾습니다.</li>
<li>s.length % 2 === 0를 사용하여 짝수인지 홀수인지 구분합니다.</li>
<li>짝수라면 s.substring(CENTER - 1 , CENTER+ 1)를 사용하여 가운데 두글자를 반환합니다.</li>
<li>홀수라면 s.substring(CENTER, CENTER + 1)를 사용하여 가운데 한글자를 반환합니다.</li>
</ol>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-배운-점">📚 배운 점<a href="https://junyeol.github.io/blog/programmers-center-char#-%EB%B0%B0%EC%9A%B4-%EC%A0%90" class="hash-link" aria-label="📚 배운 점에 대한 직접 링크" title="📚 배운 점에 대한 직접 링크">​</a></h2>
<ul>
<li><strong>substring() 메서드</strong>: 특정 인덱스를 기준으로 문자열을 추출하는 유용한 메서드</li>
<li><strong>삼항 연산자</strong>: 조건에 따라 다른 값을 반환하는 유용한 연산자</li>
<li><strong>산술 연산자</strong>: 산술 연산을 수행하는 유용한 연산자</li>
<li><strong>코드 간결성</strong>: 복잡한 로직 없이 간단한 메서드로 문제 해결</li>
</ul>
<hr>
<p><strong>문제 출처</strong>: <a href="https://school.programmers.co.kr/learn/courses/30/lessons/12903" target="_blank" rel="noopener noreferrer">프로그래머스</a></p>]]></content:encoded>
            <category>프로그래머스</category>
            <category>알고리즘</category>
            <category>코딩테스트</category>
            <category>JavaScript</category>
            <category>배열</category>
        </item>
        <item>
            <title><![CDATA[Lv.1 - 핸드폰 번호 가리기]]></title>
            <link>https://junyeol.github.io/blog/programmers-phone-number</link>
            <guid>https://junyeol.github.io/blog/programmers-phone-number</guid>
            <pubDate>Fri, 19 Sep 2025 00:00:00 GMT</pubDate>
            <description><![CDATA[프로그래머스 Level 1 문제 "핸드폰 번호 가리기"]]></description>
            <content:encoded><![CDATA[<p>프로그래머스 Level 1 문제 "핸드폰 번호 가리기"</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-문제-설명">📋 문제 설명<a href="https://junyeol.github.io/blog/programmers-phone-number#-%EB%AC%B8%EC%A0%9C-%EC%84%A4%EB%AA%85" class="hash-link" aria-label="📋 문제 설명에 대한 직접 링크" title="📋 문제 설명에 대한 직접 링크">​</a></h2>
<p>프로그래머스 모바일은 개인정보 보호를 위해 고지서를 보낼 때 고객들의 전화번호의 일부를 가립니다.
전화번호가 문자열 phone_number로 주어졌을 때, 전화번호의 뒷 4자리를 제외한 나머지 숫자를 전부 *으로 가린 문자열을 리턴하는 함수, solution을 완성해주세요.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-제한사항">🔒 제한사항<a href="https://junyeol.github.io/blog/programmers-phone-number#-%EC%A0%9C%ED%95%9C%EC%82%AC%ED%95%AD" class="hash-link" aria-label="🔒 제한사항에 대한 직접 링크" title="🔒 제한사항에 대한 직접 링크">​</a></h2>
<ul>
<li>phone_number는 길이 4 이상, 20이하인 문자열입니다.</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-입출력-예">📝 입출력 예<a href="https://junyeol.github.io/blog/programmers-phone-number#-%EC%9E%85%EC%B6%9C%EB%A0%A5-%EC%98%88" class="hash-link" aria-label="📝 입출력 예에 대한 직접 링크" title="📝 입출력 예에 대한 직접 링크">​</a></h2>
<table><thead><tr><th>phone_number</th><th>return</th></tr></thead><tbody><tr><td>"01033334444"</td><td>"0103333****"</td></tr><tr><td>"027778888"</td><td>"02777****"</td></tr></tbody></table>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-해결-과정">💡 해결 과정<a href="https://junyeol.github.io/blog/programmers-phone-number#-%ED%95%B4%EA%B2%B0-%EA%B3%BC%EC%A0%95" class="hash-link" aria-label="💡 해결 과정에 대한 직접 링크" title="💡 해결 과정에 대한 직접 링크">​</a></h2>
<p>이 문제는 다음과 같은 방법으로 접근할 수 있습니다:</p>
<ol>
<li><strong>인덱스 찾기</strong>: 맨 뒷 4자리를 제외한 문자열을 찾습니다.</li>
<li><strong>결과 반환</strong>: 찾은 문자열을 *로 치환한 후 나머지 4자리를 추가해줍니다.</li>
</ol>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-정답-코드">✅ 정답 코드<a href="https://junyeol.github.io/blog/programmers-phone-number#-%EC%A0%95%EB%8B%B5-%EC%BD%94%EB%93%9C" class="hash-link" aria-label="✅ 정답 코드에 대한 직접 링크" title="✅ 정답 코드에 대한 직접 링크">​</a></h2>
<div class="language-js codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-js codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">solution</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">phone_number</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">// substring와 replace를 이용해 일부분만 추출해 치환</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    phone_number</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">substring</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> phone_number</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">length </span><span class="token operator" style="color:#393A34">-</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">4</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">replace</span><span class="token punctuation" style="color:#393A34">(</span><span class="token regex regex-delimiter" style="color:#36acaa">/</span><span class="token regex regex-source language-regex char-set class-name" style="color:#36acaa">.</span><span class="token regex regex-delimiter" style="color:#36acaa">/</span><span class="token regex regex-flags" style="color:#36acaa">g</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"*"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    phone_number</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">substring</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">phone_number</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">length </span><span class="token operator" style="color:#393A34">-</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">4</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// function solution(phone_number) { repeat를 이용해 *로 치환</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">//     return "*".repeat(phone_number.length - 4) + phone_number.slice(-4);</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// }</span><br></span></code></pre></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-코드-설명">🔍 코드 설명<a href="https://junyeol.github.io/blog/programmers-phone-number#-%EC%BD%94%EB%93%9C-%EC%84%A4%EB%AA%85" class="hash-link" aria-label="🔍 코드 설명에 대한 직접 링크" title="🔍 코드 설명에 대한 직접 링크">​</a></h2>
<p><strong>substring() 메서드, replace() 메서드, 플러스 연산자를 사용한 문자열 연결 방법</strong></p>
<ol>
<li>phone_number에서 뒷 4자리 인덱스를 찾습니다.</li>
<li>phone_number에서 뒷 4자리 인덱스를 제외한 문자열을 찾습니다.</li>
<li>찾은 문자열을 *로 치환한 후 나머지 4자리를 추가해줍니다.</li>
</ol>
<p><strong><em>repeat() 메서드, slice() 메서드</em></strong></p>
<ol>
<li>phone_number 문자열의 길이 보다 4 적은 문자열들의 길이 만큼 *로 치환해줍니다.</li>
<li>phone_number에서 slice(-4)를 사용하여 뒷 4자리 인덱스를 찾습니다.</li>
<li>찾은 문자열들을 더하기 연산자로 합쳐 반환합니다.</li>
</ol>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-배운-점">📚 배운 점<a href="https://junyeol.github.io/blog/programmers-phone-number#-%EB%B0%B0%EC%9A%B4-%EC%A0%90" class="hash-link" aria-label="📚 배운 점에 대한 직접 링크" title="📚 배운 점에 대한 직접 링크">​</a></h2>
<ul>
<li><strong>substring() 메서드</strong>: 특정 인덱스를 기준으로 문자열을 추출하는 유용한 메서드</li>
<li><strong>replace() 메서드</strong>: 특정 문자를 다른 문자로 치환하는 유용한 메서드</li>
<li><strong>repeat() 메서드</strong>: 특정 문자를 반복하여 문자열로 만드는 유용한 메서드</li>
<li><strong>slice() 메서드</strong>: 특정 인덱스를 기준으로 문자열을 추출하는 유용한 메서드</li>
<li><strong>문자열 연결</strong>: 플러스 연산자를 사용한 문자열 연결 방법</li>
<li><strong>코드 간결성</strong>: 복잡한 로직 없이 간단한 메서드로 문제 해결</li>
</ul>
<hr>
<p><strong>문제 출처</strong>: <a href="https://school.programmers.co.kr/learn/courses/30/lessons/12948" target="_blank" rel="noopener noreferrer">프로그래머스</a></p>]]></content:encoded>
            <category>프로그래머스</category>
            <category>알고리즘</category>
            <category>코딩테스트</category>
            <category>JavaScript</category>
            <category>배열</category>
        </item>
        <item>
            <title><![CDATA[Lv.1 - 콜라츠 추측]]></title>
            <link>https://junyeol.github.io/blog/programmers-collatz</link>
            <guid>https://junyeol.github.io/blog/programmers-collatz</guid>
            <pubDate>Thu, 18 Sep 2025 00:00:00 GMT</pubDate>
            <description><![CDATA[프로그래머스 Level 1 문제 "콜라츠 추측"]]></description>
            <content:encoded><![CDATA[<p>프로그래머스 Level 1 문제 "콜라츠 추측"</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-문제-설명">📋 문제 설명<a href="https://junyeol.github.io/blog/programmers-collatz#-%EB%AC%B8%EC%A0%9C-%EC%84%A4%EB%AA%85" class="hash-link" aria-label="📋 문제 설명에 대한 직접 링크" title="📋 문제 설명에 대한 직접 링크">​</a></h2>
<p>1937년 Collatz란 사람에 의해 제기된 이 추측은, 주어진 수가 1이 될 때까지 다음 작업을 반복하면, 모든 수를 1로 만들 수 있다는 추측입니다. 작업은 다음과 같습니다.</p>
<div class="language-text codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">1-1. 입력된 수가 짝수라면 2로 나눕니다.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">1-2. 입력된 수가 홀수라면 3을 곱하고 1을 더합니다.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">2. 결과로 나온 수에 같은 작업을 1이 될 때까지 반복합니다.</span><br></span></code></pre></div></div>
<p>예를 들어, 주어진 수가 6이라면 6 → 3 → 10 → 5 → 16 → 8 → 4 → 2 → 1 이 되어 총 8번 만에 1이 됩니다. 위 작업을 몇 번이나 반복해야 하는지 반환하는 함수, solution을 완성해 주세요. 단, 주어진 수가 1인 경우에는 0을, 작업을 500번 반복할 때까지 1이 되지 않는다면 –1을 반환해 주세요.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-제한사항">🔒 제한사항<a href="https://junyeol.github.io/blog/programmers-collatz#-%EC%A0%9C%ED%95%9C%EC%82%AC%ED%95%AD" class="hash-link" aria-label="🔒 제한사항에 대한 직접 링크" title="🔒 제한사항에 대한 직접 링크">​</a></h2>
<ul>
<li>입력된 수, num은 1 이상 8,000,000 미만인 정수입니다.</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-입출력-예">📝 입출력 예<a href="https://junyeol.github.io/blog/programmers-collatz#-%EC%9E%85%EC%B6%9C%EB%A0%A5-%EC%98%88" class="hash-link" aria-label="📝 입출력 예에 대한 직접 링크" title="📝 입출력 예에 대한 직접 링크">​</a></h2>
<table><thead><tr><th>n</th><th>result</th></tr></thead><tbody><tr><td>6</td><td>8</td></tr><tr><td>16</td><td>4</td></tr><tr><td>626331</td><td>-1</td></tr></tbody></table>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="입출력-예-설명">입출력 예 설명<a href="https://junyeol.github.io/blog/programmers-collatz#%EC%9E%85%EC%B6%9C%EB%A0%A5-%EC%98%88-%EC%84%A4%EB%AA%85" class="hash-link" aria-label="입출력 예 설명에 대한 직접 링크" title="입출력 예 설명에 대한 직접 링크">​</a></h3>
<p><strong>입출력 예 #1</strong></p>
<p>문제의 설명과 같습니다.</p>
<p><strong>입출력 예 #2</strong></p>
<ul>
<li>6이 주어졌을 때, 6 → 3 → 10 → 5 → 16 → 8 → 4 → 2 → 1 이 되어 총 8번 만에 1이 됩니다.</li>
</ul>
<p><strong>입출력 예 #3</strong></p>
<ul>
<li>626331은 500번을 시도해도 1이 되지 못하므로 -1을 리턴해야 합니다.</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-해결-과정">💡 해결 과정<a href="https://junyeol.github.io/blog/programmers-collatz#-%ED%95%B4%EA%B2%B0-%EA%B3%BC%EC%A0%95" class="hash-link" aria-label="💡 해결 과정에 대한 직접 링크" title="💡 해결 과정에 대한 직접 링크">​</a></h2>
<p>이 문제는 다음과 같은 방법으로 접근할 수 있습니다:</p>
<ol>
<li><strong>인덱스 찾기</strong>: n이 1이 될 때까지 주어진 작업을 반복합니다</li>
<li><strong>결과 반환</strong>: n이 1이 될 때까지 반복한 횟수를 반환합니다</li>
</ol>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-정답-코드">✅ 정답 코드<a href="https://junyeol.github.io/blog/programmers-collatz#-%EC%A0%95%EB%8B%B5-%EC%BD%94%EB%93%9C" class="hash-link" aria-label="✅ 정답 코드에 대한 직접 링크" title="✅ 정답 코드에 대한 직접 링크">​</a></h2>
<div class="language-js codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-js codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">solution</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">num</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">num </span><span class="token operator" style="color:#393A34">===</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">let</span><span class="token plain"> count </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">while</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">count </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">500</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&amp;&amp;</span><span class="token plain"> num </span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">num </span><span class="token operator" style="color:#393A34">%</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">2</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">===</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      num </span><span class="token operator" style="color:#393A34">/=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">2</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">else</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      num </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> num </span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">3</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    count</span><span class="token operator" style="color:#393A34">++</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> num </span><span class="token operator" style="color:#393A34">===</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">?</span><span class="token plain"> count </span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-코드-설명">🔍 코드 설명<a href="https://junyeol.github.io/blog/programmers-collatz#-%EC%BD%94%EB%93%9C-%EC%84%A4%EB%AA%85" class="hash-link" aria-label="🔍 코드 설명에 대한 직접 링크" title="🔍 코드 설명에 대한 직접 링크">​</a></h2>
<ol>
<li>n이 1이 될 때까지 주어진 작업을 반복합니다.</li>
<li>n이 1이 될 때까지 반복한 횟수를 반환합니다.</li>
</ol>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-배운-점">📚 배운 점<a href="https://junyeol.github.io/blog/programmers-collatz#-%EB%B0%B0%EC%9A%B4-%EC%A0%90" class="hash-link" aria-label="📚 배운 점에 대한 직접 링크" title="📚 배운 점에 대한 직접 링크">​</a></h2>
<ul>
<li><strong>while문</strong>: 주어진 조건이 만족할 때까지 반복하는 루프</li>
<li><strong>삼항 연산자</strong>: 조건이 참이면 첫 번째 값, 거짓이면 두 번째 값을 반환하는 연산자</li>
<li><strong>코드 간결성</strong>: 복잡한 로직 없이 간단한 메서드로 문제 해결</li>
</ul>
<hr>
<p><strong>문제 출처</strong>: <a href="https://school.programmers.co.kr/learn/courses/30/lessons/12919" target="_blank" rel="noopener noreferrer">프로그래머스</a></p>]]></content:encoded>
            <category>프로그래머스</category>
            <category>알고리즘</category>
            <category>코딩테스트</category>
            <category>JavaScript</category>
            <category>배열</category>
        </item>
        <item>
            <title><![CDATA[Lv.1 - 서울에서 김서방 찾기]]></title>
            <link>https://junyeol.github.io/blog/programmers-seoul-kim</link>
            <guid>https://junyeol.github.io/blog/programmers-seoul-kim</guid>
            <pubDate>Thu, 18 Sep 2025 00:00:00 GMT</pubDate>
            <description><![CDATA[프로그래머스 Level 1 문제 "서울에서 김서방 찾기"]]></description>
            <content:encoded><![CDATA[<p>프로그래머스 Level 1 문제 "서울에서 김서방 찾기"</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-문제-설명">📋 문제 설명<a href="https://junyeol.github.io/blog/programmers-seoul-kim#-%EB%AC%B8%EC%A0%9C-%EC%84%A4%EB%AA%85" class="hash-link" aria-label="📋 문제 설명에 대한 직접 링크" title="📋 문제 설명에 대한 직접 링크">​</a></h2>
<p>String형 배열 seoul의 element중 "Kim"의 위치 x를 찾아, "김서방은 x에 있다"는 String을 반환하는 함수, solution을 완성하세요. seoul에 "Kim"은 오직 한 번만 나타나며 잘못된 값이 입력되는 경우는 없습니다.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-제한사항">🔒 제한사항<a href="https://junyeol.github.io/blog/programmers-seoul-kim#-%EC%A0%9C%ED%95%9C%EC%82%AC%ED%95%AD" class="hash-link" aria-label="🔒 제한사항에 대한 직접 링크" title="🔒 제한사항에 대한 직접 링크">​</a></h2>
<ul>
<li>seoul은 길이 1 이상, 1000 이하인 배열입니다.</li>
<li>seoul의 원소는 길이 1 이상, 20 이하인 문자열입니다.</li>
<li>"Kim"은 반드시 seoul 안에 포함되어 있습니다.</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-입출력-예">📝 입출력 예<a href="https://junyeol.github.io/blog/programmers-seoul-kim#-%EC%9E%85%EC%B6%9C%EB%A0%A5-%EC%98%88" class="hash-link" aria-label="📝 입출력 예에 대한 직접 링크" title="📝 입출력 예에 대한 직접 링크">​</a></h2>
<table><thead><tr><th>seoul</th><th>return</th></tr></thead><tbody><tr><td>["Jane", "Kim"]</td><td>1</td></tr></tbody></table>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="입출력-예-설명">입출력 예 설명<a href="https://junyeol.github.io/blog/programmers-seoul-kim#%EC%9E%85%EC%B6%9C%EB%A0%A5-%EC%98%88-%EC%84%A4%EB%AA%85" class="hash-link" aria-label="입출력 예 설명에 대한 직접 링크" title="입출력 예 설명에 대한 직접 링크">​</a></h3>
<p><strong>입출력 예 #1</strong></p>
<ul>
<li>Kim이 seoul의 1번째에 있으므로, "김서방은 1에 있다"를 return 해야 합니다.</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-해결-과정">💡 해결 과정<a href="https://junyeol.github.io/blog/programmers-seoul-kim#-%ED%95%B4%EA%B2%B0-%EA%B3%BC%EC%A0%95" class="hash-link" aria-label="💡 해결 과정에 대한 직접 링크" title="💡 해결 과정에 대한 직접 링크">​</a></h2>
<p>이 문제는 다음과 같은 방법으로 접근할 수 있습니다:</p>
<ol>
<li><strong>인덱스 찾기</strong>: seoul 배열에서 "Kim"이 있는 인덱스를 찾습니다</li>
<li><strong>결과 반환</strong>: "김서방은 "과 인덱스를 결합하여 반환합니다</li>
</ol>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-정답-코드">✅ 정답 코드<a href="https://junyeol.github.io/blog/programmers-seoul-kim#-%EC%A0%95%EB%8B%B5-%EC%BD%94%EB%93%9C" class="hash-link" aria-label="✅ 정답 코드에 대한 직접 링크" title="✅ 정답 코드에 대한 직접 링크">​</a></h2>
<div class="language-js codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-js codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">solution</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">seoul</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> idx </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> seoul</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">indexOf</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"Kim"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"김서방은 "</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> idx </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"에 있다"</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-코드-설명">🔍 코드 설명<a href="https://junyeol.github.io/blog/programmers-seoul-kim#-%EC%BD%94%EB%93%9C-%EC%84%A4%EB%AA%85" class="hash-link" aria-label="🔍 코드 설명에 대한 직접 링크" title="🔍 코드 설명에 대한 직접 링크">​</a></h2>
<ol>
<li>seoul 배열에서 'Kim'이 있는 인덱스를 찾습니다.</li>
<li>"김서방은 "과 찾은 인덱스, 그리고 "에 있다"를 문자열로 연결하여 반환합니다.</li>
</ol>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-배운-점">📚 배운 점<a href="https://junyeol.github.io/blog/programmers-seoul-kim#-%EB%B0%B0%EC%9A%B4-%EC%A0%90" class="hash-link" aria-label="📚 배운 점에 대한 직접 링크" title="📚 배운 점에 대한 직접 링크">​</a></h2>
<ul>
<li><strong>indexOf() 메서드</strong>: 배열에서 특정 원소의 인덱스를 찾는 유용한 메서드</li>
<li><strong>문자열 연결</strong>: 플러스 연산자를 사용한 문자열 연결 방법</li>
<li><strong>코드 간결성</strong>: 복잡한 로직 없이 간단한 메서드로 문제 해결</li>
</ul>
<hr>
<p><strong>문제 출처</strong>: <a href="https://school.programmers.co.kr/learn/courses/30/lessons/12919" target="_blank" rel="noopener noreferrer">프로그래머스</a></p>]]></content:encoded>
            <category>프로그래머스</category>
            <category>알고리즘</category>
            <category>코딩테스트</category>
            <category>JavaScript</category>
            <category>배열</category>
        </item>
        <item>
            <title><![CDATA[콜백함수]]></title>
            <link>https://junyeol.github.io/blog/core-javascript-week7</link>
            <guid>https://junyeol.github.io/blog/core-javascript-week7</guid>
            <pubDate>Wed, 17 Sep 2025 00:00:00 GMT</pubDate>
            <description><![CDATA[코어 자바스크립트 스터디 7주차 내용을 정리했습니다. 이번 주제는 콜백 함수입니다.]]></description>
            <content:encoded><![CDATA[<p>코어 자바스크립트 스터디 7주차 내용을 정리했습니다. 이번 주제는 <strong>콜백 함수</strong>입니다.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-콜백-함수란">🎯 콜백 함수란?<a href="https://junyeol.github.io/blog/core-javascript-week7#-%EC%BD%9C%EB%B0%B1-%ED%95%A8%EC%88%98%EB%9E%80" class="hash-link" aria-label="🎯 콜백 함수란?에 대한 직접 링크" title="🎯 콜백 함수란?에 대한 직접 링크">​</a></h2>
<p>콜백 함수는 다른 함수에게 실행 권한을 맡기는 함수입니다.
쉽게 말해, "이 함수를 나중에 적절한 타이밍에 실행해줘!"라고 다른 함수에게 부탁하는 것과 같습니다.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="기본-개념">기본 개념<a href="https://junyeol.github.io/blog/core-javascript-week7#%EA%B8%B0%EB%B3%B8-%EA%B0%9C%EB%85%90" class="hash-link" aria-label="기본 개념에 대한 직접 링크" title="기본 개념에 대한 직접 링크">​</a></h3>
<div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">// 콜백 함수의 기본 개념</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">주문받기</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">메뉴</span><span class="token parameter punctuation" style="color:#393A34">,</span><span class="token parameter"> 완료시실행할함수</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  console</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">log</span><span class="token punctuation" style="color:#393A34">(</span><span class="token template-string template-punctuation string" style="color:#e3116c">`</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">${</span><span class="token template-string interpolation">메뉴</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">}</span><span class="token template-string string" style="color:#e3116c"> 준비 중...</span><span class="token template-string template-punctuation string" style="color:#e3116c">`</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token function" style="color:#d73a49">setTimeout</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    console</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">log</span><span class="token punctuation" style="color:#393A34">(</span><span class="token template-string template-punctuation string" style="color:#e3116c">`</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">${</span><span class="token template-string interpolation">메뉴</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">}</span><span class="token template-string string" style="color:#e3116c"> 완성!</span><span class="token template-string template-punctuation string" style="color:#e3116c">`</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">완료시실행할함수</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// 콜백 함수 실행</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">2000</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token function" style="color:#d73a49">주문받기</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"아메리카노"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  console</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">log</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"감사합니다!"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-setinterval-예제">⏰ setInterval 예제<a href="https://junyeol.github.io/blog/core-javascript-week7#-setinterval-%EC%98%88%EC%A0%9C" class="hash-link" aria-label="⏰ setInterval 예제에 대한 직접 링크" title="⏰ setInterval 예제에 대한 직접 링크">​</a></h2>
<div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">let</span><span class="token plain"> count </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">숫자세기</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  console</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">log</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">count</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">++</span><span class="token plain">count </span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">4</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">clearInterval</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">timer</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// setInterval이 언제 실행할지 결정</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> timer </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">setInterval</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">숫자세기</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">300</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// 출력: 0, 1, 2, 3, 4 (0.3초 간격)</span><br></span></code></pre></div></div>
<p><strong>핵심</strong>: <code>setInterval</code>이 <code>숫자세기</code> 함수를 언제 실행할지 완전히 통제합니다.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="️-map-메서드와-매개변수-순서">🗺️ map 메서드와 매개변수 순서<a href="https://junyeol.github.io/blog/core-javascript-week7#%EF%B8%8F-map-%EB%A9%94%EC%84%9C%EB%93%9C%EC%99%80-%EB%A7%A4%EA%B0%9C%EB%B3%80%EC%88%98-%EC%88%9C%EC%84%9C" class="hash-link" aria-label="🗺️ map 메서드와 매개변수 순서에 대한 직접 링크" title="🗺️ map 메서드와 매개변수 순서에 대한 직접 링크">​</a></h2>
<div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">// map 메서드 예제</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> 원본배열 </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">10</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">20</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">30</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> 결과</span><span class="token number" style="color:#36acaa">1</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> 원본배열</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">map</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">값</span><span class="token parameter punctuation" style="color:#393A34">,</span><span class="token parameter"> 인덱스</span><span class="token parameter punctuation" style="color:#393A34">,</span><span class="token parameter"> 전체배열</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  console</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">log</span><span class="token punctuation" style="color:#393A34">(</span><span class="token template-string template-punctuation string" style="color:#e3116c">`</span><span class="token template-string string" style="color:#e3116c">값: </span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">${</span><span class="token template-string interpolation">값</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">}</span><span class="token template-string string" style="color:#e3116c">, 인덱스: </span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">${</span><span class="token template-string interpolation">인덱스</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">}</span><span class="token template-string template-punctuation string" style="color:#e3116c">`</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> 값 </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">5</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">console</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">log</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">결과</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// [15, 25, 35]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// 매개변수 순서를 바꾸면?</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> 결과</span><span class="token number" style="color:#36acaa">2</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> 원본배열</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">map</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">인덱스라고생각한것</span><span class="token parameter punctuation" style="color:#393A34">,</span><span class="token parameter"> 값이라고생각한것</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> 값이라고생각한것 </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">5</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// 실제로는 인덱스 + 5</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">console</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">log</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">결과</span><span class="token number" style="color:#36acaa">2</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// [5, 6, 7] (인덱스 0,1,2 + 5)</span><br></span></code></pre></div></div>
<p><strong>주의사항</strong>: 매개변수 이름은 중요하지 않습니다. 순서가 중요해요!</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-this-바인딩">🎯 this 바인딩<a href="https://junyeol.github.io/blog/core-javascript-week7#-this-%EB%B0%94%EC%9D%B8%EB%94%A9" class="hash-link" aria-label="🎯 this 바인딩에 대한 직접 링크" title="🎯 this 바인딩에 대한 직접 링크">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="콜백에서의-this-변화">콜백에서의 this 변화<a href="https://junyeol.github.io/blog/core-javascript-week7#%EC%BD%9C%EB%B0%B1%EC%97%90%EC%84%9C%EC%9D%98-this-%EB%B3%80%ED%99%94" class="hash-link" aria-label="콜백에서의 this 변화에 대한 직접 링크" title="콜백에서의 this 변화에 대한 직접 링크">​</a></h3>
<div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> 객체 </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token literal-property property" style="color:#36acaa">데이터</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">2</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">3</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token function-variable function" style="color:#d73a49">출력메서드</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">값</span><span class="token parameter punctuation" style="color:#393A34">,</span><span class="token parameter"> 인덱스</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    console</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">log</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"this:"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"값:"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> 값</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"인덱스:"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> 인덱스</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// 메서드로 호출 - this는 객체를 가리킴</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">객체</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">출력메서드</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">2</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// this: {데이터: Array(3), 출력메서드: ƒ} 값: 1 인덱스: 2</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// 콜백으로 전달 - this는 전역 객체를 가리킴</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">4</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">5</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">6</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">forEach</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">객체</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">출력메서드</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// this: Window 값: 4 인덱스: 0</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// this: Window 값: 5 인덱스: 1</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// this: Window 값: 6 인덱스: 2</span><br></span></code></pre></div></div>
<p><strong>교훈</strong>: 콜백으로 전달되는 순간, 원래 객체와의 연결이 끊어집니다.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-콜백-지옥-callback-hell">😱 콜백 지옥 (Callback Hell)<a href="https://junyeol.github.io/blog/core-javascript-week7#-%EC%BD%9C%EB%B0%B1-%EC%A7%80%EC%98%A5-callback-hell" class="hash-link" aria-label="😱 콜백 지옥 (Callback Hell)에 대한 직접 링크" title="😱 콜백 지옥 (Callback Hell)에 대한 직접 링크">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="문제가-되는-코드">문제가 되는 코드<a href="https://junyeol.github.io/blog/core-javascript-week7#%EB%AC%B8%EC%A0%9C%EA%B0%80-%EB%90%98%EB%8A%94-%EC%BD%94%EB%93%9C" class="hash-link" aria-label="문제가 되는 코드에 대한 직접 링크" title="문제가 되는 코드에 대한 직접 링크">​</a></h3>
<div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">setTimeout</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">name</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">let</span><span class="token plain"> coffeeList </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> name</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    console</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">log</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">coffeeList</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">setTimeout</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">name</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        coffeeList </span><span class="token operator" style="color:#393A34">+=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">", "</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> name</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        console</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">log</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">coffeeList</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token function" style="color:#d73a49">setTimeout</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">name</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            coffeeList </span><span class="token operator" style="color:#393A34">+=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">", "</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> name</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            console</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">log</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">coffeeList</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token function" style="color:#d73a49">setTimeout</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">              </span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">name</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                coffeeList </span><span class="token operator" style="color:#393A34">+=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">", "</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> name</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                console</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">log</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">coffeeList</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">              </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">              </span><span class="token number" style="color:#36acaa">500</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">              </span><span class="token string" style="color:#e3116c">"카페라떼"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token number" style="color:#36acaa">500</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token string" style="color:#e3116c">"카페모카"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token number" style="color:#36acaa">500</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token string" style="color:#e3116c">"아메리카노"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token number" style="color:#36acaa">500</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token string" style="color:#e3116c">"에스프레소"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre></div></div>
<p><strong>이 코드의 문제점</strong>:</p>
<ul>
<li>가독성이 매우 떨어짐</li>
<li>디버깅이 어려움</li>
<li>코드 수정이 복잡함</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="️-콜백-지옥-해결-방법">🛠️ 콜백 지옥 해결 방법<a href="https://junyeol.github.io/blog/core-javascript-week7#%EF%B8%8F-%EC%BD%9C%EB%B0%B1-%EC%A7%80%EC%98%A5-%ED%95%B4%EA%B2%B0-%EB%B0%A9%EB%B2%95" class="hash-link" aria-label="🛠️ 콜백 지옥 해결 방법에 대한 직접 링크" title="🛠️ 콜백 지옥 해결 방법에 대한 직접 링크">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="1-함수-분리">1. 함수 분리<a href="https://junyeol.github.io/blog/core-javascript-week7#1-%ED%95%A8%EC%88%98-%EB%B6%84%EB%A6%AC" class="hash-link" aria-label="1. 함수 분리에 대한 직접 링크" title="1. 함수 분리에 대한 직접 링크">​</a></h3>
<div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">let</span><span class="token plain"> coffeeList </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">""</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">에스프레소추가</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">name</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  coffeeList </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> name</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  console</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">log</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">coffeeList</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token function" style="color:#d73a49">setTimeout</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">아메리카노추가</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">500</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"아메리카노"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">아메리카노추가</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">name</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  coffeeList </span><span class="token operator" style="color:#393A34">+=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">", "</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> name</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  console</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">log</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">coffeeList</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token function" style="color:#d73a49">setTimeout</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">모카추가</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">500</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"카페모카"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">모카추가</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">name</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  coffeeList </span><span class="token operator" style="color:#393A34">+=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">", "</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> name</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  console</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">log</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">coffeeList</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token function" style="color:#d73a49">setTimeout</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">라떼추가</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">500</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"카페라떼"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">라떼추가</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">name</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  coffeeList </span><span class="token operator" style="color:#393A34">+=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">", "</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> name</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  console</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">log</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">coffeeList</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token function" style="color:#d73a49">setTimeout</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">에스프레소추가</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">500</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"에스프레소"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="2-promise-체이닝">2. Promise 체이닝<a href="https://junyeol.github.io/blog/core-javascript-week7#2-promise-%EC%B2%B4%EC%9D%B4%EB%8B%9D" class="hash-link" aria-label="2. Promise 체이닝에 대한 직접 링크" title="2. Promise 체이닝에 대한 직접 링크">​</a></h3>
<div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">커피추가</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">name</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">prevName</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> </span><span class="token class-name">Promise</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">resolve</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token function" style="color:#d73a49">setTimeout</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> newName </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> prevName </span><span class="token operator" style="color:#393A34">?</span><span class="token plain"> </span><span class="token template-string template-punctuation string" style="color:#e3116c">`</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">${</span><span class="token template-string interpolation">prevName</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">}</span><span class="token template-string string" style="color:#e3116c">, </span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">${</span><span class="token template-string interpolation">name</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">}</span><span class="token template-string template-punctuation string" style="color:#e3116c">`</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> name</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        console</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">log</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">newName</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token function" style="color:#d73a49">resolve</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">newName</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">500</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token function" style="color:#d73a49">커피추가</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"에스프레소"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">then</span><span class="token punctuation" style="color:#393A34">(</span><span class="token function" style="color:#d73a49">커피추가</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"아메리카노"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">then</span><span class="token punctuation" style="color:#393A34">(</span><span class="token function" style="color:#d73a49">커피추가</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"카페모카"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">then</span><span class="token punctuation" style="color:#393A34">(</span><span class="token function" style="color:#d73a49">커피추가</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"카페라떼"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre></div></div>
<p><strong>핵심 포인트</strong>: <code>커피추가</code>는 고차함수(함수를 반환하는 함수)이고, 각 단계에서 Promise를 반환해서 체이닝이 가능합니다.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="3-generator">3. Generator<a href="https://junyeol.github.io/blog/core-javascript-week7#3-generator" class="hash-link" aria-label="3. Generator에 대한 직접 링크" title="3. Generator에 대한 직접 링크">​</a></h3>
<div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">커피준비</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">prevName</span><span class="token parameter punctuation" style="color:#393A34">,</span><span class="token parameter"> name</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token function" style="color:#d73a49">setTimeout</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> newName </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> prevName </span><span class="token operator" style="color:#393A34">?</span><span class="token plain"> </span><span class="token template-string template-punctuation string" style="color:#e3116c">`</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">${</span><span class="token template-string interpolation">prevName</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">}</span><span class="token template-string string" style="color:#e3116c">, </span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">${</span><span class="token template-string interpolation">name</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">}</span><span class="token template-string template-punctuation string" style="color:#e3116c">`</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> name</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    console</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">log</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">newName</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    커피메이커</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">next</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">newName</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// 다음 단계로 진행</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">500</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">function</span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">커피제조과정</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> 에스프레소 </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">yield</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">커피준비</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">""</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"에스프레소"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> 아메리카노 </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">yield</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">커피준비</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">에스프레소</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"아메리카노"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> 모카 </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">yield</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">커피준비</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">아메리카노</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"카페모카"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> 라떼 </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">yield</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">커피준비</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">모카</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"카페라떼"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"주문 완료!"</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> 커피메이커 </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">커피제조과정</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">커피메이커</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">next</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// 제조 과정 시작</span><br></span></code></pre></div></div>
<p><strong>핵심 포인트</strong>: <code>yield</code>로 함수를 멈추고, <code>next()</code>로 다시 시작하는 특별한 함수입니다.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="4-asyncawait-추천">4. async/await (추천!)<a href="https://junyeol.github.io/blog/core-javascript-week7#4-asyncawait-%EC%B6%94%EC%B2%9C" class="hash-link" aria-label="4. async/await (추천!)에 대한 직접 링크" title="4. async/await (추천!)에 대한 직접 링크">​</a></h3>
<div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">커피만들기</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">name</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> </span><span class="token class-name">Promise</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">resolve</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">setTimeout</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">resolve</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">name</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">500</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">async</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">커피주문</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">let</span><span class="token plain"> 주문목록 </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">""</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> </span><span class="token function-variable function" style="color:#d73a49">항목추가</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">async</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">name</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> 커피 </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">await</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">커피만들기</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">name</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    주문목록 </span><span class="token operator" style="color:#393A34">+=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">주문목록 </span><span class="token operator" style="color:#393A34">?</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">", "</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">""</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> 커피</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    console</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">log</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">주문목록</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">await</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">항목추가</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"에스프레소"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">await</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">항목추가</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"아메리카노"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">await</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">항목추가</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"카페모카"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">await</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">항목추가</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"카페라떼"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token function" style="color:#d73a49">커피주문</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre></div></div>
<p><strong>핵심 포인트</strong>: 비동기 코드를 동기 코드처럼 위에서 아래로 읽을 수 있게 만드는 마법 같은 문법입니다!</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-정리">📝 정리<a href="https://junyeol.github.io/blog/core-javascript-week7#-%EC%A0%95%EB%A6%AC" class="hash-link" aria-label="📝 정리에 대한 직접 링크" title="📝 정리에 대한 직접 링크">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="콜백-함수란">콜백 함수란?<a href="https://junyeol.github.io/blog/core-javascript-week7#%EC%BD%9C%EB%B0%B1-%ED%95%A8%EC%88%98%EB%9E%80" class="hash-link" aria-label="콜백 함수란?에 대한 직접 링크" title="콜백 함수란?에 대한 직접 링크">​</a></h3>
<p>다른 함수에게 "나중에 실행해줘"라고 맡기는 함수</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="콜백-함수의-특징">콜백 함수의 특징:<a href="https://junyeol.github.io/blog/core-javascript-week7#%EC%BD%9C%EB%B0%B1-%ED%95%A8%EC%88%98%EC%9D%98-%ED%8A%B9%EC%A7%95" class="hash-link" aria-label="콜백 함수의 특징:에 대한 직접 링크" title="콜백 함수의 특징:에 대한 직접 링크">​</a></h3>
<ul>
<li>다른 함수의 매개변수로 전달됨</li>
<li>실행 시점은 호출하는 함수가 결정</li>
<li>this 바인딩이 예상과 다를 수 있음</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="콜백-지옥-해결-방법">콜백 지옥 해결 방법:<a href="https://junyeol.github.io/blog/core-javascript-week7#%EC%BD%9C%EB%B0%B1-%EC%A7%80%EC%98%A5-%ED%95%B4%EA%B2%B0-%EB%B0%A9%EB%B2%95" class="hash-link" aria-label="콜백 지옥 해결 방법:에 대한 직접 링크" title="콜백 지옥 해결 방법:에 대한 직접 링크">​</a></h3>
<ol>
<li><strong>함수를 분리</strong>해서 가독성 향상</li>
<li><strong>Promise</strong>로 체인 구조 만들기</li>
<li><strong>Generator</strong>로 실행 흐름 제어하기</li>
<li><strong>async/await</strong>로 동기 코드처럼 작성하기 (추천!)</li>
</ol>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="-실무-팁">💡 실무 팁<a href="https://junyeol.github.io/blog/core-javascript-week7#-%EC%8B%A4%EB%AC%B4-%ED%8C%81" class="hash-link" aria-label="💡 실무 팁에 대한 직접 링크" title="💡 실무 팁에 대한 직접 링크">​</a></h3>
<p>콜백 함수를 사용할 때는 항상 "누가 언제 이 함수를 호출하는가?"를 생각해보세요. 그러면 예상치 못한 동작을 피할 수 있습니다!</p>
<hr>
<p><strong>스터디</strong>: 코어 자바스크립트 7주차</p>]]></content:encoded>
            <category>JavaScript</category>
            <category>콜백 함수</category>
            <category>비동기</category>
            <category>Promise</category>
            <category>async/await</category>
            <category>스터디</category>
        </item>
        <item>
            <title><![CDATA[Lv.1 - 나누어 떨어지는 숫자 배열]]></title>
            <link>https://junyeol.github.io/blog/programmers-divisible-array</link>
            <guid>https://junyeol.github.io/blog/programmers-divisible-array</guid>
            <pubDate>Wed, 17 Sep 2025 00:00:00 GMT</pubDate>
            <description><![CDATA[프로그래머스 Level 1 문제 "나누어 떨어지는 숫자 배열"]]></description>
            <content:encoded><![CDATA[<p>프로그래머스 Level 1 문제 "나누어 떨어지는 숫자 배열"</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-문제-설명">📋 문제 설명<a href="https://junyeol.github.io/blog/programmers-divisible-array#-%EB%AC%B8%EC%A0%9C-%EC%84%A4%EB%AA%85" class="hash-link" aria-label="📋 문제 설명에 대한 직접 링크" title="📋 문제 설명에 대한 직접 링크">​</a></h2>
<p>array의 각 element 중 divisor로 나누어 떨어지는 값을 오름차순으로 정렬한 배열을 반환하는 함수, solution을 작성해주세요. divisor로 나누어 떨어지는 element가 하나도 없다면 배열에 -1을 담아 반환하세요.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-제한사항">🔒 제한사항<a href="https://junyeol.github.io/blog/programmers-divisible-array#-%EC%A0%9C%ED%95%9C%EC%82%AC%ED%95%AD" class="hash-link" aria-label="🔒 제한사항에 대한 직접 링크" title="🔒 제한사항에 대한 직접 링크">​</a></h2>
<ul>
<li>arr은 자연수를 담은 배열입니다.</li>
<li>정수 i, j에 대해 i ≠ j 이면 arr[i] ≠ arr[j] 입니다.</li>
<li>divisor는 자연수입니다.</li>
<li>array는 길이 1 이상인 배열입니다.</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-입출력-예">📝 입출력 예<a href="https://junyeol.github.io/blog/programmers-divisible-array#-%EC%9E%85%EC%B6%9C%EB%A0%A5-%EC%98%88" class="hash-link" aria-label="📝 입출력 예에 대한 직접 링크" title="📝 입출력 예에 대한 직접 링크">​</a></h2>
<table><thead><tr><th>arr</th><th>divisor</th><th>return</th></tr></thead><tbody><tr><td>[5, 9, 7, 10]</td><td>5</td><td>[5, 10]</td></tr><tr><td>[2, 36, 1, 3]</td><td>1</td><td>[1, 2, 3, 36]</td></tr><tr><td>[3, 2, 6]</td><td>10</td><td>[-1]</td></tr></tbody></table>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="입출력-예-설명">입출력 예 설명<a href="https://junyeol.github.io/blog/programmers-divisible-array#%EC%9E%85%EC%B6%9C%EB%A0%A5-%EC%98%88-%EC%84%A4%EB%AA%85" class="hash-link" aria-label="입출력 예 설명에 대한 직접 링크" title="입출력 예 설명에 대한 직접 링크">​</a></h3>
<p><strong>입출력 예 #1</strong></p>
<ul>
<li>arr의 원소 중 5로 나누어 떨어지는 원소는 5와 10입니다.</li>
<li>따라서 [5, 10]을 리턴합니다.</li>
</ul>
<p><strong>입출력 예 #2</strong></p>
<ul>
<li>arr의 모든 원소는 1로 나누어 떨어집니다.</li>
<li>원소를 오름차순으로 정렬해 [1, 2, 3, 36]을 리턴합니다.</li>
</ul>
<p><strong>입출력 예 #3</strong></p>
<ul>
<li>3, 2, 6은 10으로 나누어 떨어지지 않습니다.</li>
<li>나누어 떨어지는 원소가 없으므로 [-1]을 리턴합니다.</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-해결-과정">💡 해결 과정<a href="https://junyeol.github.io/blog/programmers-divisible-array#-%ED%95%B4%EA%B2%B0-%EA%B3%BC%EC%A0%95" class="hash-link" aria-label="💡 해결 과정에 대한 직접 링크" title="💡 해결 과정에 대한 직접 링크">​</a></h2>
<p>이 문제는 다음과 같은 단계로 접근할 수 있습니다:</p>
<ol>
<li><strong>필터링</strong>: 배열에서 divisor로 나누어 떨어지는 원소들만 추출</li>
<li><strong>정렬</strong>: 추출된 원소들을 오름차순으로 정렬</li>
<li><strong>예외 처리</strong>: 나누어 떨어지는 원소가 없다면 [-1] 반환</li>
</ol>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-정답-코드">✅ 정답 코드<a href="https://junyeol.github.io/blog/programmers-divisible-array#-%EC%A0%95%EB%8B%B5-%EC%BD%94%EB%93%9C" class="hash-link" aria-label="✅ 정답 코드에 대한 직접 링크" title="✅ 정답 코드에 대한 직접 링크">​</a></h2>
<div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">solution</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">arr</span><span class="token parameter punctuation" style="color:#393A34">,</span><span class="token parameter"> divisor</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">let</span><span class="token plain"> result </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">for</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">let</span><span class="token plain"> num </span><span class="token keyword" style="color:#00009f">of</span><span class="token plain"> arr</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">num </span><span class="token operator" style="color:#393A34">%</span><span class="token plain"> divisor </span><span class="token operator" style="color:#393A34">===</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      result</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">push</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">num</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> result</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">length </span><span class="token operator" style="color:#393A34">===</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">?</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token operator" style="color:#393A34">-</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> result</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">sort</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">a</span><span class="token parameter punctuation" style="color:#393A34">,</span><span class="token parameter"> b</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=&gt;</span><span class="token plain"> a </span><span class="token operator" style="color:#393A34">-</span><span class="token plain"> b</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-코드-설명">🔍 코드 설명<a href="https://junyeol.github.io/blog/programmers-divisible-array#-%EC%BD%94%EB%93%9C-%EC%84%A4%EB%AA%85" class="hash-link" aria-label="🔍 코드 설명에 대한 직접 링크" title="🔍 코드 설명에 대한 직접 링크">​</a></h2>
<ol>
<li>
<p><strong>변수 초기화</strong>: <code>let result = []</code>로 나누어 떨어지는 원소들을 담을 빈 배열 생성</p>
</li>
<li>
<p><strong>for...of 반복문</strong>: 배열의 각 원소를 순회하며 조건 확인</p>
<ul>
<li><code>for(let num of arr)</code>: 배열의 각 원소를 num 변수에 할당</li>
</ul>
</li>
<li>
<p><strong>조건 검사</strong>: <code>if(num % divisor === 0)</code></p>
<ul>
<li>나머지 연산자(%)를 사용해 나누어 떨어지는지 확인</li>
<li>나머지가 0이면 나누어 떨어지는 수</li>
</ul>
</li>
<li>
<p><strong>배열에 추가</strong>: <code>result.push(num)</code></p>
<ul>
<li>조건을 만족하는 원소를 result 배열에 추가</li>
</ul>
</li>
<li>
<p><strong>결과 반환</strong>: <code>return result.length === 0 ? [-1] : result.sort((a, b) =&gt; a - b)</code></p>
<ul>
<li>삼항 연산자로 빈 배열 체크</li>
<li>원소가 없으면 [-1], 있으면 오름차순 정렬 후 반환</li>
</ul>
</li>
</ol>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-배운-점">📚 배운 점<a href="https://junyeol.github.io/blog/programmers-divisible-array#-%EB%B0%B0%EC%9A%B4-%EC%A0%90" class="hash-link" aria-label="📚 배운 점에 대한 직접 링크" title="📚 배운 점에 대한 직접 링크">​</a></h2>
<ul>
<li><strong>for...of 반복문 활용</strong>: 배열의 각 원소를 간단하게 순회</li>
<li><strong>조건문과 배열 메서드 조합</strong>: if문으로 조건 확인 후 push()로 원소 추가</li>
<li><strong>삼항 연산자 활용</strong>: 간결한 조건부 반환문 작성</li>
<li><strong>숫자 정렬 주의사항</strong>: <code>sort()</code> 메서드는 기본적으로 문자열 정렬이므로 숫자 정렬 시 비교 함수 필요</li>
</ul>
<hr>
<p><strong>문제 출처</strong>: <a href="https://programmers.co.kr/" target="_blank" rel="noopener noreferrer">프로그래머스</a></p>]]></content:encoded>
            <category>프로그래머스</category>
            <category>알고리즘</category>
            <category>코딩테스트</category>
            <category>JavaScript</category>
            <category>배열</category>
        </item>
        <item>
            <title><![CDATA[Lv.1 - 없는 숫자 더하기]]></title>
            <link>https://junyeol.github.io/blog/programmers-missing-numbers</link>
            <guid>https://junyeol.github.io/blog/programmers-missing-numbers</guid>
            <pubDate>Wed, 17 Sep 2025 00:00:00 GMT</pubDate>
            <description><![CDATA[프로그래머스 Level 1 문제 "없는 숫자 더하기"]]></description>
            <content:encoded><![CDATA[<p>프로그래머스 Level 1 문제 "없는 숫자 더하기"</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-문제-설명">📋 문제 설명<a href="https://junyeol.github.io/blog/programmers-missing-numbers#-%EB%AC%B8%EC%A0%9C-%EC%84%A4%EB%AA%85" class="hash-link" aria-label="📋 문제 설명에 대한 직접 링크" title="📋 문제 설명에 대한 직접 링크">​</a></h2>
<p>0부터 9까지의 숫자 중 일부가 들어있는 정수 배열 numbers가 매개변수로 주어집니다. numbers에서 찾을 수 없는 0부터 9까지의 숫자를 모두 찾아 더한 수를 return 하도록 solution 함수를 완성해주세요.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-제한사항">🔒 제한사항<a href="https://junyeol.github.io/blog/programmers-missing-numbers#-%EC%A0%9C%ED%95%9C%EC%82%AC%ED%95%AD" class="hash-link" aria-label="🔒 제한사항에 대한 직접 링크" title="🔒 제한사항에 대한 직접 링크">​</a></h2>
<ul>
<li>1 ≤ numbers의 길이 ≤ 9</li>
<li>0 ≤ numbers의 모든 원소 ≤ 9</li>
<li>numbers의 모든 원소는 서로 다릅니다.</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-입출력-예">📝 입출력 예<a href="https://junyeol.github.io/blog/programmers-missing-numbers#-%EC%9E%85%EC%B6%9C%EB%A0%A5-%EC%98%88" class="hash-link" aria-label="📝 입출력 예에 대한 직접 링크" title="📝 입출력 예에 대한 직접 링크">​</a></h2>
<table><thead><tr><th>numbers</th><th>result</th></tr></thead><tbody><tr><td>[1,2,3,4,6,7,8,0]</td><td>14</td></tr><tr><td>[5,8,4,0,6,7,9]</td><td>6</td></tr></tbody></table>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="입출력-예-설명">입출력 예 설명<a href="https://junyeol.github.io/blog/programmers-missing-numbers#%EC%9E%85%EC%B6%9C%EB%A0%A5-%EC%98%88-%EC%84%A4%EB%AA%85" class="hash-link" aria-label="입출력 예 설명에 대한 직접 링크" title="입출력 예 설명에 대한 직접 링크">​</a></h3>
<p><strong>입출력 예 #1</strong></p>
<ul>
<li>5, 9가 numbers에 없으므로, 5 + 9 = 14를 return 해야 합니다.</li>
</ul>
<p><strong>입출력 예 #2</strong></p>
<ul>
<li>1, 2, 3이 numbers에 없으므로, 1 + 2 + 3 = 6을 return 해야 합니다.</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-해결-과정">💡 해결 과정<a href="https://junyeol.github.io/blog/programmers-missing-numbers#-%ED%95%B4%EA%B2%B0-%EA%B3%BC%EC%A0%95" class="hash-link" aria-label="💡 해결 과정에 대한 직접 링크" title="💡 해결 과정에 대한 직접 링크">​</a></h2>
<p>이 문제는 다음과 같은 방법으로 접근할 수 있습니다:</p>
<ol>
<li><strong>전체 합 계산</strong>: 0부터 9까지의 총합은 45입니다</li>
<li><strong>주어진 배열의 합 계산</strong>: numbers 배열의 모든 원소 합을 구합니다</li>
<li><strong>차이 계산</strong>: 전체 합에서 배열의 합을 빼면 없는 숫자들의 합이 됩니다</li>
</ol>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-정답-코드">✅ 정답 코드<a href="https://junyeol.github.io/blog/programmers-missing-numbers#-%EC%A0%95%EB%8B%B5-%EC%BD%94%EB%93%9C" class="hash-link" aria-label="✅ 정답 코드에 대한 직접 링크" title="✅ 정답 코드에 대한 직접 링크">​</a></h2>
<div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">solution</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">numbers</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> totalSum </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">45</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// 0부터 9까지의 총합</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> numbersSum </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> numbers</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">reduce</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">acc</span><span class="token parameter punctuation" style="color:#393A34">,</span><span class="token parameter"> num</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=&gt;</span><span class="token plain"> acc </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> num</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> totalSum </span><span class="token operator" style="color:#393A34">-</span><span class="token plain"> numbersSum</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-코드-설명">🔍 코드 설명<a href="https://junyeol.github.io/blog/programmers-missing-numbers#-%EC%BD%94%EB%93%9C-%EC%84%A4%EB%AA%85" class="hash-link" aria-label="🔍 코드 설명에 대한 직접 링크" title="🔍 코드 설명에 대한 직접 링크">​</a></h2>
<ol>
<li>
<p><strong>전체 합 상수</strong>: <code>const totalSum = 45</code></p>
<ul>
<li>0 + 1 + 2 + 3 + 4 + 5 + 6 + 7 + 8 + 9 = 45</li>
</ul>
</li>
<li>
<p><strong>배열 원소 합 계산</strong>: <code>numbers.reduce((acc, num) =&gt; acc + num, 0)</code></p>
<ul>
<li><code>reduce()</code> 메서드를 사용해 배열의 모든 원소를 더함</li>
<li>초기값은 0으로 설정</li>
</ul>
</li>
<li>
<p><strong>결과 반환</strong>: <code>totalSum - numbersSum</code></p>
<ul>
<li>전체 합에서 주어진 배열의 합을 빼면 없는 숫자들의 합</li>
</ul>
</li>
</ol>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-다른-해결-방법">🚀 다른 해결 방법<a href="https://junyeol.github.io/blog/programmers-missing-numbers#-%EB%8B%A4%EB%A5%B8-%ED%95%B4%EA%B2%B0-%EB%B0%A9%EB%B2%95" class="hash-link" aria-label="🚀 다른 해결 방법에 대한 직접 링크" title="🚀 다른 해결 방법에 대한 직접 링크">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="방법-1-for문-사용">방법 1: for문 사용<a href="https://junyeol.github.io/blog/programmers-missing-numbers#%EB%B0%A9%EB%B2%95-1-for%EB%AC%B8-%EC%82%AC%EC%9A%A9" class="hash-link" aria-label="방법 1: for문 사용에 대한 직접 링크" title="방법 1: for문 사용에 대한 직접 링크">​</a></h3>
<div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">solution</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">numbers</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">let</span><span class="token plain"> sum </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">for</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">let</span><span class="token plain"> i </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> i </span><span class="token operator" style="color:#393A34">&lt;=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">9</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> i</span><span class="token operator" style="color:#393A34">++</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">!</span><span class="token plain">numbers</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">includes</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">i</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      sum </span><span class="token operator" style="color:#393A34">+=</span><span class="token plain"> i</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> sum</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="방법-2-filter와-reduce-조합">방법 2: filter와 reduce 조합<a href="https://junyeol.github.io/blog/programmers-missing-numbers#%EB%B0%A9%EB%B2%95-2-filter%EC%99%80-reduce-%EC%A1%B0%ED%95%A9" class="hash-link" aria-label="방법 2: filter와 reduce 조합에 대한 직접 링크" title="방법 2: filter와 reduce 조합에 대한 직접 링크">​</a></h3>
<div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">solution</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">numbers</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> Array</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">from</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> </span><span class="token literal-property property" style="color:#36acaa">length</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">10</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">_</span><span class="token parameter punctuation" style="color:#393A34">,</span><span class="token parameter"> i</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=&gt;</span><span class="token plain"> i</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">filter</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">num</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">!</span><span class="token plain">numbers</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">includes</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">num</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">reduce</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">acc</span><span class="token parameter punctuation" style="color:#393A34">,</span><span class="token parameter"> num</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=&gt;</span><span class="token plain"> acc </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> num</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-배운-점">📚 배운 점<a href="https://junyeol.github.io/blog/programmers-missing-numbers#-%EB%B0%B0%EC%9A%B4-%EC%A0%90" class="hash-link" aria-label="📚 배운 점에 대한 직접 링크" title="📚 배운 점에 대한 직접 링크">​</a></h2>
<ul>
<li><strong>수학적 접근</strong>: 전체 합에서 주어진 합을 빼는 효율적인 방법</li>
<li><strong>reduce() 메서드</strong>: 배열의 모든 원소를 하나의 값으로 축약하는 유용한 메서드</li>
<li><strong>시간 복잡도</strong>: O(n)으로 매우 효율적인 해결책</li>
<li><strong>코드 간결성</strong>: 수학적 사고로 복잡한 로직을 단순화</li>
</ul>
<hr>
<p><strong>문제 출처</strong>: <a href="https://programmers.co.kr/" target="_blank" rel="noopener noreferrer">프로그래머스</a></p>]]></content:encoded>
            <category>프로그래머스</category>
            <category>알고리즘</category>
            <category>코딩테스트</category>
            <category>JavaScript</category>
            <category>배열</category>
        </item>
        <item>
            <title><![CDATA[Lv.1 - 하샤드 수]]></title>
            <link>https://junyeol.github.io/blog/programmers-harshad-number</link>
            <guid>https://junyeol.github.io/blog/programmers-harshad-number</guid>
            <pubDate>Tue, 16 Sep 2025 00:00:00 GMT</pubDate>
            <description><![CDATA[프로그래머스 Level 1 문제 "하샤드 수"]]></description>
            <content:encoded><![CDATA[<p>프로그래머스 Level 1 문제 "하샤드 수"</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-문제-설명">📋 문제 설명<a href="https://junyeol.github.io/blog/programmers-harshad-number#-%EB%AC%B8%EC%A0%9C-%EC%84%A4%EB%AA%85" class="hash-link" aria-label="📋 문제 설명에 대한 직접 링크" title="📋 문제 설명에 대한 직접 링크">​</a></h2>
<p>양의 정수 x가 하샤드 수이려면 x의 자릿수의 합으로 x가 나누어져야 합니다. 예를 들어 18의 자릿수 합은 1+8=9이고, 18은 9로 나누어 떨어지므로 18은 하샤드 수입니다. 자연수 x를 입력받아 x가 하샤드 수인지 아닌지 검사하는 함수, solution을 완성해주세요.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-제한-조건">🔒 제한 조건<a href="https://junyeol.github.io/blog/programmers-harshad-number#-%EC%A0%9C%ED%95%9C-%EC%A1%B0%EA%B1%B4" class="hash-link" aria-label="🔒 제한 조건에 대한 직접 링크" title="🔒 제한 조건에 대한 직접 링크">​</a></h2>
<ul>
<li>x는 1 이상, 10000 이하인 정수입니다.</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-입출력-예">📝 입출력 예<a href="https://junyeol.github.io/blog/programmers-harshad-number#-%EC%9E%85%EC%B6%9C%EB%A0%A5-%EC%98%88" class="hash-link" aria-label="📝 입출력 예에 대한 직접 링크" title="📝 입출력 예에 대한 직접 링크">​</a></h2>
<table><thead><tr><th>x</th><th>return</th></tr></thead><tbody><tr><td>10</td><td>true</td></tr><tr><td>12</td><td>true</td></tr><tr><td>11</td><td>false</td></tr><tr><td>13</td><td>false</td></tr></tbody></table>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="입출력-예-설명">입출력 예 설명<a href="https://junyeol.github.io/blog/programmers-harshad-number#%EC%9E%85%EC%B6%9C%EB%A0%A5-%EC%98%88-%EC%84%A4%EB%AA%85" class="hash-link" aria-label="입출력 예 설명에 대한 직접 링크" title="입출력 예 설명에 대한 직접 링크">​</a></h3>
<p><strong>입출력 예 #1</strong></p>
<ul>
<li>10의 모든 자릿수의 합은 1+0=1입니다. 10은 1로 나누어 떨어지므로 10은 하샤드 수입니다.</li>
</ul>
<p><strong>입출력 예 #2</strong></p>
<ul>
<li>12의 모든 자릿수의 합은 1+2=3입니다. 12는 3으로 나누어 떨어지므로 12는 하샤드 수입니다.</li>
</ul>
<p><strong>입출력 예 #3</strong></p>
<ul>
<li>11의 모든 자릿수의 합은 1+1=2입니다. 11은 2로 나누어 떨어지지 않으므로 11는 하샤드 수가 아닙니다.</li>
</ul>
<p><strong>입출력 예 #4</strong></p>
<ul>
<li>13의 모든 자릿수의 합은 1+3=4입니다. 13은 4로 나누어 떨어지지 않으므로 13은 하샤드 수가 아닙니다.</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-해결-과정">💡 해결 과정<a href="https://junyeol.github.io/blog/programmers-harshad-number#-%ED%95%B4%EA%B2%B0-%EA%B3%BC%EC%A0%95" class="hash-link" aria-label="💡 해결 과정에 대한 직접 링크" title="💡 해결 과정에 대한 직접 링크">​</a></h2>
<p>이 문제는 다음과 같은 단계로 접근할 수 있습니다:</p>
<ol>
<li><strong>자릿수 분리</strong>: 숫자의 각 자릿수를 분리</li>
<li><strong>자릿수 합 계산</strong>: 분리된 자릿수들을 모두 더함</li>
<li><strong>나누어떨어지는지 확인</strong>: 원래 숫자가 자릿수 합으로 나누어떨어지는지 검사</li>
</ol>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-정답-코드">✅ 정답 코드<a href="https://junyeol.github.io/blog/programmers-harshad-number#-%EC%A0%95%EB%8B%B5-%EC%BD%94%EB%93%9C" class="hash-link" aria-label="✅ 정답 코드에 대한 직접 링크" title="✅ 정답 코드에 대한 직접 링크">​</a></h2>
<div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">solution</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">x</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">let</span><span class="token plain"> digitSum </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">let</span><span class="token plain"> temp </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> x</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">while</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">temp </span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    digitSum </span><span class="token operator" style="color:#393A34">+=</span><span class="token plain"> temp </span><span class="token operator" style="color:#393A34">%</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">10</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    temp </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> Math</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">floor</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">temp </span><span class="token operator" style="color:#393A34">/</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">10</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> x </span><span class="token operator" style="color:#393A34">%</span><span class="token plain"> digitSum </span><span class="token operator" style="color:#393A34">===</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-코드-설명">🔍 코드 설명<a href="https://junyeol.github.io/blog/programmers-harshad-number#-%EC%BD%94%EB%93%9C-%EC%84%A4%EB%AA%85" class="hash-link" aria-label="🔍 코드 설명에 대한 직접 링크" title="🔍 코드 설명에 대한 직접 링크">​</a></h2>
<ol>
<li>
<p><strong>변수 초기화</strong>:</p>
<ul>
<li><code>digitSum</code>: 자릿수 합을 저장할 변수</li>
<li><code>temp</code>: 원본 숫자를 보존하기 위한 임시 변수</li>
</ul>
</li>
<li>
<p><strong>while문으로 자릿수 분리</strong>:</p>
<ul>
<li><code>temp % 10</code>: 마지막 자릿수 추출</li>
<li><code>digitSum += temp % 10</code>: 자릿수를 합계에 추가</li>
<li><code>temp = Math.floor(temp / 10)</code>: 마지막 자릿수 제거</li>
</ul>
</li>
<li>
<p><strong>하샤드 수 판별</strong>: <code>x % digitSum === 0</code></p>
<ul>
<li>원래 숫자를 자릿수 합으로 나눈 나머지가 0인지 확인</li>
</ul>
</li>
</ol>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-다른-해결-방법">🚀 다른 해결 방법<a href="https://junyeol.github.io/blog/programmers-harshad-number#-%EB%8B%A4%EB%A5%B8-%ED%95%B4%EA%B2%B0-%EB%B0%A9%EB%B2%95" class="hash-link" aria-label="🚀 다른 해결 방법에 대한 직접 링크" title="🚀 다른 해결 방법에 대한 직접 링크">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="방법-1-문자열-변환-활용">방법 1: 문자열 변환 활용<a href="https://junyeol.github.io/blog/programmers-harshad-number#%EB%B0%A9%EB%B2%95-1-%EB%AC%B8%EC%9E%90%EC%97%B4-%EB%B3%80%ED%99%98-%ED%99%9C%EC%9A%A9" class="hash-link" aria-label="방법 1: 문자열 변환 활용에 대한 직접 링크" title="방법 1: 문자열 변환 활용에 대한 직접 링크">​</a></h3>
<div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">solution</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">x</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> digitSum </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">String</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">x</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">split</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">""</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">reduce</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">sum</span><span class="token parameter punctuation" style="color:#393A34">,</span><span class="token parameter"> digit</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=&gt;</span><span class="token plain"> sum </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">Number</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">digit</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> x </span><span class="token operator" style="color:#393A34">%</span><span class="token plain"> digitSum </span><span class="token operator" style="color:#393A34">===</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="방법-2-arrayfrom-사용">방법 2: Array.from 사용<a href="https://junyeol.github.io/blog/programmers-harshad-number#%EB%B0%A9%EB%B2%95-2-arrayfrom-%EC%82%AC%EC%9A%A9" class="hash-link" aria-label="방법 2: Array.from 사용에 대한 직접 링크" title="방법 2: Array.from 사용에 대한 직접 링크">​</a></h3>
<div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">solution</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">x</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> digitSum </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> Array</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">from</span><span class="token punctuation" style="color:#393A34">(</span><span class="token function" style="color:#d73a49">String</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">x</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">map</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">Number</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">reduce</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">sum</span><span class="token parameter punctuation" style="color:#393A34">,</span><span class="token parameter"> digit</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=&gt;</span><span class="token plain"> sum </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> digit</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> x </span><span class="token operator" style="color:#393A34">%</span><span class="token plain"> digitSum </span><span class="token operator" style="color:#393A34">===</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="방법-3-forof-반복문">방법 3: for...of 반복문<a href="https://junyeol.github.io/blog/programmers-harshad-number#%EB%B0%A9%EB%B2%95-3-forof-%EB%B0%98%EB%B3%B5%EB%AC%B8" class="hash-link" aria-label="방법 3: for...of 반복문에 대한 직접 링크" title="방법 3: for...of 반복문에 대한 직접 링크">​</a></h3>
<div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">solution</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">x</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">let</span><span class="token plain"> digitSum </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">for</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">let</span><span class="token plain"> digit </span><span class="token keyword" style="color:#00009f">of</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">String</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">x</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    digitSum </span><span class="token operator" style="color:#393A34">+=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">Number</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">digit</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> x </span><span class="token operator" style="color:#393A34">%</span><span class="token plain"> digitSum </span><span class="token operator" style="color:#393A34">===</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-배운-점">📚 배운 점<a href="https://junyeol.github.io/blog/programmers-harshad-number#-%EB%B0%B0%EC%9A%B4-%EC%A0%90" class="hash-link" aria-label="📚 배운 점에 대한 직접 링크" title="📚 배운 점에 대한 직접 링크">​</a></h2>
<ul>
<li><strong>자릿수 분리 기법</strong>: <code>% 10</code>과 <code>Math.floor(/ 10)</code>을 활용한 숫자 분해</li>
<li><strong>문자열 변환 활용</strong>: 숫자를 문자열로 변환해서 각 자릿수에 접근하는 방법</li>
<li><strong>하샤드 수 개념</strong>: 자릿수 합으로 나누어떨어지는 수의 특성</li>
<li><strong>여러 접근법</strong>: 수학적 방법과 문자열 처리 방법의 비교</li>
</ul>
<hr>
<p><strong>문제 출처</strong>: <a href="https://programmers.co.kr/" target="_blank" rel="noopener noreferrer">프로그래머스</a></p>]]></content:encoded>
            <category>프로그래머스</category>
            <category>알고리즘</category>
            <category>코딩테스트</category>
            <category>JavaScript</category>
            <category>수학</category>
        </item>
        <item>
            <title><![CDATA[Lv.1 - 음양 더하기]]></title>
            <link>https://junyeol.github.io/blog/programmers-plus-minus</link>
            <guid>https://junyeol.github.io/blog/programmers-plus-minus</guid>
            <pubDate>Tue, 16 Sep 2025 00:00:00 GMT</pubDate>
            <description><![CDATA[프로그래머스 Level 1 문제 "음양 더하기"]]></description>
            <content:encoded><![CDATA[<p>프로그래머스 Level 1 문제 "음양 더하기"</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-문제-설명">📋 문제 설명<a href="https://junyeol.github.io/blog/programmers-plus-minus#-%EB%AC%B8%EC%A0%9C-%EC%84%A4%EB%AA%85" class="hash-link" aria-label="📋 문제 설명에 대한 직접 링크" title="📋 문제 설명에 대한 직접 링크">​</a></h2>
<p>어떤 정수들이 있습니다. 이 정수들의 절댓값을 차례대로 담은 정수 배열 absolutes와 이 정수들의 부호를 차례대로 담은 불리언 배열 signs가 매개변수로 주어집니다. 실제 정수들의 합을 구하여 return 하도록 solution 함수를 완성해주세요.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-제한사항">🔒 제한사항<a href="https://junyeol.github.io/blog/programmers-plus-minus#-%EC%A0%9C%ED%95%9C%EC%82%AC%ED%95%AD" class="hash-link" aria-label="🔒 제한사항에 대한 직접 링크" title="🔒 제한사항에 대한 직접 링크">​</a></h2>
<ul>
<li>absolutes의 길이는 1 이상 1,000 이하입니다.</li>
<li>absolutes의 모든 수는 각각 1 이상 1,000 이하입니다.</li>
<li>signs의 길이는 absolutes의 길이와 같습니다.</li>
<li>signs[i] 가 참이면 absolutes[i] 의 실제 정수가 양수임을, 그렇지 않으면 음수임을 의미합니다.</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-입출력-예">📝 입출력 예<a href="https://junyeol.github.io/blog/programmers-plus-minus#-%EC%9E%85%EC%B6%9C%EB%A0%A5-%EC%98%88" class="hash-link" aria-label="📝 입출력 예에 대한 직접 링크" title="📝 입출력 예에 대한 직접 링크">​</a></h2>
<table><thead><tr><th>absolutes</th><th>signs</th><th>result</th></tr></thead><tbody><tr><td>[4,7,12]</td><td>[true,false,true]</td><td>9</td></tr><tr><td>[1,2,3]</td><td>[false,false,true]</td><td>0</td></tr></tbody></table>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="입출력-예-설명">입출력 예 설명<a href="https://junyeol.github.io/blog/programmers-plus-minus#%EC%9E%85%EC%B6%9C%EB%A0%A5-%EC%98%88-%EC%84%A4%EB%AA%85" class="hash-link" aria-label="입출력 예 설명에 대한 직접 링크" title="입출력 예 설명에 대한 직접 링크">​</a></h3>
<p><strong>입출력 예 #1</strong></p>
<ul>
<li>signs가 [true,false,true] 이므로, 실제 수들의 값은 각각 4, -7, 12입니다.</li>
<li>따라서 세 수의 합인 9를 return 해야 합니다.</li>
</ul>
<p><strong>입출력 예 #2</strong></p>
<ul>
<li>signs가 [false,false,true] 이므로, 실제 수들의 값은 각각 -1, -2, 3입니다.</li>
<li>따라서 세 수의 합인 0을 return 해야 합니다.</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-해결-과정">💡 해결 과정<a href="https://junyeol.github.io/blog/programmers-plus-minus#-%ED%95%B4%EA%B2%B0-%EA%B3%BC%EC%A0%95" class="hash-link" aria-label="💡 해결 과정에 대한 직접 링크" title="💡 해결 과정에 대한 직접 링크">​</a></h2>
<p>이 문제는 다음과 같은 단계로 접근할 수 있습니다:</p>
<ol>
<li><strong>배열 순회</strong>: absolutes 배열과 signs 배열을 동시에 순회</li>
<li><strong>부호 적용</strong>: signs[i]가 true면 양수, false면 음수로 변환</li>
<li><strong>합계 계산</strong>: 변환된 값들을 모두 더함</li>
</ol>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-정답-코드">✅ 정답 코드<a href="https://junyeol.github.io/blog/programmers-plus-minus#-%EC%A0%95%EB%8B%B5-%EC%BD%94%EB%93%9C" class="hash-link" aria-label="✅ 정답 코드에 대한 직접 링크" title="✅ 정답 코드에 대한 직접 링크">​</a></h2>
<div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">solution</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">absolutes</span><span class="token parameter punctuation" style="color:#393A34">,</span><span class="token parameter"> signs</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">let</span><span class="token plain"> sum </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">for</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">let</span><span class="token plain"> i </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> i </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain"> absolutes</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">length</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> i</span><span class="token operator" style="color:#393A34">++</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">signs</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">i</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      sum </span><span class="token operator" style="color:#393A34">+=</span><span class="token plain"> absolutes</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">i</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// 양수</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">else</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      sum </span><span class="token operator" style="color:#393A34">-=</span><span class="token plain"> absolutes</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">i</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// 음수</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> sum</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-코드-설명">🔍 코드 설명<a href="https://junyeol.github.io/blog/programmers-plus-minus#-%EC%BD%94%EB%93%9C-%EC%84%A4%EB%AA%85" class="hash-link" aria-label="🔍 코드 설명에 대한 직접 링크" title="🔍 코드 설명에 대한 직접 링크">​</a></h2>
<ol>
<li>
<p><strong>변수 초기화</strong>: <code>let sum = 0</code>으로 합계를 담을 변수 초기화</p>
</li>
<li>
<p><strong>for문 순회</strong>: 배열의 길이만큼 반복하며 각 인덱스에 접근</p>
</li>
<li>
<p><strong>조건문으로 부호 판단</strong>:</p>
<ul>
<li><code>signs[i]</code>가 true면 <code>absolutes[i]</code>를 그대로 더함</li>
<li><code>signs[i]</code>가 false면 <code>absolutes[i]</code>를 빼기 (음수 효과)</li>
</ul>
</li>
<li>
<p><strong>결과 반환</strong>: 최종 합계 return</p>
</li>
</ol>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-다른-해결-방법">🚀 다른 해결 방법<a href="https://junyeol.github.io/blog/programmers-plus-minus#-%EB%8B%A4%EB%A5%B8-%ED%95%B4%EA%B2%B0-%EB%B0%A9%EB%B2%95" class="hash-link" aria-label="🚀 다른 해결 방법에 대한 직접 링크" title="🚀 다른 해결 방법에 대한 직접 링크">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="방법-1-reduce-사용">방법 1: reduce 사용<a href="https://junyeol.github.io/blog/programmers-plus-minus#%EB%B0%A9%EB%B2%95-1-reduce-%EC%82%AC%EC%9A%A9" class="hash-link" aria-label="방법 1: reduce 사용에 대한 직접 링크" title="방법 1: reduce 사용에 대한 직접 링크">​</a></h3>
<div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">solution</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">absolutes</span><span class="token parameter punctuation" style="color:#393A34">,</span><span class="token parameter"> signs</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> absolutes</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">reduce</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">sum</span><span class="token parameter punctuation" style="color:#393A34">,</span><span class="token parameter"> num</span><span class="token parameter punctuation" style="color:#393A34">,</span><span class="token parameter"> i</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> sum </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">signs</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">i</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">?</span><span class="token plain"> num </span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-</span><span class="token plain">num</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="방법-2-map과-reduce-조합">방법 2: map과 reduce 조합<a href="https://junyeol.github.io/blog/programmers-plus-minus#%EB%B0%A9%EB%B2%95-2-map%EA%B3%BC-reduce-%EC%A1%B0%ED%95%A9" class="hash-link" aria-label="방법 2: map과 reduce 조합에 대한 직접 링크" title="방법 2: map과 reduce 조합에 대한 직접 링크">​</a></h3>
<div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">solution</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">absolutes</span><span class="token parameter punctuation" style="color:#393A34">,</span><span class="token parameter"> signs</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> absolutes</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">map</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">num</span><span class="token parameter punctuation" style="color:#393A34">,</span><span class="token parameter"> i</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">signs</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">i</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">?</span><span class="token plain"> num </span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-</span><span class="token plain">num</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">reduce</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">sum</span><span class="token parameter punctuation" style="color:#393A34">,</span><span class="token parameter"> num</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=&gt;</span><span class="token plain"> sum </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> num</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="방법-3-삼항연산자-활용">방법 3: 삼항연산자 활용<a href="https://junyeol.github.io/blog/programmers-plus-minus#%EB%B0%A9%EB%B2%95-3-%EC%82%BC%ED%95%AD%EC%97%B0%EC%82%B0%EC%9E%90-%ED%99%9C%EC%9A%A9" class="hash-link" aria-label="방법 3: 삼항연산자 활용에 대한 직접 링크" title="방법 3: 삼항연산자 활용에 대한 직접 링크">​</a></h3>
<div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">solution</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">absolutes</span><span class="token parameter punctuation" style="color:#393A34">,</span><span class="token parameter"> signs</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">let</span><span class="token plain"> sum </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">for</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">let</span><span class="token plain"> i </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> i </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain"> absolutes</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">length</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> i</span><span class="token operator" style="color:#393A34">++</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    sum </span><span class="token operator" style="color:#393A34">+=</span><span class="token plain"> signs</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">i</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">?</span><span class="token plain"> absolutes</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">i</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-</span><span class="token plain">absolutes</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">i</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> sum</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-배운-점">📚 배운 점<a href="https://junyeol.github.io/blog/programmers-plus-minus#-%EB%B0%B0%EC%9A%B4-%EC%A0%90" class="hash-link" aria-label="📚 배운 점에 대한 직접 링크" title="📚 배운 점에 대한 직접 링크">​</a></h2>
<ul>
<li><strong>불리언 배열 활용</strong>: true/false 값을 조건문에 직접 사용하는 방법</li>
<li><strong>배열 인덱스 동시 접근</strong>: 두 배열을 같은 인덱스로 접근하는 패턴</li>
<li><strong>삼항연산자</strong>: 간단한 조건문을 한 줄로 표현하는 방법</li>
<li><strong>reduce 메서드</strong>: 배열을 하나의 값으로 축약하는 함수형 프로그래밍 접근</li>
</ul>
<hr>
<p><strong>문제 출처</strong>: <a href="https://programmers.co.kr/" target="_blank" rel="noopener noreferrer">프로그래머스</a></p>]]></content:encoded>
            <category>프로그래머스</category>
            <category>알고리즘</category>
            <category>코딩테스트</category>
            <category>JavaScript</category>
            <category>배열</category>
        </item>
        <item>
            <title><![CDATA[Lv.1 - 문자열 내 p와 y의 개수]]></title>
            <link>https://junyeol.github.io/blog/programmers-count-py</link>
            <guid>https://junyeol.github.io/blog/programmers-count-py</guid>
            <pubDate>Mon, 15 Sep 2025 00:00:00 GMT</pubDate>
            <description><![CDATA[프로그래머스 Level 1 문제 "문자열 내 p와 y의 개수"]]></description>
            <content:encoded><![CDATA[<p>프로그래머스 Level 1 문제 "문자열 내 p와 y의 개수"</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="문제-설명">문제 설명<a href="https://junyeol.github.io/blog/programmers-count-py#%EB%AC%B8%EC%A0%9C-%EC%84%A4%EB%AA%85" class="hash-link" aria-label="문제 설명에 대한 직접 링크" title="문제 설명에 대한 직접 링크">​</a></h2>
<p>대문자와 소문자가 섞여있는 문자열 s가 주어집니다. s에 'p'의 개수와 'y'의 개수를 비교해 같으면 True, 다르면 False를 return 하는 solution를 완성하세요. 'p', 'y' 모두 하나도 없는 경우는 항상 True를 리턴합니다. 단, 개수를 비교할 때 대문자와 소문자는 구별하지 않습니다.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="제한사항">제한사항<a href="https://junyeol.github.io/blog/programmers-count-py#%EC%A0%9C%ED%95%9C%EC%82%AC%ED%95%AD" class="hash-link" aria-label="제한사항에 대한 직접 링크" title="제한사항에 대한 직접 링크">​</a></h2>
<ul>
<li>문자열 s의 길이 : 50 이하의 자연수</li>
<li>문자열 s는 알파벳으로만 이루어져 있습니다.</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="입출력-예">입출력 예<a href="https://junyeol.github.io/blog/programmers-count-py#%EC%9E%85%EC%B6%9C%EB%A0%A5-%EC%98%88" class="hash-link" aria-label="입출력 예에 대한 직접 링크" title="입출력 예에 대한 직접 링크">​</a></h2>
<table><thead><tr><th>s</th><th>answer</th></tr></thead><tbody><tr><td>"pPoooyY"</td><td>true</td></tr><tr><td>"Pyy"</td><td>false</td></tr></tbody></table>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="입출력-예-설명">입출력 예 설명<a href="https://junyeol.github.io/blog/programmers-count-py#%EC%9E%85%EC%B6%9C%EB%A0%A5-%EC%98%88-%EC%84%A4%EB%AA%85" class="hash-link" aria-label="입출력 예 설명에 대한 직접 링크" title="입출력 예 설명에 대한 직접 링크">​</a></h3>
<p><strong>입출력 예 #1</strong></p>
<ul>
<li>'p'의 개수 2개, 'y'의 개수 2개로 같으므로 true를 return 합니다.</li>
</ul>
<p><strong>입출력 예 #2</strong></p>
<ul>
<li>'p'의 개수 1개, 'y'의 개수 2개로 다르므로 false를 return 합니다.</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="해결-과정">해결 과정<a href="https://junyeol.github.io/blog/programmers-count-py#%ED%95%B4%EA%B2%B0-%EA%B3%BC%EC%A0%95" class="hash-link" aria-label="해결 과정에 대한 직접 링크" title="해결 과정에 대한 직접 링크">​</a></h2>
<ol>
<li><strong>대소문자 통일</strong>: 문자열을 모두 소문자로 변환</li>
<li><strong>문자 개수 계산</strong>: 'p'와 'y'의 개수를 각각 셈</li>
<li><strong>개수 비교</strong>: 두 개수가 같은지 확인</li>
</ol>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="정답-코드">정답 코드<a href="https://junyeol.github.io/blog/programmers-count-py#%EC%A0%95%EB%8B%B5-%EC%BD%94%EB%93%9C" class="hash-link" aria-label="정답 코드에 대한 직접 링크" title="정답 코드에 대한 직접 링크">​</a></h2>
<div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">solution</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">s</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> lowerS </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> s</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">toLowerCase</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">let</span><span class="token plain"> pCount </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">let</span><span class="token plain"> yCount </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">for</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">let</span><span class="token plain"> i </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> i </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain"> lowerS</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">length</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> i</span><span class="token operator" style="color:#393A34">++</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">lowerS</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">i</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">===</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"p"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      pCount</span><span class="token operator" style="color:#393A34">++</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">else</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">lowerS</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">i</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">===</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"y"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      yCount</span><span class="token operator" style="color:#393A34">++</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> pCount </span><span class="token operator" style="color:#393A34">===</span><span class="token plain"> yCount</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="코드-설명">코드 설명<a href="https://junyeol.github.io/blog/programmers-count-py#%EC%BD%94%EB%93%9C-%EC%84%A4%EB%AA%85" class="hash-link" aria-label="코드 설명에 대한 직접 링크" title="코드 설명에 대한 직접 링크">​</a></h2>
<ol>
<li><strong>대소문자 변환</strong>: <code>toLowerCase()</code>로 모든 문자를 소문자로 변환</li>
<li><strong>카운터 초기화</strong>: p와 y의 개수를 저장할 변수 생성</li>
<li><strong>반복문으로 카운팅</strong>: 각 문자를 확인하여 해당하는 카운터 증가</li>
<li><strong>결과 반환</strong>: 두 카운터가 같은지 비교</li>
</ol>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="다른-해결-방법">다른 해결 방법<a href="https://junyeol.github.io/blog/programmers-count-py#%EB%8B%A4%EB%A5%B8-%ED%95%B4%EA%B2%B0-%EB%B0%A9%EB%B2%95" class="hash-link" aria-label="다른 해결 방법에 대한 직접 링크" title="다른 해결 방법에 대한 직접 링크">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="방법-1-filter-사용">방법 1: filter 사용<a href="https://junyeol.github.io/blog/programmers-count-py#%EB%B0%A9%EB%B2%95-1-filter-%EC%82%AC%EC%9A%A9" class="hash-link" aria-label="방법 1: filter 사용에 대한 직접 링크" title="방법 1: filter 사용에 대한 직접 링크">​</a></h3>
<div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">solution</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">s</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> lowerS </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> s</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">toLowerCase</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> pCount </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> lowerS</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">split</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">""</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">filter</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">char</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=&gt;</span><span class="token plain"> char </span><span class="token operator" style="color:#393A34">===</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"p"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">length</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> yCount </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> lowerS</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">split</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">""</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">filter</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">char</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=&gt;</span><span class="token plain"> char </span><span class="token operator" style="color:#393A34">===</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"y"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">length</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> pCount </span><span class="token operator" style="color:#393A34">===</span><span class="token plain"> yCount</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="방법-2-match-사용">방법 2: match 사용<a href="https://junyeol.github.io/blog/programmers-count-py#%EB%B0%A9%EB%B2%95-2-match-%EC%82%AC%EC%9A%A9" class="hash-link" aria-label="방법 2: match 사용에 대한 직접 링크" title="방법 2: match 사용에 대한 직접 링크">​</a></h3>
<div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">solution</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">s</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> pCount </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">s</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">toLowerCase</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">match</span><span class="token punctuation" style="color:#393A34">(</span><span class="token regex regex-delimiter" style="color:#36acaa">/</span><span class="token regex regex-source language-regex" style="color:#36acaa">p</span><span class="token regex regex-delimiter" style="color:#36acaa">/</span><span class="token regex regex-flags" style="color:#36acaa">g</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">||</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">length</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> yCount </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">s</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">toLowerCase</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">match</span><span class="token punctuation" style="color:#393A34">(</span><span class="token regex regex-delimiter" style="color:#36acaa">/</span><span class="token regex regex-source language-regex" style="color:#36acaa">y</span><span class="token regex regex-delimiter" style="color:#36acaa">/</span><span class="token regex regex-flags" style="color:#36acaa">g</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">||</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">length</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> pCount </span><span class="token operator" style="color:#393A34">===</span><span class="token plain"> yCount</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="방법-3-reduce-사용">방법 3: reduce 사용<a href="https://junyeol.github.io/blog/programmers-count-py#%EB%B0%A9%EB%B2%95-3-reduce-%EC%82%AC%EC%9A%A9" class="hash-link" aria-label="방법 3: reduce 사용에 대한 직접 링크" title="방법 3: reduce 사용에 대한 직접 링크">​</a></h3>
<div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">solution</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">s</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> counts </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> s</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">toLowerCase</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">split</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">""</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">reduce</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">acc</span><span class="token parameter punctuation" style="color:#393A34">,</span><span class="token parameter"> char</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">char </span><span class="token operator" style="color:#393A34">===</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"p"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> acc</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">p</span><span class="token operator" style="color:#393A34">++</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">char </span><span class="token operator" style="color:#393A34">===</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"y"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> acc</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">y</span><span class="token operator" style="color:#393A34">++</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> acc</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> </span><span class="token literal-property property" style="color:#36acaa">p</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token literal-property property" style="color:#36acaa">y</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> counts</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">p </span><span class="token operator" style="color:#393A34">===</span><span class="token plain"> counts</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">y</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="배운-점">배운 점<a href="https://junyeol.github.io/blog/programmers-count-py#%EB%B0%B0%EC%9A%B4-%EC%A0%90" class="hash-link" aria-label="배운 점에 대한 직접 링크" title="배운 점에 대한 직접 링크">​</a></h2>
<ul>
<li><strong>대소문자 처리</strong>: toLowerCase()를 활용한 문자열 정규화</li>
<li><strong>문자 개수 세기</strong>: for문, filter, match 등 다양한 방법</li>
<li><strong>정규식 활용</strong>: match()와 정규식을 이용한 문자 탐색</li>
<li><strong>조건문 활용</strong>: 특정 문자에 대한 조건 처리</li>
</ul>
<hr>
<p><strong>문제 출처</strong>: <a href="https://programmers.co.kr/" target="_blank" rel="noopener noreferrer">프로그래머스</a></p>]]></content:encoded>
            <category>프로그래머스</category>
            <category>알고리즘</category>
            <category>코딩테스트</category>
            <category>JavaScript</category>
            <category>문자열</category>
        </item>
        <item>
            <title><![CDATA[Lv.1 - 정수 제곱근 판별]]></title>
            <link>https://junyeol.github.io/blog/programmers-sqrt-check</link>
            <guid>https://junyeol.github.io/blog/programmers-sqrt-check</guid>
            <pubDate>Mon, 15 Sep 2025 00:00:00 GMT</pubDate>
            <description><![CDATA[프로그래머스 Level 1 문제 "정수 제곱근 판별"]]></description>
            <content:encoded><![CDATA[<p>프로그래머스 Level 1 문제 "정수 제곱근 판별"</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="문제-설명">문제 설명<a href="https://junyeol.github.io/blog/programmers-sqrt-check#%EB%AC%B8%EC%A0%9C-%EC%84%A4%EB%AA%85" class="hash-link" aria-label="문제 설명에 대한 직접 링크" title="문제 설명에 대한 직접 링크">​</a></h2>
<p>임의의 양의 정수 n에 대해, n이 어떤 양의 정수 x의 제곱인지 아닌지 판단하려 합니다. n이 양의 정수 x의 제곱이라면 x+1의 제곱을 리턴하고, n이 양의 정수 x의 제곱이 아니라면 -1을 리턴하는 함수를 완성하세요.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="제한-사항">제한 사항<a href="https://junyeol.github.io/blog/programmers-sqrt-check#%EC%A0%9C%ED%95%9C-%EC%82%AC%ED%95%AD" class="hash-link" aria-label="제한 사항에 대한 직접 링크" title="제한 사항에 대한 직접 링크">​</a></h2>
<ul>
<li>n은 1이상, 50000000000000 이하인 양의 정수입니다.</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="입출력-예">입출력 예<a href="https://junyeol.github.io/blog/programmers-sqrt-check#%EC%9E%85%EC%B6%9C%EB%A0%A5-%EC%98%88" class="hash-link" aria-label="입출력 예에 대한 직접 링크" title="입출력 예에 대한 직접 링크">​</a></h2>
<table><thead><tr><th>n</th><th>return</th></tr></thead><tbody><tr><td>121</td><td>144</td></tr><tr><td>3</td><td>-1</td></tr></tbody></table>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="입출력-예-설명">입출력 예 설명<a href="https://junyeol.github.io/blog/programmers-sqrt-check#%EC%9E%85%EC%B6%9C%EB%A0%A5-%EC%98%88-%EC%84%A4%EB%AA%85" class="hash-link" aria-label="입출력 예 설명에 대한 직접 링크" title="입출력 예 설명에 대한 직접 링크">​</a></h3>
<p><strong>입출력 예#1</strong></p>
<ul>
<li>121은 양의 정수 11의 제곱이므로, (11+1)를 제곱한 144를 리턴합니다.</li>
</ul>
<p><strong>입출력 예#2</strong></p>
<ul>
<li>3은 양의 정수의 제곱이 아니므로, -1을 리턴합니다.</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="해결-과정">해결 과정<a href="https://junyeol.github.io/blog/programmers-sqrt-check#%ED%95%B4%EA%B2%B0-%EA%B3%BC%EC%A0%95" class="hash-link" aria-label="해결 과정에 대한 직접 링크" title="해결 과정에 대한 직접 링크">​</a></h2>
<p>이 문제는 다음과 같은 단계로 접근할 수 있습니다:</p>
<ol>
<li><strong>제곱근 계산</strong>: Math.sqrt()를 사용해 n의 제곱근을 구함</li>
<li><strong>정수 여부 확인</strong>: 제곱근이 정수인지 판별</li>
<li><strong>조건에 따른 반환</strong>: 정수면 (제곱근+1)²을 반환, 아니면 -1 반환</li>
</ol>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="정답-코드">정답 코드<a href="https://junyeol.github.io/blog/programmers-sqrt-check#%EC%A0%95%EB%8B%B5-%EC%BD%94%EB%93%9C" class="hash-link" aria-label="정답 코드에 대한 직접 링크" title="정답 코드에 대한 직접 링크">​</a></h2>
<div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">solution</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">n</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> sqrt </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> Math</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">sqrt</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">n</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">sqrt </span><span class="token operator" style="color:#393A34">===</span><span class="token plain"> Math</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">floor</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">sqrt</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> Math</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">pow</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">sqrt </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">2</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">else</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="코드-설명">코드 설명<a href="https://junyeol.github.io/blog/programmers-sqrt-check#%EC%BD%94%EB%93%9C-%EC%84%A4%EB%AA%85" class="hash-link" aria-label="코드 설명에 대한 직접 링크" title="코드 설명에 대한 직접 링크">​</a></h2>
<ol>
<li>
<p><strong>제곱근 계산</strong>: <code>Math.sqrt(n)</code>으로 n의 제곱근을 구함</p>
</li>
<li>
<p><strong>정수 판별</strong>: <code>sqrt === Math.floor(sqrt)</code></p>
<ul>
<li>Math.floor()는 소수점 이하를 버림</li>
<li>제곱근과 버림한 값이 같으면 정수</li>
</ul>
</li>
<li>
<p><strong>결과 반환</strong>:</p>
<ul>
<li>정수면: <code>Math.pow(sqrt + 1, 2)</code> - (제곱근+1)의 제곱</li>
<li>정수가 아니면: -1 반환</li>
</ul>
</li>
</ol>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="다른-해결-방법">다른 해결 방법<a href="https://junyeol.github.io/blog/programmers-sqrt-check#%EB%8B%A4%EB%A5%B8-%ED%95%B4%EA%B2%B0-%EB%B0%A9%EB%B2%95" class="hash-link" aria-label="다른 해결 방법에 대한 직접 링크" title="다른 해결 방법에 대한 직접 링크">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="방법-1-numberisinteger-사용">방법 1: Number.isInteger 사용<a href="https://junyeol.github.io/blog/programmers-sqrt-check#%EB%B0%A9%EB%B2%95-1-numberisinteger-%EC%82%AC%EC%9A%A9" class="hash-link" aria-label="방법 1: Number.isInteger 사용에 대한 직접 링크" title="방법 1: Number.isInteger 사용에 대한 직접 링크">​</a></h3>
<div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">solution</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">n</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> sqrt </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> Math</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">sqrt</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">n</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">Number</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">isInteger</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">sqrt</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> Math</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">pow</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">sqrt </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">2</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">else</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="방법-2-삼항연산자-사용">방법 2: 삼항연산자 사용<a href="https://junyeol.github.io/blog/programmers-sqrt-check#%EB%B0%A9%EB%B2%95-2-%EC%82%BC%ED%95%AD%EC%97%B0%EC%82%B0%EC%9E%90-%EC%82%AC%EC%9A%A9" class="hash-link" aria-label="방법 2: 삼항연산자 사용에 대한 직접 링크" title="방법 2: 삼항연산자 사용에 대한 직접 링크">​</a></h3>
<div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">solution</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">n</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> sqrt </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> Math</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">sqrt</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">n</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> Number</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">isInteger</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">sqrt</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">?</span><span class="token plain"> Math</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">pow</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">sqrt </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">2</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="방법-3--연산자-사용">방법 3: ** 연산자 사용<a href="https://junyeol.github.io/blog/programmers-sqrt-check#%EB%B0%A9%EB%B2%95-3--%EC%97%B0%EC%82%B0%EC%9E%90-%EC%82%AC%EC%9A%A9" class="hash-link" aria-label="방법 3: ** 연산자 사용에 대한 직접 링크" title="방법 3: ** 연산자 사용에 대한 직접 링크">​</a></h3>
<div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">solution</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">n</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> sqrt </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> Math</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">sqrt</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">n</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> sqrt </span><span class="token operator" style="color:#393A34">%</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">===</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">?</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">sqrt </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">**</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">2</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="배운-점">배운 점<a href="https://junyeol.github.io/blog/programmers-sqrt-check#%EB%B0%B0%EC%9A%B4-%EC%A0%90" class="hash-link" aria-label="배운 점에 대한 직접 링크" title="배운 점에 대한 직접 링크">​</a></h2>
<ul>
<li><strong>Math.sqrt() 활용</strong>: 제곱근을 구하는 기본 메서드</li>
<li><strong>정수 판별 방법</strong>: Math.floor(), Number.isInteger(), % 연산자 활용</li>
<li>**Math.pow() vs ** 연산자**: 거듭제곱을 표현하는 두 가지 방법</li>
<li><strong>제곱근의 성질</strong>: 완전제곱수의 개념과 판별 방법</li>
</ul>
<hr>
<p><strong>문제 출처</strong>: <a href="https://programmers.co.kr/" target="_blank" rel="noopener noreferrer">프로그래머스</a></p>]]></content:encoded>
            <category>프로그래머스</category>
            <category>알고리즘</category>
            <category>코딩테스트</category>
            <category>JavaScript</category>
            <category>수학</category>
        </item>
    </channel>
</rss>